---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-console
  labels:
    app: {{ .Release.Name }}-console
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.web.replicaCount }}
  template:
    metadata:
      annotations:
      {{- if and (.Values.web.tolerations) (semverCompare "<1.6-0" .Capabilities.KubeVersion.GitVersion) }}
        scheduler.alpha.kubernetes.io/tolerations: '{{ toJson .Values.web.tolerations }}'
      {{- end }}
      labels:
        app: {{ .Release.Name }}-console
      name: {{ .Release.Name }}-console
    spec:
      serviceAccount: {{ .Release.Name }}-sa
      containers:
      - name: web
        image: "{{ .Values.imageCredentials.repositoryUriPrefix }}/{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}"
        imagePullPolicy: "{{ .Values.web.image.pullPolicy }}"
        {{- if .Values.privileged }}
        securityContext:
          privileged: {{ .Values.privileged }}
        {{- end }}
        env:
        - name: SCALOCK_DBUSER
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.user "postgres" }}
          {{- if .Values.db.passwordSecret }}
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.dbPasswordName }}
              key: {{ .Values.db.dbPasswordKey }}
          {{- else }}
        - name: SCALOCK_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              key: db-password
          {{- end }}
        - name: SCALOCK_DBNAME
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.name "scalock" }}
        - name: SCALOCK_DBHOST
          {{- if .Values.db.external.enabled }}
          value: {{ .Values.db.external.host }}
          {{- else }}
          value: {{ .Release.Name }}-database-svc
          {{- end }}
        - name: SCALOCK_DBPORT
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.port "5432" | quote }}
        - name: SCALOCK_AUDIT_DBUSER
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.auditUser "postgres" }}
          {{- if .Values.db.passwordSecret }}
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.db.dbAuditPasswordName }}
              key: {{ .Values.db.dbAuditPasswordKey }}
          {{- else }}
          {{- if .Values.db.external.enabled }}
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-audit-password
              key: db-audit-password
          {{- else }}
        - name: SCALOCK_AUDIT_DBPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-database-password
              key: db-password 
          {{- end }}
          {{- end }}
        - name: SCALOCK_AUDIT_DBNAME
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.auditName "slk_audit" }}
        - name: SCALOCK_AUDIT_DBHOST
          {{- if .Values.db.external.enabled }}
          value: {{ .Values.db.external.auditHost }}
          {{- else }}
          value: {{ .Release.Name }}-database-svc
          {{- end }}
        - name: SCALOCK_AUDIT_DBPORT
          value: {{ .Values.db.external.enabled | ternary .Values.db.external.auditPort "5432" | quote }}
          {{- if .Values.admin.secretname }}
        - name: LICENSE_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.admin.secretname }}
              key: {{ .Values.admin.tokenkey }}
          {{- else }}
          {{- if .Values.admin.token }}
        - name: LICENSE_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-console-secrets
              key: license-token
          {{- end }}
          {{- end }}
          {{- if .Values.admin.secretname }}
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.admin.secretname }}
              key: {{ .Values.admin.passwordkey }}
          {{- else }}
          {{- if .Values.admin.password }}
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-console-secrets
              key: admin-password
          {{- end }}
          {{- end }}
          {{- if .Values.db.ssl }}
        - name: SCALOCK_DBSSL
          value: require
          {{- end }}
          {{- if .Values.db.auditssl }}
        - name: SCALOCK_AUDIT_DBSSL
          value: require
          {{- end }}
          {{- if .Values.web.encryptionKey }}
        - name: SCALOCK_ENCRYPTION_KEY
          value: {{ .Values.web.encryptionKey }}
          {{- end }}
          {{- if .Values.dockerless }}
        - name: AQUA_DOCKERLESS_SCANNING
          value: "1"
        - name: AQUA_PPROF_ENABLED
          value: "1"
        - name: DISABLE_IP_BAN
          value: "1"
          {{- else }}
        - name: AQUA_DOCKERLESS_SCANNING
          value: "0"
        - name: AQUA_PPROF_ENABLED
          value: "0"
        - name: DISABLE_IP_BAN
          value: "0"
          {{- end }}
          {{- if .Values.clustermode }}
        - name: CLUSTER_MODE
          value: "enable"  
          {{- end }}
        ports:
        - containerPort: 8080
          protocol: TCP
{{- with .Values.web.livenessProbe }}
        livenessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.web.readinessProbe }}
        readinessProbe:
{{ toYaml . | indent 10 }}
{{- end }}
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket-mount
        resources:
{{ toYaml .Values.web.resources | indent 12 }}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if and (.Values.web.tolerations) (semverCompare "^1.6-0" .Capabilities.KubeVersion.GitVersion) }}
      tolerations:
{{ toYaml .Values.web.tolerations | indent 6 }}
      {{- end }}
      volumes:
      - name: docker-socket-mount
        hostPath:
          path: {{ .Values.docker.socket.path }}
