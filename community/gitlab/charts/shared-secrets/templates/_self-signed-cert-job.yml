{{- if not (or .Values.global.ingress.configureCertmanager .Values.global.ingress.tls) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "shared-secrets.jobname" . }}-selfsign
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "gitlab.standardLabels" . | indent 4 }}
{{- if not .Values.global.operator.enabled }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      serviceAccountName: {{ template "shared-secrets.serviceAccountName" . }}
      restartPolicy: Never
{{- include "pullsecrets" .Values.image | indent 6}}
      initContainers:
      - name: cfssl-self-sign
        image: "{{ .Values.selfsign.image.repository }}:{{ .Values.selfsign.image.tag }}"
        env:
        - name: CA_SUBJECT
          value: {{ .Values.selfsign.caSubject | quote }} # defaults to GitLab in container
        - name: CA_ORG
          value: {{ .Release.Namespace | quote }} # defaults to GitLab in container
        - name: CA_ORG_UNIT
          value: {{ .Release.Name | quote }} # defaults to Cloud Native in container
        - name: CERT_SUBJECT
          value: {{ .Values.global.hosts.domain | quote }} # defaults to GitLab in container
        - name: CERT_DOMAIN
          value: {{ .Values.global.hosts.domain | quote }} # defaults to example.com in container
        - name: EXPIRY
          value: {{ .Values.selfsign.expiry | quote }} # defaults to 8076h in container
        - name: ALGORITHM
          value: {{ .Values.selfsign.keyAlgorithm | quote }} # defaults to ecdsa in container
        - name: KEY_SIZE
          value: {{ .Values.selfsign.keySize | quote }} # defaults to 256 inside container
        volumeMounts:
        - name: certs-path
          mountPath: /output
        resources:
{{ toYaml .Values.resources | indent 10 }}
      containers:
      - name: kubectl
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - /bin/bash
        - -exc
        - |
          certname={{ template "gitlab.wildcard-self-signed-cert-name" . }}
          # create wildcard certificate secret
          kubectl create secret tls $certname \
            --cert=/output/wildcard.pem --key=/output/wildcard-key.pem || true
{{- if not .Values.global.application.create }}
          kubectl --namespace=$namespace label \
            secret $certname  $(echo '{{ include "gitlab.application.labels" . | replace ": " "=" | replace "\n" " " }}' | sed -E 's/=[^ ]*/-/g')
{{- end }}
          kubectl --namespace=$namespace label --overwrite \
            secret $certname {{ include "gitlab.standardLabels" . | replace ": " "=" | replace "\n" " " }}
          # create CA certificate secret
          kubectl create secret generic ${certname}-ca \
            --from-file=cfssl_ca=/output/ca.pem || true
{{- if not .Values.global.application.create }}
          kubectl --namespace=$namespace label \
            secret ${certname}-ca  $(echo '{{ include "gitlab.application.labels" . | replace ": " "=" | replace "\n" " " }}' | sed -E 's/=[^ ]*/-/g')
{{- end }}
          kubectl --namespace=$namespace label --overwrite \
            secret ${certname}-ca {{ include "gitlab.standardLabels" . | replace ": " "=" | replace "\n" " " }}
        volumeMounts:
        - name: certs-path
          mountPath: /output
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: certs-path
        emptyDir: {}
{{- end -}}
