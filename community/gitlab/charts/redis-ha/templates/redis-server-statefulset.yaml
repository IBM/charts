{{- if .Values.enabled }}
{{- if .Values.persistentVolume.enabled }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  # Pay attention to the redis-role label at runtime. The self-determination logic in the image sets this value accordingly.
  name: {{ template "fullname" . }}-server
  namespace: {{ $.Release.Namespace }}
  labels:
    name: "redis-server"
    redis-node: "true"
{{ include "gitlab.immutableLabels" . | indent 4 }}
  annotations:
{{ include "gitlab.serviceAnnotations" . | indent 4 }}
spec:
  serviceName: {{ template "fullname" . }}
  replicas: {{ .Values.replicas.servers }}
  selector:
    matchLabels:
{{ include "labels.immutable" . | indent 6 }}
      name: "redis-server"
      redis-node: "true"
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/redis-configmap.yaml") . | sha256sum }}
      labels:
        name: "redis-server"
        redis-node: "true"
{{ include "labels.standard" . | indent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ template "name" . }}
                - key: release
                  operator: In
                  values:
                  - {{ .Release.Name | quote }}
                - key: redis-role
                  operator: In
                  values:
                  - master
                  - slave
              topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 2000
        fsGroup: 2000
      initContainers:
        - name: configure
          image: {{ .Values.init.image }}:{{ .Values.init.tag }}
          command: ['sh', '/config/configure']
          volumeMounts:
          - name: {{ .Release.Name }}
            mountPath: /config
            readOnly: true
          - name: {{ .Release.Name }}-config
            mountPath: /redis
            readOnly: false
          - name: {{ .Release.Name }}-metrics
            mountPath: /metrics
            readOnly: false
          resources:
{{ toYaml .Values.init.resources | indent 12 }}
      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
{{- include "pullsecrets" .Values.image | indent 6}}
      containers:
      - name: redis
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources.server | indent 10 }}
        env:
          - name: REDIS_SENTINEL_SERVICE_HOST
            value: "redis-sentinel"
          - name: REDIS_CHART_PREFIX
            value: {{ template "fullname" . }}
          - name: REDIS_PASSWORD_FILE
            value: "/etc/redis/pass"
        ports:
          - containerPort: 6379
        volumeMounts:
          - mountPath: /redis-master-data
            name: data
          - name: {{ .Release.Name }}-config
            mountPath: /etc/redis/
{{- if .Values.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.metrics.image }}:{{ .Values.metrics.imageTag }}"
        imagePullPolicy: {{ .Values.metrics.imagePullPolicy | quote }}
        env:
        - name: REDIS_FILE
          value: /metrics/redis
        ports:
        - name: metrics
          containerPort: {{ .Values.metrics.port }}
        volumeMounts:
        - name: {{ .Release.Name }}-metrics
          mountPath: /metrics
          readOnly: true
        resources:
{{ toYaml .Values.metrics.resources | indent 10 }}
{{- end }}
      volumes:
      - name: {{ .Release.Name }}-config
        emptyDir:
          medium: "Memory"
      - name: {{ .Release.Name }}-metrics
        emptyDir:
          medium: "Memory"
      - name: {{ .Release.Name }}
        projected:
          sources:
          - configMap:
              name: {{ template "fullname" . }}
              items:
                - key: redis-master.conf
                  path: redis-master.conf
                - key: redis-slave.conf
                  path: redis-slave.conf
                - key: configure
                  path: configure
          - secret:
              name: {{ template "gitlab.redis.password.secret" . }}
              items:
                - key: {{ template "gitlab.redis.password.key" . }}
                  path: password
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: {{.Values.persistentVolume.accessModes}}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size | quote }}
    {{- end -}}
{{- end -}}
