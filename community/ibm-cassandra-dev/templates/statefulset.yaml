apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "cassandra.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ template "cassandra.name" . }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "cassandra.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ template "cassandra.fullname" . }}
  replicas: {{ .Values.config.clusterSize }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "cassandra.name" . }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        release: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
      annotations:
        productName: cassandra
        productID: cassandra_{{ .Chart.Version }}
        productVersion: {{ .Chart.Version }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "status.localhost"
      hostNetwork: {{ .Values.hostNetwork }}
      hostPID: false
      hostIPC: false
      serviceAccountName: {{ template "cassandra.serviceAccountName" . }}
{{- if .Values.selector }}
{{ toYaml .Values.selector | indent 6 }}
{{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsNonRoot: true
      {{- end }}
      affinity:
{{- include "cassandra.chart.nodeaffinity" . | indent 6 }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
      containers:
      - name: {{ template "cassandra.fullname" . }}
        image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: true
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            drop:
            - ALL
            add:
            - SETPCAP
            - AUDIT_WRITE
            - CHOWN
            - NET_RAW
            - DAC_OVERRIDE
            - FOWNER
            - FSETID
            - KILL
            - SETGID
            - SETUID
            - NET_BIND_SERVICE
            - SYS_CHROOT
            - SETFCAP
            - SYS_MODULE
            - SYS_RAWIO
            - SYS_PACCT
            - SYS_ADMIN
            - SYS_NICE
            - SYS_RESOURCE
            - SYS_TIME
            - SYS_TTY_CONFIG
            - AUDIT_CONTROL
            - MAC_ADMIN
            - MAC_OVERRIDE
            - NET_ADMIN
            - SYSLOG
            - DAC_READ_SEARCH
            - LINUX_IMMUTABLE
            - NET_BROADCAST
            - IPC_LOCK
            - IPC_OWNER
            - SYS_PTRACE
            - SYS_BOOT
            - LEASE
            - WAKE_ALARM
            - BLOCK_SUSPEND
        
        {{- if .Values.commandOverrides }}
        command: {{ .Values.commandOverrides }}
{{- end }}
{{- if .Values.argsOverrides }}
        args: {{ .Values.argsOverrides }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- $seed_size := default 1 .Values.config.seedSize | int -}}
        {{- $global := . }}
        - name: CASSANDRA_SEEDS
          {{- if .Values.hostNetwork }}
          value: {{ required "You must fill \".Values.config.seeds\" with list of Cassandra seeds when hostNetwork is set to true" .Values.config.seeds | quote }}
          {{- else }}
          value: "{{- range $i, $e := until $seed_size }}{{ template "cassandra.fullname" $global }}-{{ $i }}.{{ template "cassandra.fullname" $global }}.{{ $global.Release.Namespace }}.svc.{{ $global.Values.config.clusterDomain }}{{- if (lt ( add1 $i ) $seed_size ) }},{{- end }}{{- end }}"
          {{- end }}     
        - name: MAX_HEAP_SIZE
          value: {{ default "8192M" .Values.config.maxHeapSize | quote }}
        - name: HEAP_NEWSIZE
          value: {{ default "200M" .Values.config.heapNewSize | quote }}
        - name: CASSANDRA_ENDPOINT_SNITCH
          value: {{ default "SimpleSnitch" .Values.config.endpointSnitch | quote }}
        - name: CASSANDRA_CLUSTER_NAME
          value: {{ default "Cassandra" .Values.config.clusterName | quote }}
        - name: CASSANDRA_DC
          value: {{ default "DC1" .Values.config.dcName | quote }}
        - name: CASSANDRA_RACK
          value: {{ default "RAC1" .Values.config.rackName | quote }}
        - name: CASSANDRA_START_RPC
          value: {{ default "false" .Values.config.startRpc | quote }}
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        {{- range $key, $value := .Values.env }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        livenessProbe:
          exec:
            command: [ "/bin/sh", "-c", "nodetool status" ]
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          exec:
            command: [ "/bin/sh", "-c", "nodetool status | grep -E \"^UN\\s+${POD_IP}\"" ]
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        ports:
        - name: intra
          containerPort: 7000
        - name: tls
          containerPort: 7001
        - name: jmx
          containerPort: 7199
        - name: cql
          containerPort: {{ default 9042 .Values.config.ports.cql }}
        - name: thrift
          containerPort: {{ default 9160 .Values.config.ports.thrift }}
        {{- if .Values.config.ports.agent }}
        - name: agent
          containerPort: {{ .Values.config.ports.agent }}
        {{- end }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/cassandra
{{- range $key, $value := .Values.configOverrides }}
        - name: cassandra-config-{{ $key | replace "." "-" }}
          mountPath: /etc/cassandra/{{ $key }}
          subPath: {{ $key }}
{{- end }}
        {{- if not .Values.persistence.enabled }}
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "exec nodetool decommission"]
        {{- end }}
      terminationGracePeriodSeconds: {{ default 30 .Values.podSettings.terminationGracePeriodSeconds }}
{{- if or .Values.configOverrides (not .Values.persistence.enabled) }}
      volumes:
{{- end }}
{{- range $key, $value := .Values.configOverrides }}
      - configMap:
          name: cassandra
        name: cassandra-config-{{ $key | replace "." "-" }}
{{- end }}
{{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
{{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ template "cassandra.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        release: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.useDynamicProvisioning }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ .Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
    {{- end }}
{{- end }}
