{{- if (.Values.lighthouse) and (eq .Values.lighthouse true) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: px-lighthouse
  namespace: kube-system
  labels:
    tier: px-web-console
{{- include "px.labels" . | nindent 4 }}
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      tier: px-web-console
  replicas: 1
  template:
    metadata:
      labels:
        tier: px-web-console
{{- include "px.labels" . | nindent 8 }}
      annotations:
{{- include "px.metering.annotations" . | nindent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      initContainers:
      - name: config-init
        image: "{{ template "px.getLighthouseImages" . }}/lh-config-sync:{{.Values.lighthouseSyncVersion}}"
        imagePullPolicy: Always
        args:
        - "init"
        volumeMounts:
        - name: config
          mountPath: /config/lh
        securityContext:
          capabilities:
            drop:
            - ALL
            add:
            - DAC_OVERRIDE
      containers:
      - name: px-lighthouse
        image: "{{ template "px.getLighthouseImages" . }}/px-lighthouse:{{ required "A valid lighthouse image version is required" .Values.lighthouseVersion}}"
        imagePullPolicy: Always
        args: [ "-kubernetes", "true" ]
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: config
          mountPath: /config/lh
        securityContext:
          capabilities:
            drop:
            - ALL
      - name: config-sync
        image: "{{ template "px.getLighthouseImages" . }}/lh-config-sync:{{.Values.lighthouseSyncVersion}}"
        imagePullPolicy: Always
        args:
        - "sync"
        volumeMounts:
        - name: config
          mountPath: /config/lh
        securityContext:
          capabilities:
            drop:
            - ALL
      - name: stork-connector
        image: "{{ template "px.getLighthouseImages" . }}/lh-stork-connector:{{.Values.lighthouseStorkConnectorVersion}}"
        imagePullPolicy: Always
        securityContext:
          capabilities:
            drop:
            - ALL
      serviceAccountName: px-lh-account
      volumes:
      - name: config
        emptyDir: {}
{{- end -}}
