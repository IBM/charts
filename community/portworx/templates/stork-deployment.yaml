{{- $registrySecret := .Values.registrySecret | default "none" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    tier: control-plane
{{- include "px.labels" . | nindent 4 }}
  name: stork
  namespace: kube-system
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 3
  selector:
    matchLabels:
        name: stork
  template:
    metadata:
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
{{- include "px.metering.annotations" . | nindent 8 }}
      labels:
        name: stork
        tier: control-plane
{{- include "px.labels" . | nindent 8 }}
    spec:
      {{- if not (eq $registrySecret "none") }}
      imagePullSecrets:
        - name: {{ $registrySecret }}
      {{- end }}
      containers:
      - command:
        - /stork
        - --driver=pxd
        - --verbose
        - --leader-elect=true
        - --webhook-controller=false
        imagePullPolicy: Always
        image: {{ template "px.getStorkImage" . }}:{{ required "A valid Image tag is required in the SemVer format" .Values.storkVersion }}
        resources:
          requests:
            cpu: '0.1'
        name: stork
        securityContext:
          capabilities:
            drop:
            - ALL
      hostPID: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "name"
                    operator: In
                    values:
                    - stork
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
      serviceAccountName: stork-account
