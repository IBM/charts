###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-ui-basic
  labels:
    name: cam-ui-basic
    "app.kubernetes.io/name": {{ template "fullname" . }}
    "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    "app.kubernetes.io/instance": "{{ .Release.Name }}"
    "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
  namespace: {{ .Release.Namespace }}
spec:
  progressDeadlineSeconds: 1800
  replicas: {{ .Values.camUI.replicaCount }}
  selector:
    matchLabels:
      name: cam-ui-basic
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-ui-basic
        "app.kubernetes.io/name": {{ template "fullname" . }}
        "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        "app.kubernetes.io/instance": "{{ .Release.Name }}"
        "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "{{ .Values.global.id.productID }}"
        productVersion: "{{ .Chart.AppVersion }}"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
{{- if .Values.global.audit }}
        seLinuxOptions:
            type: spc_t
{{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
      hostname: cam-ui-basic
      volumes:
      - name: tmp-empty
        emptyDir: {}
      - name: cam-cert
        secret:
          secretName: {{ .Values.camAPI.certificate.certName }}
{{- if .Values.global.audit }}
      - name: shared
        emptyDir: {}
      - name: journal
        hostPath:
          path: {{ .Values.auditService.config.journalPath }}
      - name: logrotate
        configMap:
          name: audit-config
          defaultMode: 420
          items:
          - key: logrotate
            path: audit
      - name: logrotate-conf
        configMap:
          name: audit-config
          defaultMode: 420
          items:
          - key: logrotate-conf
            path: logrotate.conf
{{- end }}
      - name:  {{ .Values.camLogsPV.name }}
      {{- if .Values.camLogsPV.persistence.enabled }}
        persistentVolumeClaim:
        {{- if .Values.camLogsPV.persistence.existingClaimName }}
          claimName: {{ .Values.camLogsPV.persistence.existingClaimName }}
        {{- else }}
          claimName:  {{ .Values.camLogsPV.name }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if ne .Values.global.image.secretName "default" }}
      imagePullSecrets:
      {{- else }}
        {{- if ne .Values.auditService.image.pullSecret "" }}
          {{- if .Values.global.audit }}
      imagePullSecrets:
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.global.image.secretName }}
        {{- if ne .Values.global.image.secretName "default" }}
      - name: {{ .Values.global.image.secretName }}
        {{- end }}
      {{- end }}
      {{- if .Values.auditService.image.pullSecret }}
        {{- if ne .Values.auditService.image.pullSecret "" }}
          {{- if .Values.global.audit }}
      - name: {{ .Values.auditService.image.pullSecret }}
          {{- end }}
        {{- end }}
      {{- end }}
      containers:
      - name: cam-ui-basic
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        image: "{{ .Values.image.repository }}icam-ui-basic:{{ .Values.image.tag }}{{ template "platform" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: liveness-port
          containerPort: 39002
        livenessProbe:
          httpGet:
            path: /ui/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /ui/health
            port: liveness-port
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
          - name: tmp-empty
            mountPath: /tmp
          - name: cam-cert
            mountPath: /usr/src/app/certs
            readOnly: true
          - name:  {{ .Values.camLogsPV.name }}
            mountPath: /var/camlog
{{- if .Values.global.audit }}
          - name: shared
            mountPath: /var/audit
{{- end }}
        envFrom:
        - configMapRef:
            name: common-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if .Values.secureValues.secretName }}
              name: {{ .Values.secureValues.secretName }}
              {{- else }}
              name: cam-secure-values-secret
              {{- end }}
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              {{- if .Values.secureValues.secretName }}
              name: {{ .Values.secureValues.secretName }}
              {{- else }}
              name: cam-secure-values-secret
              {{- end }}
              key: mongoDbUrl
        - name: APP_CONTEXT
          value: /ui
        - name: sessionKey
          valueFrom:
            secretKeyRef:
              name: {{ .Values.camUI.camUISecret.secretName }}
              key: sessionKey
        - name: sessionSecret
          valueFrom:
            secretKeyRef:
              name: {{ .Values.camUI.camUISecret.secretName }}
              key: sessionSecret
        - name: sessionTTL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.camUI.camUISecret.secretName }}
              key: sessionTTL
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PORT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ICP_PORT
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):$(ICP_PORT)
        - name: ORPHEUS_IDENTITY_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: common-config
              key: ORPHEUS_TENANT_URL
        - name: ORPHEUS_IDENTITY_URL
          {{- if ne .Values.platform "icp"}}
          value: $(ORPHEUS_IDENTITY_ENDPOINT)/api
          {{- else }}
          value: $(ICP_ENDPOINT)/idprovider
          {{- end }}
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ORPHEUS_IDENTITY_URL)
        {{- if eq .Values.platform "mcmp" }}
        - name: MCMP_AUTHENTICATION_URL
          value: {{ .Values.mcmp.gatewayUrl }}
        - name: MCMP_STORE_CATALOG_URL
          value: {{ .Values.mcmp.storeCatalogUrl }}
        - name: MULTI_TENANT_MODE
          {{- if .Values.mcmp.multiTenantMode }}
          value: "true"
          {{- else }}
          value: "false"
          {{- end }}
        {{- end }}
        - name: wlpClientId
          valueFrom:
            secretKeyRef:
              name: {{ .Values.camAPI.camSecret.secretName }}
              key: wlp_client_id
        - name: wlpClientSecret
          valueFrom:
            secretKeyRef:
              name: {{ .Values.camAPI.camSecret.secretName }}
              key: wlp_client_secret
        - name: wlp_scope
          value: openid+profile+email
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: wlpCallbackUrl
          value: /cam/auth/liberty/callback
        - name: disableSectionIds
          value: '["monitor","servicecomposer"]'
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: {{ .Values.camLoggingPolicies.logLevel }}
        - name: SERVICE_NAME
          value: cam-ui-basic
        - name: AUDIT_ENABLED
          value: "{{ .Values.global.audit }}"
        - name: AUDIT_LOG_PATH
          value: /var/audit/cam-ui-basic-audit.log
        - name: AUDIT_INITIATOR_HOST_ADDRESS_HEADER
          value: X-Forwarded-For
        - name: APP_CONTEXT_BASIC
          value: /ui
        - name: APP_CONTEXT_CONNECTIONS
          value: /connections
        - name: APP_CONTEXT_INSTANCES
          value: /instances
        - name: APP_CONTEXT_TEMPLATES
          value: /templates
{{- if .Values.global.audit }}
      - name: cam-ui-basic-audit
{{- if .Values.global.ICP32}}
        image: "{{ .Values.auditService.image.repository }}icp-audit-service-nr:{{ .Values.auditService.image.tag }}"
{{- else }}
        image: "{{ .Values.auditService.image.repository }}icp-audit-service:{{ .Values.auditService.image.tag }}"
{{- end }}
        imagePullPolicy: {{ .Values.auditService.image.pullPolicy }}
        securityContext:
{{- if .Values.global.legacyAudit }}
          runAsNonRoot: false
          runAsUser: 0
{{- else }}
          fsGroup: 1000
          runAsUser: 1000
{{- end }}
        resources:
{{ toYaml .Values.auditService.resources | indent 10 }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOG_LEVEL
            value: {{ .Values.camLoggingPolicies.logLevel }}
        volumeMounts:
          - name:  {{ .Values.camLogsPV.name }}
            mountPath: /var/camlog
          - name: shared
            mountPath: "/var/log/audit"
          - name: journal
            mountPath: {{ .Values.auditService.config.journalPath }}
          - name: logrotate
            mountPath: "/etc/logrotate.d/audit"
            subPath: audit
          - name: logrotate-conf
            mountPath: "/etc/logrotate.conf"
            subPath: logrotate.conf
        livenessProbe:
          exec:
            command:
            - sh
            - -c
{{- if .Values.global.legacyAudit }}
            - "service cron status"
{{- else }}
            - "ps -ef | grep python"
{{- end }}
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - sh
            - -c
{{- if .Values.global.legacyAudit }}
            - "service cron status"
{{- else }}
            - "ps -ef | grep python"
{{- end }}
          initialDelaySeconds: 5
          timeoutSeconds: 1
{{- end }}