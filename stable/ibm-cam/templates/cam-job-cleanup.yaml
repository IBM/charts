apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.camAPI.camSecret.secretName }}-cleanup-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": "post-delete"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    name: {{ .Values.camAPI.camSecret.secretName }}-cleanup-job
    "app.kubernetes.io/name": {{ template "fullname" . }}
    "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    "app.kubernetes.io/instance": "{{ .Release.Name }}"
    "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      name: {{ .Values.camAPI.camSecret.secretName }}-cleanup-job
      namespace: {{ .Release.Namespace }}
      labels:
        name: {{ .Values.camAPI.camSecret.secretName }}-cleanup-job
        "app.kubernetes.io/name": {{ template "fullname" . }}
        "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        "app.kubernetes.io/instance": "{{ .Release.Name }}"
        "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        supplementalGroups:
          - 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
      {{- if .Values.global.image.secretName }}
      {{- if ne .Values.global.image.secretName "default"}}
      imagePullSecrets:
       - name: {{ .Values.global.image.secretName }}
      {{- end }}
      {{- end }}
      containers:
      - name: cleanup
        image:  "{{ .Values.image.repository }}icam-tenant-api:{{ .Values.image.tag }}{{ template "platform" . }}"
        imagePullPolicy:  {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - MKNOD
        command:
        - "/bin/bash"
        - -c
        - |
          set -ex
          if kubectl get    secret -n {{ .Release.Namespace }} {{ .Values.camAPI.camSecret.secretName | quote }} ; then
             kubectl delete secret -n {{ .Release.Namespace }} {{ .Values.camAPI.camSecret.secretName | quote }}
          fi
{{- if .Capabilities.APIVersions.Has "security.openshift.io/v1" }}
          if kubectl get    route -n {{ .Release.Namespace }} cam ; then
             kubectl delete route -n {{ .Release.Namespace }} cam
          fi
          if kubectl get    cm -n {{ .Release.Namespace }} router-config ; then
             kubectl delete cm -n {{ .Release.Namespace }} router-config
          fi
{{- end}}
{{- if .Capabilities.APIVersions.Has "foundation.ibm.com/v1" }}
          if kubectl get cm -n {{ .Release.Namespace }} navconfig ; then 
            kubectl delete cm -n {{ .Release.Namespace }} navconfig
          fi
{{- end}}
        resources:
          requests:
            memory: 256Mi
            cpu: 10m
          limits:
            memory: 256Mi
            cpu: 50m
      restartPolicy: Never