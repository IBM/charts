###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cam-provider-helm
  labels:
    name: cam-provider-helm
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  namespace: {{ .Values.service.namespace }}
  annotations:
    productName: "Cloud Automation Manager"
    productID: "{{ .Values.global.id.productID }}"
    productVersion: "{{ .Chart.AppVersion }}"
spec:
  replicas: {{ .Values.camProxy.replicaCount }}
  selector:
    matchLabels:
      name: cam-provider-helm
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        name: cam-provider-helm
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
        productName: "Cloud Automation Manager"
        productID: "{{ .Values.global.id.productID }}"
        productVersion: "{{ .Chart.AppVersion }}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
      hostname: cam-provider-helm
      volumes:
      - name: {{ .Values.camLogsPV.name }}
      {{- if .Values.camLogsPV.persistence.enabled }}
        persistentVolumeClaim:
        {{- if .Values.camLogsPV.persistence.existingClaimName }}
          claimName: {{ .Values.camLogsPV.persistence.existingClaimName }}
        {{- else }}
          claimName:  {{ .Values.camLogsPV.name }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.global.image.secretName }}
      {{- if ne .Values.global.image.secretName "default"}}
      imagePullSecrets:
      - name: {{ .Values.global.image.secretName}}
      {{- end }}
      {{- end }}
      containers:
      - name: cam-provider-helm
        image: "{{ .Values.image.repository }}icam-provider-helm:{{ .Values.image.tag }}{{ template "platform" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: liveness-port
          containerPort: 7010
        livenessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
          initialDelaySeconds: 300
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /api/health
            port: liveness-port
          initialDelaySeconds: 5
          periodSeconds: 20
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
          - name: {{ .Values.camLogsPV.name }}
            mountPath: /var/camlog
            subPath: cam-provider-helm
        envFrom:
        - configMapRef:
            name: common-config
        - configMapRef:
            name: redis-config
        env:
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              {{- if .Values.secureValues.secretName }}
              name: {{ .Values.secureValues.secretName }}
              {{- else }}
              name: cam-secure-values-secret
              {{- end }}
              key: mongoDbPassword
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              {{- if .Values.secureValues.secretName }}
              name: {{ .Values.secureValues.secretName }}
              {{- else }}
              name: cam-secure-values-secret
              {{- end }}
              key: mongoDbUrl
        - name: CAM_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.camAPI.camSecret.secretName }}
              key: token
        - name: ICP_MASTER_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: MASTER_IP
        - name: ICP_PROXY_IP
          valueFrom:
            configMapKeyRef:
              name: oauth-client-map
              key: PROXY_IP
        - name: ICP_ENDPOINT
          value: https://$(ICP_MASTER_IP):8443
        - name: ORPHEUS_IDENTITY_API_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: ORPHEUS_IDENTITY_URL
          value: $(ICP_ENDPOINT)/idprovider
        - name: COMMAND_UID
          value: "1112"
        - name: COMMAND_GID
          value: "1112"
        - name: BLUEMIX_HOME
          value: /helmuser_common/.bluemix
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
      initContainers:
      - name: cam-provider-helm-init
        image: "{{ .Values.image.repository }}icam-busybox:{{ .Values.image.tag }}{{ template "platform" . }}"
        imagePullPolicy:  {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: 0
        command: ["/bin/sh", "-c"]
        args:
          - mkdir -p /var/camlog/cam-provider-helm/${POD_NAME} && touch /var/camlog/cam-provider-helm/${POD_NAME}/cam_out.log && touch /var/camlog/cam-provider-helm/${POD_NAME}/cam_err.log && chown -R 1000:1000 /var/camlog/cam-provider-helm;
        volumeMounts:
        - name: {{ .Values.camLogsPV.name }}
          mountPath: /var/camlog
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name