apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      name: {{ template "fullname" . }}
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
        productName: "Db2 Developer-C Edition"
        productID: "IBMDb2DeveloperCEdition_11122b_dev_00000"
        productVersion: ".Values.image.tag"
    spec:
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      serviceAccountName: dsm-repodb-{{ template "fullname" . }}
      volumes:
      - name: "{{ template "fullname" . }}-{{ .Values.dataVolume.name }}"
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
        {{- if .Values.dataVolume.existingClaimName }}
          claimName: {{ .Values.dataVolume.existingClaimName }}
        {{- else }}
          claimName: {{ template "fullname" . }}-{{ .Values.dataVolume.name }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      containers:
      - name: {{ template "fullname" . }}
      {{- if .Values.image.arch }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}-{{ .Values.image.arch }}"
      {{- else }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          capabilities:
            add: ["SYS_RESOURCE", "IPC_OWNER", "SYS_NICE"]
        ports:
        - containerPort: 50000
        - containerPort: 55000
        env:
        - name: LICENSE
          value: "accept"
        - name: DB2INSTANCE
          value: {{ default "db2inst1" .Values.db2inst.instname | quote }}
        - name: DB2INST1_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}-db2-passwd
              key: password 
        - name: DBNAME
          value: "{{ .Values.options.databaseName }}"
        - name: BLU
          value: "false"
        - name: ENABLE_ORACLE_COMPATIBILITY
          value: "{{ .Values.options.oracleCompatibility }}"
        - name: UPDATEAVAIL
          value: "NO"
        - name: TO_CREATE_SAMPLEDB
          value: "false" 
        - name: IS_OSXFS
          value: "false"
        - name: REPODB
          value: "false"
        # set liveness probe to determine if container needs to be restarted
        # - command, http, or tcp
        # ref : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - /database/config/$DB2INSTANCE/sqllib/bin/db2gcf -s
          initialDelaySeconds: 300
          periodSeconds: 90
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - cat /database/config/.shared-data/setup_complete 2>/dev/null
          initialDelaySeconds: 300
          periodSeconds: 90
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - mountPath: /database
          name: "{{ template "fullname" . }}-{{ .Values.dataVolume.name }}"
