# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# Licensed Materials - Property of IBM                             
# 5724-Y95                                                         
# (C) Copyright IBM Corp.  2018, 2019    All Rights Reserved.      
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  
# end_generated_IBM_copyright_prolog                               
# debug specifies if debug is enabled for the helm install. Kubernetes jobs will be left on the system to aid in debug if set to true.
debug: false

# license specifies if you read the license agreement and agree to the terms. Set the license value to 'accept'. This value is required.
license: "not accepted"

app:
  # app.metricCollectionInterval specifies the interval in seconds between application service collection of metrics from application processing elements.
  metricCollectionInterval: 3

  # app.pecStartTimeout specifies maximum time in seconds that application service waits for application processing elements to start.
  pecStartTimeout: 30

  # app.pecStopTimeout specifies maximum time in seconds that application service waits for application processing elements to stop gracefully.
  pecStopTimeout: 30

  # app.serviceAccount specifies the service account for application pods. If specified, it must be granted permissions for required Kubernetes objects.  If not specified, one will be created with necessary role based access control objects.
  serviceAccount:

  # app.streamsExtPvc specifies the persistent volume claim containing streams runtime external libraries.
  streamsExtPvc:

  # app.userExtPvc specifies the persistent volume claim containing user runtime external libraries.
  userExtPvc:

auditlog:
  # auditlog.level specifies the level of audit logging. Valid values are: off, standard.
  level: "off"

controller:
  # controller.securitySecret specifies the secret containing keystore and truststore files, passwords, and alias for the streams controller.
  securitySecret:

  # controller.startTimeout specifies the time in seconds to wait for streams controller to start.
  startTimeout: 60

  # controller.stopTimeout specifies the time in seconds to wait for streams controller to stop.
  stopTimeout: 60

  # controller.systemStatisticsInterval specifies the interval time in seconds between controller collection of pod metrics.
  systemStatisticsInterval: 60

image:
  # image.application specifies the image to configure for default application resources. This value is required.
  application: "streams-application-el7"

  # image.applicationTag specifies the tag portion of the application image name. This value is required.
  applicationTag: "5.2.0.0"

  # image.console specifies the image to configure for the console resource. This value is required.
  console: "streams-sws-el7"

  # image.consoleTag specifies the tag portion of the console image name. This value is required.
  consoleTag: "5.2.0.0"

  # image.management specifies the image to configure for management resources. This value is required.
  management: "streams-management-el7"

  # image.managementTag specifies the tag portion of the management image name. This value is required.
  managementTag: "5.2.0.0"

  # image.operations specifies the image to configure for operations resources. This value is required.
  operations: "streams-operations-el7"

  # image.operationsTag specifies the tag portion of the operations image name. This value is required.
  operationsTag: "5.2.0.0"

  # image.prefix specifies the repository for the docker images. If specified, this value will be pre-appended to the image names.
  prefix:

  # image.pullPolicy specifies the policy used to pull images from docker registry. Valid values are: Always, IfNotPresent.
  pullPolicy: "Always"

  # image.pullSecrets specifies the secret used to pull images from docker registry.
  pullSecrets:

  # image.repository specifies the image to configure for repository resources. This value is required.
  repository: "streams-application-repository-el7"

  # image.repositoryTag specifies the tag portion of the repository image name. This value is required.
  repositoryTag: "5.2.0.0"

  # image.security specifies the image to configure for security resources. This value is required.
  security: "streams-security-el7"

  # image.securityTag specifies the tag portion of the security image name. This value is required.
  securityTag: "5.2.0.0"

instance:
  # instance.applicationTemplateConfigMap specifies a configMap containing application resource templates.
  applicationTemplateConfigMap:

  # instance.governanceEnabled specifies whether application governance is enabled.
  governanceEnabled: false

  # instance.governanceSecret specifies the secret containing the governance administrator user ID and password. This value is used if instance.governanceEnabled is to true.
  governanceSecret:

  # instance.governanceUrl specifies the URL of the service where application governance information is sent. Value is used if instance.governanceEnabled is to true.
  governanceUrl:

  # instance.jobsCpuMaximum specifies the total maximum upper limit of CPU core resources for all jobs in the instance.
  jobsCpuMaximum:

  # instance.localeOverride specifies the locale in the following locale format that is used by Streams services for tasks such as logging: language[_territory][.codeset].
  localeOverride:

  # instance.metricStatisticsRetentionScheme specifies the algorithm used by the metrics package for retaining resource metric data. Valid values are: exponentiallyDecaying, slidingTimeWindow, slidingWindow, uniform.
  metricStatisticsRetentionScheme: "slidingTimeWindow"

  # instance.metricStatisticsRetentionSize specifies the amount of metrics data to retain. Value is specific to selected retention scheme; see documentation for more information.
  metricStatisticsRetentionSize: 10

  # instance.owner specifies the owner of the instance. This value can only be set when the instance is created.
  owner:

  # instance.persistentStorageClassName specifies the storage class name to dynamically provision the storage for streams instance state. If you specify an existing persistent volume claim this value is ignored. You must specify this or instance.persistentVolumeClaim.
  persistentStorageClassName:

  # instance.persistentVolumeClaim specifies the persistent volume claim used to back the streams instance state. You must specify this or instance.persistentStorageClassName.
  persistentVolumeClaim:

  # instance.persistentVolumeClaimSize specifies a size to dynamically provision the storage for streams instance state. If you specify an existing persistent volume claim this value is ignored.
  persistentVolumeClaimSize: "10Gi"

  # instance.serviceAccount specifies the service account used for all management pods. If specified, it must be granted permissions for required Kubernetes objects.  If not specified, one will be created with necessary role based access control objects.
  serviceAccount:

  # instance.serviceMetricCollectionEnabled specifies whether metric information is collected for IBM Streams services.
  serviceMetricCollectionEnabled: false

  # instance.sslOption specifies the default cryptographic protocol for all IBM Streams services. This value can only be updated on helm upgrades. Valid values are: SSL_TLS, SSL_TLSv2, TLSv1, TLSv1.1, TLSv1.2, none.
  sslOption: "TLSv1.2"

jmx:
  # jmx.inactivityTimeout specifies the number of minutes of inactivity after which manually registered JMX objects are unregistered.
  inactivityTimeout: 30

  # jmx.securitySecret specifies the secret containing the JMX large data handler keystore file and password.
  securitySecret:

  # jmx.serviceExternalIPs specifies an array of external ip addresses for the Kubernetes service exposing the JMX large data handler.
  serviceExternalIPs:

  # jmx.serviceLargeDataNodePort specifies the node port value for the Kubernetes service exposing the JMX large data handler.
  serviceLargeDataNodePort:

  # jmx.serviceNodePort specifies a node port value for the Kubernetes service exposing the JMX large data handler.
  serviceNodePort:

  # jmx.serviceType specifies the type for the Kubernetes service exposing the JMX large data handler. This value is required. Valid values are: ClusterIP, NodePort, LoadBalancer.
  serviceType: "ClusterIP"

job:
  # job.checkpointRepository specifies the repository that is used to store application checkpoint information. This value can only be set when the instance is created. Valid values are: notSpecified, fileSystem, redis.
  checkpointRepository: "notSpecified"

  # job.checkpointRepositoryConfiguration specifies configuration information for the repository that is used to store application checkpoint information This value can only be set when the instance is created.
  checkpointRepositoryConfiguration:

  # job.cpuMaximum specifies the maximum upper limit of CPU core resources for a job.
  cpuMaximum: 20

  # job.dynamicThreadingElastic specifies whether the PE dynamically adapts the number of threads used for dynamic threading in a PE, based on performance.
  dynamicThreadingElastic:

  # job.dynamicThreadingThreadCount specifies the initial number of threads for dynamic threading in a PE.
  dynamicThreadingThreadCount:

  # job.restartPesOnResourceFailure specifies whether PEs are restarted after a resource failure.
  restartPesOnResourceFailure: true

  # job.restartPesOnResourceFailureWaitTime specifies the period, in seconds, that IBM Streams waits before it restarts processing elements when a resource fails.
  restartPesOnResourceFailureWaitTime: 300

  # job.threadingModel specifies the model for an instance that determines how threads run operators in a PE. Valid values are: notSpecified, automatic, manual, dedicated, dynamic.
  threadingModel: "notSpecified"

  # job.transportSecurityType specifies the cryptographic protocol to use when data is transported between PEs. This value can only be updated on helm upgrades. Valid values are: SSLv3, TLSv1, TLSv1.1, TLSv1.2, none.
  transportSecurityType: "none"

log:
  # log.format specifies the format of container logs output to the container's console.
  format: "json"

  # log.level specifies the default level to use for the administration log. Valid values are: error, warn, info.
  level: "warn"

  # log.maximumFileCount specifies the maximum number of files to save for the administration log.
  maximumFileCount: 3

  # log.maximumFileSize specifies the maximum size, in kilobytes, for each administration log file.
  maximumFileSize: 5000

mkinstance:
  # mkinstance.configMap specifies a configMap containing custom configuration (i.e. streamtool commands) used when creating the instance.
  configMap:

  # mkinstance.env specifies environment variables to be used by streamtool commands in the mkinstance.configMap and in the ops pod.
  env: {}

  # mkinstance.timeout specifies the number of minutes to wait for mkinstance to complete.
  timeout: 5

  # mkinstance.volumeMounts specifies the yaml snippet for volumes to be to be used when creating the instance and mounted on the ops pod. You must also specify userVolumes.
  volumeMounts: {}

  # mkinstance.volumes specifies the yaml snippet for pre-created persistent volumes to be used when creating the instance and mounted on the ops pod. You must also specify userVolumeMounts.
  volumes: {}

prometheus:
  # prometheus.credentials specifies the credentials for accessing Prometheus.
  credentials:

  # prometheus.url specifies the URL for accessing Prometheus.
  url:

resources:
  # resources.applicationCpu specifies the minimum required amount of CPU core resources for application resources. Must be less than or equal to resources.applicationCpuLimit. This value is required.
  applicationCpu: "1"

  # resources.applicationCpuLimit specifies the upper limit of CPU core resource for default application resources. This value is required.
  applicationCpuLimit: "2"

  # resources.applicationMemory specifies the minimum required amount of memory for default application resources. Must be less than or equal to resources.applicationMemoryLimit. This value is required.
  applicationMemory: "1Gi"

  # resources.applicationMemoryLimit specifies the upper limit for memory in bytes for default application resources. This value is required.
  applicationMemoryLimit: "2Gi"

  # resources.consoleCpu specifies the minimum required amount of CPU core resources for console resource. Must be less than or equal to resources.consoleCpuLimit. This value is required.
  consoleCpu: "2"

  # resources.consoleCpuLimit specifies the upper limit of CPU core resource for the console resource. This value is required.
  consoleCpuLimit: "8"

  # resources.consoleMemory specifies the minimum required amount of memory for console resources. Must be less than or equal to resources.consoleMemoryLimit. This value is required.
  consoleMemory: "4Gi"

  # resources.consoleMemoryLimit specifies the upper limit for memory in bytes for the console resources. This value is required.
  consoleMemoryLimit: "6Gi"

  # resources.managementCpu specifies the minimum required amount of CPU core resources for management resources. Must be less than or equal to resources.managementCpuLimit. This value is required.
  managementCpu: "2"

  # resources.managementCpuLimit specifies the upper limit of CPU core resource for the management resources. This value is required.
  managementCpuLimit: "12"

  # resources.managementMemory specifies the minimum required amount of memory for the management resources. Must be less than or equal to resources.managementMemoryLimit. This value is required.
  managementMemory: "4Gi"

  # resources.managementMemoryLimit specifies the upper limit for memory in bytes for the management resources. This value is required.
  managementMemoryLimit: "8Gi"

  # resources.repositoryCpu specifies the minimum required amount of CPU for the repository resource. Must be less than or equal to resources.repositoryCpuLimit. This value is required.
  repositoryCpu: "1"

  # resources.repositoryCpuLimit specifies the upper limit of CPU core resource for the repository resource. This value is required.
  repositoryCpuLimit: "1"

  # resources.repositoryMemory specifies the minimum required amount of memory for the repository resource. Must be less than or equal to resources.repositoryMemoryLimit. This value is required.
  repositoryMemory: "2Gi"

  # resources.repositoryMemoryLimit specifies the upper limit for memory in bytes for the repository resource. This value is required.
  repositoryMemoryLimit: "2Gi"

  # resources.securityCpu specifies the minimum required amount of CPU core resources for the security resources. Must be less than or equal to resources.securityCpuLimit. This value is required.
  securityCpu: "2"

  # resources.securityCpuLimit specifies the upper limit of CPU core resource for the security resources. This value is required.
  securityCpuLimit: "4"

  # resources.securityMemory specifies the minimum required amount of memory for the security resources. Must be less than or equal to resources.securityMemoryLimit. This value is required.
  securityMemory: "2Gi"

  # resources.securityMemoryLimit specifies the upper limit for memory in bytes for the security resources. This value is required.
  securityMemoryLimit: "4Gi"

security:
  # security.administratorGroup specifies the streams group to configure as an InstanceAdministrator. This value and/or security.administratorUser must be specified. This value can only be set when the instance is created.
  administratorGroup:

  # security.administratorUser specifies the streams user to configure as an InstanceAdministrator. This value and/or security.administratorGroup must be specified. This value can only be set when the instance is created.
  administratorUser:

  # security.certificateUserRegularExpression specifies the format of the certificate used to determine how to extract the Streams user identifier from the certificate distinguished name (DN).
  certificateUserRegularExpression: "${cn}"

  # security.ldapEnabled specifies whether LDAP is enabled as a default security login module. This value can only be updated on helm upgrades.
  ldapEnabled: true

  # security.ldapGroupMembersAttribute specifies the name of the element in the group record that contains the list of members in the group. This value can only be updated on helm upgrades.
  ldapGroupMembersAttribute:

  # security.ldapGroupObjectClass specifies the group object class that is used to search for group names in LDAP. This value can only be updated on helm upgrades.
  ldapGroupObjectClass:

  # security.ldapGroupSearchBaseDistinguishedName specifies the base distinguished name (DN) that is used to search for groups in LDAP. This value can only be updated on helm upgrades.
  ldapGroupSearchBaseDistinguishedName:

  # security.ldapSecret specifies the secret containing the LDAP administrator user ID and password.
  ldapSecret:

  # security.ldapServerUrl specifies the URL to the LDAP Server that is used for authentication. This value can only be updated on helm upgrades.
  ldapServerUrl:

  # security.ldapUserAttributeInGroup specifies the name of the user record element that is stored in the group record. This value can only be updated on helm upgrades.
  ldapUserAttributeInGroup:

  # security.ldapUserDistinguishedNamePattern specifies the pattern that is used to create a distinguished name (DN) for a user during login when LDAP is used for authentication. This value can only be updated on helm upgrades.
  ldapUserDistinguishedNamePattern:

  # security.ldapUserSecondaryLookup specifies the LDAP query that is used to resolve the LDAP user name based on the provided IBM Streams user identifier. This value can only be updated on helm upgrades.
  ldapUserSecondaryLookup:

  # security.revocationLdapUrl specifies an LDAP URL that IBM Streams uses to retrieve a list of certificates that are revoked but are not expired.
  revocationLdapUrl:

  # security.revocationMethod specifies the method that the IBM Streams uses to check whether a certificate is revoked. This value can only be updated on helm upgrades. Valid values are: automatic, crl, ocsp, none.
  revocationMethod: "automatic"

  # security.sessionTimeout specifies the number of seconds to wait before timing out a security session. The default value is 4 hours.
  sessionTimeout: 14400

  # security.ssoEnabled specifies whether IBM Streams single sign-on is enabled as a default security login module. This value can only be updated on helm upgrades.
  ssoEnabled: false

  # security.ssoRealm specifies the IBM Streams single sign-on security realm. This value can only be updated on helm upgrades.
  ssoRealm:

  # security.ssoUrl specifies the URL of the IBM Streams single sign-on service. Format is https://<sso-release>-sso.<sso-namespace>:8446. This value can only be updated on helm upgrades.
  ssoUrl:

  # security.userGroup specifies the streams group to configure as an InstanceUser. This value can only be set when the instance is created.
  userGroup:

  # security.userPersistentVolumeClaim specifies the persistent volume claim for reading and writing user supplied security data.
  userPersistentVolumeClaim:

sws:
  # sws.clientAuthenticationCertificateRequired specifies whether a certificate is required when client authentication is enabled for web management services. This value can only be updated on helm upgrades.
  clientAuthenticationCertificateRequired: true

  # sws.clientAuthenticationEnabled specifies whether client authentication is enabled for web management services. This value can only be updated on helm upgrades.
  clientAuthenticationEnabled: false

  # sws.cryptographicKeyManagementMode specifies the level of adherence to the recommendation for cryptographic key management for the web management service. Valid values are: strict, transition, off.
  cryptographicKeyManagementMode: "strict"

  # sws.securitySecret specifies the secret containing keystore and truststore files, passwords, and alias for the Streams Console.
  securitySecret:

  # sws.serviceExternalIPs specifies an array of external ip addresses for the Kubernetes service exposing the Streams Console.
  serviceExternalIPs:

  # sws.serviceNodePort specifies a node port value for the Kubernetes service exposing the Streams Console.
  serviceNodePort:

  # sws.serviceType specifies the type for the Kubernetes service exposing the Streams Console. This value is required. Valid values are: ClusterIP, NodePort, LoadBalancer.
  serviceType: "ClusterIP"

trace:
  # trace.level specifies the default trace level to use for debugging problems with the IBM Streams services. Valid values are: off, error, warn, info, debug, trace.
  level: "error"

  # trace.maximumFileCount specifies the maximum number of trace files to save per IBM Streams service.
  maximumFileCount: 3

  # trace.maximumFileSize specifies the maximum size, in kilobytes, of the trace files for each IBM Streams service.
  maximumFileSize: 5000
