{{- include "sch.config.init" (list . "sch.chart.config.values") }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "cloudant.releasename" $ }}-clouseau-config
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
data:
  clouseau.ini: |
    [clouseau]
    name=clouseau@127.0.0.1

    #template cookie={security.cookie}
    cookie=monster

    #template dir={database.dir}/search_index
    dir=/srv/search_index

    max_indexes_open=500
  log4j.properties: |
    log4j.rootLogger=info, SYSLOG
    log4j.appender.SYSLOG=org.apache.log4j.net.SyslogAppender
    log4j.appender.SYSLOG.SyslogHost=localhost
    log4j.appender.SYSLOG.facility=LOCAL5
    log4j.appender.SYSLOG.FacilityPrinting=true
    log4j.appender.SYSLOG.layout=org.apache.log4j.PatternLayout
    log4j.appender.SYSLOG.layout.ConversionPattern=%d{ISO8601} %c [%p] %m%n
  clouseau.policy: |
    grant codeBase "file:/opt/dbcore/search/*" {
      // Clouseau permissions
      permission java.io.FilePermission "/srv/search_index", "read";
      permission java.io.FilePermission "/srv/search_index/-", "read,write,delete";
      permission java.io.FilePermission "/opt/dbcore/etc/clouseau.ini", "read";
      permission java.io.FilePermission "/opt/dbcore/etc/log4j.properties", "read";
      permission java.io.FilePermission "/opt/dbcore/search/*", "read";
      permission java.lang.RuntimePermission "getenv.*";
      permission java.util.PropertyPermission "*", "read,write";
      permission java.net.SocketPermission "localhost", "resolve";
      permission java.net.SocketPermission "localhost:514", "connect,resolve";
      permission java.lang.RuntimePermission "setDefaultUncaughtExceptionHandler";

      // high_scale_lib access Unsafe
      permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
      permission java.lang.RuntimePermission "accessDeclaredMembers";
      permission java.lang.reflect.ReflectPermission "suppressAccessChecks";

      // Enable JMX
      permission javax.management.MBeanPermission "*", "registerMBean,unregisterMBean";
      permission javax.management.MBeanServerPermission "createMBeanServer";
      permission javax.management.MBeanTrustPermission "register";

      // Overlock registers a shutdown hook
      permission java.lang.RuntimePermission "shutdownHooks";

      // Scalang needs to contact the local EPMD process
      permission java.net.SocketPermission "127.0.0.1:1024-", "accept,resolve";
      permission java.net.SocketPermission "127.0.0.1:4369", "connect,resolve";
      permission java.net.SocketPermission "FQDN", "resolve";
      permission java.net.SocketPermission "FQDN:1024-", "connect,resolve";
    };

    grant principal javax.management.remote.JMXPrincipal "monitorRole" {
      permission javax.management.MBeanPermission "*", "queryNames,getAttribute";
    };
