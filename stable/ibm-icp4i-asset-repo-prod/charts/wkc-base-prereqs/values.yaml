enabled:
  cloudant: true
  rabbitmq: false
  redis: true

global:
  # cloudant global values
#  docker:    
    # pull secret for cloudant
#    registry:
#  images:
#    registry: notUsed/wdp-cloudant
#    pullPolicy: IfNotPresent
  cloudant:
    releaseNameOverride:
    username: 
    password:
    singleNode: false
  enableDashboard: false
  job:
    image:
      repository: kdi-job
#  persistence:
#    useDynamicProvisioning: true
#    storageClassName: "glusterfs"
  installCerts: true

env:
  redisUrl: #redis://redis.default.svc:6379 # pragma: whitelist secret
#  rabbitmqUrl: amqps://%s:%s@rabbitmq-ha:5671 # pragma: whitelist secret
#  cloudantUrl: #https://%s:%s@wdp-cloudant.%s.svc:443 # pragma: whitelist secret

# cloudant
wdp-cloudant:
  pre-reqs:
    cloudant:
      storage: 30Gi
      db_1:
        path: ""
        host: ""
#      db_2:
#        path: 
#        host: 
#      db_3:
#        path: 
#        host: 
  ibm-cloudant-internal:
    db:
      db:
        image:
          repository: cdi-db
      clouseau:
        image:
          repository: cdi-clouseau
      storage:
        db:     
          storage_class: "wdp-cloudant-storage"  
#          requests:
#            storage: 
    dashboard:
      image:
        repository: cdi-dashboard
    haproxy:
      glum:
        image:
          repository: cdi-glum
      dnsmasq:
        image:
          repository: kdi-dnsmasq
              
# rabbitmq
#wdp-rabbitmq:
#  fullnameOverride: rabbitmq-ha
#  rabbitmqUsername: "admin"
#  rabbitmqPassword: ""
#  persistentVolume:
#    enabled: true
#    storageClass: wdp-rabbitmq-class
#  image:
#    repository: localhost:5000/wdp-rabbitmq/rabbitmq
#    pullSecrets: ""
#  busybox:
#    image:
#      repository: localhost:5000/wdp-rabbitmq/busybox
#  replicaCount: 1

redis-ha:
  fullnameOverride:
  enabled: true
  image:
    repository: wdp-redis
    tag: 4.0.11-r1
    pullSecret: 
  replicas:
    servers: 3
    sentinels: 3

nginxCertificate: |-
  -----BEGIN CERTIFICATE-----
  MIIEUzCCAzugAwIBAgIJANMbRG6+5SQzMA0GCSqGSIb3DQEBBQUAMIGxMQswCQYD
  VQQGEwJVUzELMAkGA1UECAwCQ0ExGzAZBgNVBAcMElNpbGljb24gVmFsbGV5IExh
  YjESMBAGA1UECgwJQW5hbHl0aWNzMRowGAYDVQQLDBFJQk0gRGF0YSBQbGF0Zm9y
  bTErMCkGCSqGSIb3DQEJARYcaWJtLWRhdGEtcGxhdGZvcm1AdXMuaWJtLmNvbTEb
  MBkGA1UEAwwSaW50ZXJuYWwtbmdpbngtc3ZjMCAXDTE4MDIyMzIyNDAzMloYDzIx
  MTgwMTMwMjI0MDMyWjCBsTELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRswGQYD
  VQQHDBJTaWxpY29uIFZhbGxleSBMYWIxEjAQBgNVBAoMCUFuYWx5dGljczEaMBgG
  A1UECwwRSUJNIERhdGEgUGxhdGZvcm0xKzApBgkqhkiG9w0BCQEWHGlibS1kYXRh
  LXBsYXRmb3JtQHVzLmlibS5jb20xGzAZBgNVBAMMEmludGVybmFsLW5naW54LXN2
  YzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANmNHxpCSywlSvooFs15
  w8oJgd/nzbnzlzcfSsjCTmDaILXNRt87fyoJibzAUzn6kRyYAuORBi1SHkUoljsF
  GaKWjGSYMkevZewvG2ywgHs5hQDbmcMHKEa2TBMLIuqp/FiK3nAtHUjUSeUM2j30
  6Gpu0N3kbK3geagzL+NvtNsjPaWkVzzJlm99uqMzakVyP3kl9opKUmMiucbmRRuK
  zIYAqERj/211MllJcMnWxVP7M9jwzCqxLU6opWP6/c+9iyRXv07gtEl0gkdjO9Bp
  t2WqSS11CoNmS8phHRZjLzFPM+YiGJTUXAX/AEBFoI825qGO6DN8PeWkgqSRsc5l
  TG8CAwEAAaNqMGgwZgYDVR0RBF8wXYISaW50ZXJuYWwtbmdpbngtc3ZjghMqLnN2
  Yy5jbHVzdGVyLmxvY2FsggdhcGktc3ZjggUqLmFwaYINaWJtLW5naW54LXN2Y4IJ
  bG9jYWxob3N0gghkc3hsLWFwaTANBgkqhkiG9w0BAQUFAAOCAQEARc8YrVsiBl4m
  qY1iRWA6KbVRRutF9ifmaf+WHX4rq7J6Wkb2zPH/w+eXwPqJvm4yCT11fJvdYPqB
  nkbKioLdu4FmuAw/hKunk+Fv5pFm/1NU208YKvTImpumz74lTEaChwvM9RooGDi4
  kPGWkXjBT0Mw8exEeq6sN4OT/ne6MklePiswfJOSkE99MthFvrdGYOHlsOSoQCSk
  q4RZTEv9VP06DlZRgFpXmXHEVlxEIwwt5BbCTxm597u3J3UtCWOlmKdIuXjVUxx0
  u8eOr37odf6po0bDfDbuElUByW3umUm42C2JvLVlL7/VR10RFC21WYk6Gjvee0gr
  KZ4VvnlEtw==
  -----END CERTIFICATE-----
