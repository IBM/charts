{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "http://example.com/example.json",
  "type": "object",
  "default": {},
  "required": ["global", "appserver", "omserver", "datasetup"],
  "properties": {
    "global": {
      "$id": "#/properties/global",
      "type": "object",
      "default": {},
      "required": [
        "license",
        "license_store_call_center",
        "image",
        "appSecret",
        "database",
        "serviceAccountName",
        "customerOverrides",
        "envs",
        "persistence",
        "mq",
        "arch",
        "log"
      ],
      "properties": {
        "license": {
          "$id": "#/properties/global/properties/license",
          "type": "boolean",
          "title": "OMS license agreement",
          "description": "Accept OMS license after reading it at http://ibm.biz/oms-license.",
          "default": false
        },
        "license_store_call_center": {
          "$id": "#/properties/global/properties/license_store_call_center",
          "type": "boolean",
          "title": "Store and Call Center license agreement",
          "description": "Accept Store and Call Center license after reading it at http://ibm.biz/oms-apps-license.",
          "default": false
        },
        "image": {
          "$id": "#/properties/global/properties/image",
          "type": "object",
          "default": {},
          "required": ["repository"],
          "properties": {
            "repository": {
              "$id": "#/properties/global/properties/image/properties/repository",
              "type": "string",
              "title": "Image Repository",
              "description": "Repository for Order management images.",
              "default": ""
            }
          },
          "additionalProperties": true
        },
        "appSecret": {
          "$id": "#/properties/global/properties/appSecret",
          "type": "string",
          "title": "App Secret",
          "description": "Order management secret name.",
          "default": ""
        },
        "database": {
          "$id": "#/properties/global/properties/database",
          "type": "object",
          "title": "Database parameters",
          "description": "Database parameters that will be used.",
          "default": {},
          "required": [
            "serverName",
            "port",
            "dbname",
            "user",
            "dbvendor",
            "datasourceName",
            "systemPool",
            "schema"
          ],
          "properties": {
            "serverName": {
              "$id": "#/properties/global/properties/database/properties/serverName",
              "type": "string",
              "title": "Database Server",
              "description": "Database IP or Host.",
              "default": ""
            },
            "port": {
              "$id": "#/properties/global/properties/database/properties/port",
              "type": ["integer", "null"],
              "title": "Database port",
              "description": "Database server port.",
              "default": 50000
            },
            "dbname": {
              "$id": "#/properties/global/properties/database/properties/dbname",
              "type": "string",
              "title": "Database name",
              "description": "Database name or catalog name.",
              "default": ""
            },
            "user": {
              "$id": "#/properties/global/properties/database/properties/user",
              "type": "string",
              "title": "Database user",
              "description": "The user to connect to the database.",
              "default": ""
            },
            "dbvendor": {
              "$id": "#/properties/global/properties/database/properties/dbvendor",
              "type": "string",
              "title": "Database vendor",
              "description": "Database vendor DB2 or Oracle.",
              "default": "DB2"
            },
            "datasourceName": {
              "$id": "#/properties/global/properties/database/properties/datasourceName",
              "type": "string",
              "title": "Datasource Name",
              "description": "External datasource name.",
              "default": "jdbc/OMDS"
            },
            "systemPool": {
              "$id": "#/properties/global/properties/database/properties/systemPool",
              "type": "boolean",
              "title": "System Pool",
              "description": "Is database system pool?",
              "default": true
            },
            "schema": {
              "$id": "#/properties/global/properties/database/properties/schema",
              "type": "string",
              "title": "Database schema",
              "description": "Database schema name.For Db2 it is defaulted as global.database.dbname and for Oracle it is defaulted as global.database.user.",
              "default": ""
            }
          },
          "additionalProperties": true
        },
        "serviceAccountName": {
          "$id": "#/properties/global/properties/serviceAccountName",
          "type": "string",
          "title": "Service account",
          "description": "The name of the service account being used.",
          "default": "default"
        },
        "customerOverrides": {
          "$id": "#/properties/global/properties/customerOverrides",
          "type": "array",
          "title": "Customer overrides",
          "description": "Array of customer overrides properties as key=value pair.",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/global/properties/customerOverrides/items",
            "type": "string"
          }
        },
        "envs": {
          "$id": "#/properties/global/properties/envs",
          "type": "array",
          "title": "Environment variables",
          "description": "Environment variables as array of kubernetes EnvVars objects.",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/global/properties/envs/items",
            "type": "object",
            "default": {}
          }
        },
        "persistence": {
          "$id": "#/properties/global/properties/persistence",
          "type": "object",
          "title": "Persistence volume",
          "description": "Persistence volume information.",
          "default": {},
          "required": ["claims", "securityContext"],
          "properties": {
            "claims": {
              "$id": "#/properties/global/properties/persistence/properties/claims",
              "type": "object",
              "default": {},
              "required": ["name", "accessMode", "capacity", "capacityUnit"],
              "properties": {
                "name": {
                  "$id": "#/properties/global/properties/persistence/properties/claims/properties/name",
                  "type": "string",
                  "title": "Persistent volume name",
                  "default": "oms-common"
                },
                "accessMode": {
                  "$id": "#/properties/global/properties/persistence/properties/claims/properties/accessMode",
                  "type": "string",
                  "title": "Access mode",
                  "default": "ReadWriteMany"
                },
                "capacity": {
                  "$id": "#/properties/global/properties/persistence/properties/claims/properties/capacity",
                  "type": "integer",
                  "title": "Capacity",
                  "default": 10
                },
                "capacityUnit": {
                  "$id": "#/properties/global/properties/persistence/properties/claims/properties/capacityUnit",
                  "type": "string",
                  "title": "Capacity unit",
                  "default": "Gi"
                },
                "storageClassName": {
                  "$id": "#/properties/global/properties/persistence/properties/claims/properties/storageClassName",
                  "type": ["string", "null"],
                  "title": "Storage Class Name",
                  "default": ""
                }
              },
              "additionalProperties": true
            },
            "securityContext": {
              "$id": "#/properties/global/properties/persistence/properties/securityContext",
              "type": "object",
              "title": "Security context",
              "description": "A security context defines privilege and access control settings for a Pod or Container.",
              "default": {},
              "required": ["fsGroup", "supplementalGroup"],
              "properties": {
                "fsGroup": {
                  "$id": "#/properties/global/properties/persistence/properties/securityContext/properties/fsGroup",
                  "type": "integer",
                  "title": "fsGroup",
                  "description": "File system group id to access the persistent volume.",
                  "default": 0
                },
                "supplementalGroup": {
                  "$id": "#/properties/global/properties/persistence/properties/securityContext/properties/supplementalGroup",
                  "type": "integer",
                  "title": "supplementalGroup",
                  "description": "Supplemental group id to access the persistent volume.",
                  "default": 0
                }
              },
              "additionalProperties": true
            }
          },
          "additionalProperties": true
        },
        "mq": {
          "$id": "#/properties/global/properties/mq",
          "type": "object",
          "title": "MQ",
          "description": "MQ parameters.",
          "default": {},
          "required": ["bindingConfigName", "bindingMountPath"],
          "properties": {
            "bindingConfigName": {
              "$id": "#/properties/global/properties/mq/properties/bindingConfigName",
              "type": "string",
              "title": "MQ binding config",
              "description": "Name of the MQ binding file config map.",
              "default": ""
            },
            "bindingMountPath": {
              "$id": "#/properties/global/properties/mq/properties/bindingMountPath",
              "type": "string",
              "title": "MQ binding mount path",
              "description": "Path where the binding file will be mounted.",
              "default": "/opt/ssfs/.bindings"
            }
          },
          "additionalProperties": true
        },
        "arch": {
          "$id": "#/properties/global/properties/arch",
          "type": "object",
          "title": "Architecture",
          "description": "Architecture affinity while scheduling pods.",
          "default": {},
          "required": ["amd64", "ppc64le"],
          "properties": {
            "amd64": {
              "$id": "#/properties/global/properties/arch/properties/amd64",
              "type": "string",
              "default": "2 - No preference"
            },
            "ppc64le": {
              "$id": "#/properties/global/properties/arch/properties/ppc64le",
              "type": "string",
              "default": "2 - No preference"
            }
          },
          "additionalProperties": true
        },
        "log": {
          "$id": "#/properties/global/properties/log",
          "type": "object",
          "title": "Log configs",
          "description": "Configurations for the logs.",
          "default": {},
          "required": ["format"],
          "properties": {
            "format": {
              "$id": "#/properties/global/properties/log/properties/format",
              "type": "string",
              "title": "Log format",
              "default": "json"
            }
          },
          "additionalProperties": true
        },
        "customConfigMaps": {
          "$id": "#/properties/global/properties/customConfigMaps",
          "type": "array",
          "title": "Custom config maps",
          "description": "Array of custom config maps.",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/global/properties/customConfigMaps/items",
            "type": "object"
          }
        },
        "customSecrets": {
          "$id": "#/properties/global/properties/customSecrets",
          "type": "array",
          "title": "Custom secrets",
          "description": "Array of secrets.",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/global/properties/customSecrets/items",
            "type": "object"
          }
        }
      },
      "additionalProperties": true
    },
    "appserver": {
      "$id": "#/properties/appserver",
      "type": "object",
      "title": "Appserver values",
      "default": {},
      "required": [
        "exposeRestService",
        "replicaCount",
        "image",
        "config",
        "livenessCheckBeginAfterSeconds",
        "livenessFailRestartAfterMinutes",
        "service",
        "resources",
        "ingress",
        "podLabels",
        "tolerations",
        "nodeAffinity",
        "podAffinity",
        "podAntiAffinity"
      ],
      "properties": {
        "deploymentStrategy": {
          "$id": "#/properties/appserver/properties/deploymentStrategy",
          "type": "object",
          "title": "Deployment Strategy.",
          "description": "Deployment Strategy for Application servers.",
          "default": {}
        },
        "exposeRestService": {
          "$id": "#/properties/appserver/properties/exposeRestService",
          "type": "boolean",
          "title": "Expose rest service",
          "description": "This flag is applicable only when route API (route.openshift.io/v1) exists. When enabled a new deployment of om-app image is created exposing /smcfs with a new route having the prefix xapirest.",
          "default": false
        },
        "replicaCount": {
          "$id": "#/properties/appserver/properties/replicaCount",
          "type": "integer",
          "title": "Appserver Replicas",
          "description": "Number of appserver instances.",
          "default": 1
        },
        "image": {
          "$id": "#/properties/appserver/properties/image",
          "type": "object",
          "title": "Appserver image",
          "description": "Docker image details of appserver.",
          "default": {},
          "required": ["tag", "pullPolicy", "names"],
          "properties": {
            "tag": {
              "$id": "#/properties/appserver/properties/image/properties/tag",
              "type": "string",
              "title": "Appserver image tag",
              "description": "The tag of the appserver image.",
              "default": "10.0.0.17"
            },
            "pullPolicy": {
              "$id": "#/properties/appserver/properties/image/properties/pullPolicy",
              "type": "string",
              "pattern": "^(Always|Never|IfNotPresent)$",
              "title": "Appserver pullPolicy",
              "description": "The pullPolicy used when pulling appserver image.",
              "default": "IfNotPresent"
            },
            "names": {
              "$id": "#/properties/appserver/properties/image/properties/names",
              "type": "array",
              "title": "Appserver image names",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/image/properties/names/items",
                "type": "object",
                "default": {},
                "properties": {
                  "name": {
                    "$id": "#/properties/appserver/properties/image/properties/names/items/properties/name",
                    "type": "string",
                    "title": "Appserver image name",
                    "description": "Appserver image name.",
                    "default": "om-app"
                  },
                  "probePath": {
                    "$id": "#/properties/appserver/properties/image/properties/names/items/properties/probePath",
                    "type": "string",
                    "title": "Appserver probePath",
                    "description": "Appserver probe path.",
                    "default": "/smcfs/heartbeat/heartbeat.jsp"
                  },
                  "tag": {
                    "$id": "#/properties/appserver/properties/image/properties/names/items/properties/tag",
                    "type": "string",
                    "title": "Appserver image tag",
                    "description": "Appserver image tag.",
                    "default": ""
                  },
                  "replicaCount": {
                    "$id": "#/properties/appserver/properties/image/properties/names/items/properties/replicaCount",
                    "type": "integer",
                    "title": "Appserver replicas",
                    "description": "Appserver replicas.",
                    "default": 1
                  },
                  "applications": {
                    "$id": "#/properties/appserver/properties/image/properties/names/items/properties/applications",
                    "type": "array",
                    "title": "Appserver applications",
                    "description": "Appserver applications.",
                    "default": [],
                    "additionalItems": true,
                    "items": {
                      "$id": "#/properties/appserver/properties/image/properties/names/items/properties/applications/items",
                      "type": "object",
                      "default": {},
                      "required": ["path"],
                      "properties": {
                        "path": {
                          "$id": "#/properties/appserver/properties/image/properties/names/items/properties/applications/items/properties/path",
                          "type": "string",
                          "title": "Application path",
                          "description": "Application path.",
                          "default": ""
                        },
                        "routePrefix": {
                          "$id": "#/properties/appserver/properties/image/properties/names/items/properties/applications/items/properties/routePrefix",
                          "type": "string",
                          "title": "Application routePrefix",
                          "description": "The route prefix for the application.",
                          "default": ""
                        }
                      },
                      "additionalProperties": true
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": true
        },
        "config": {
          "$id": "#/properties/appserver/properties/config",
          "type": "object",
          "title": "Appserver configs",
          "description": "The configurations for appserver.",
          "default": {},
          "required": ["vendor", "vendorFile", "serverName", "jvm", "database"],
          "properties": {
            "vendor": {
              "$id": "#/properties/appserver/properties/config/properties/vendor",
              "type": "string",
              "title": "Vendor",
              "description": "OMS vendor.",
              "default": "websphere"
            },
            "vendorFile": {
              "$id": "#/properties/appserver/properties/config/properties/vendorFile",
              "type": "string",
              "title": "Vendor file",
              "description": "OMS vendor file.",
              "default": "servers.properties"
            },
            "serverName": {
              "$id": "#/properties/appserver/properties/config/properties/serverName",
              "type": "string",
              "title": "Server name",
              "description": "App server name.",
              "default": "DefaultAppServer"
            },
            "jvm": {
              "$id": "#/properties/appserver/properties/config/properties/jvm",
              "type": "object",
              "title": "JVM",
              "description": "JVM parameters.",
              "default": {},
              "required": ["xms", "xmx", "params"],
              "properties": {
                "xms": {
                  "$id": "#/properties/appserver/properties/config/properties/jvm/properties/xms",
                  "type": "string",
                  "default": "1024m"
                },
                "xmx": {
                  "$id": "#/properties/appserver/properties/config/properties/jvm/properties/xmx",
                  "type": "string",
                  "default": "2048m"
                },
                "params": {
                  "$id": "#/properties/appserver/properties/config/properties/jvm/properties/params",
                  "type": "array",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/appserver/properties/config/properties/jvm/properties/params/items"
                  }
                }
              },
              "additionalProperties": true
            },
            "database": {
              "$id": "#/properties/appserver/properties/config/properties/database",
              "type": "object",
              "title": "Database configs",
              "description": "The database configurations for appserver.",
              "default": {},
              "required": ["maxPoolSize", "minPoolSize"],
              "properties": {
                "maxPoolSize": {
                  "$id": "#/properties/appserver/properties/config/properties/database/properties/maxPoolSize",
                  "type": "integer",
                  "title": "Max pool size",
                  "description": "Database maximum pool size.",
                  "default": 50
                },
                "minPoolSize": {
                  "$id": "#/properties/appserver/properties/config/properties/database/properties/minPoolSize",
                  "type": "integer",
                  "title": "Min pool size",
                  "description": "Database minimum pool size.",
                  "default": 10
                }
              },
              "additionalProperties": true
            },
            "corethreads": {
              "$id": "#/properties/appserver/properties/config/properties/corethreads",
              "type": "integer",
              "title": "Core threads",
              "description": "Core threads for Liberty.",
              "default": 20
            },
            "maxthreads": {
              "$id": "#/properties/appserver/properties/config/properties/maxthreads",
              "type": "integer",
              "title": "Max threads",
              "description": "Maximum threads for Liberty.",
              "default": 100
            },
            "libertyServerXml": {
              "$id": "#/properties/appserver/properties/config/properties/libertyServerXml",
              "type": "string",
              "title": "Liberty server XML",
              "description": "Custom server.xml for Liberty.",
              "default": ""
            },
            "libertyStartupWrapper": {
              "$id": "#/properties/appserver/properties/config/properties/libertyStartupWrapper",
              "type": "string",
              "title": "Liberty startup wrapper",
              "description": "The startup wrapper script for Liberty.",
              "default": "/opt/ibm/helpers/runtime/docker-server.sh"
            }
          },
          "additionalProperties": true
        },
        "livenessCheckBeginAfterSeconds": {
          "$id": "#/properties/appserver/properties/livenessCheckBeginAfterSeconds",
          "type": "integer",
          "title": "Liveness check begin after seconds",
          "description": "Approx wait time(secs) to begin the liveness check.",
          "default": 900
        },
        "livenessFailRestartAfterMinutes": {
          "$id": "#/properties/appserver/properties/livenessFailRestartAfterMinutes",
          "type": "integer",
          "title": "Liveness fail restart after minutes",
          "description": "Approx time period (mins) after which server is restarted if liveness check keeps failing for this period.",
          "default": 10
        },
        "service": {
          "$id": "#/properties/appserver/properties/service",
          "type": "object",
          "title": "Service",
          "description": "Appserver service.",
          "default": {},
          "required": ["http", "https", "annotations", "labels"],
          "properties": {
            "http": {
              "$id": "#/properties/appserver/properties/service/properties/http",
              "type": "object",
              "title": "HTTP port",
              "description": "HTTP container port.",
              "default": {},
              "required": ["port"],
              "properties": {
                "port": {
                  "$id": "#/properties/appserver/properties/service/properties/http/properties/port",
                  "type": ["integer", "null"],
                  "default": 9080
                }
              },
              "additionalProperties": true
            },
            "https": {
              "$id": "#/properties/appserver/properties/service/properties/https",
              "type": "object",
              "title": "HTTPS port",
              "description": "HTTPS container port.",
              "default": {},
              "required": ["port"],
              "properties": {
                "port": {
                  "$id": "#/properties/appserver/properties/service/properties/https/properties/port",
                  "type": ["integer", "null"],
                  "default": 9443
                }
              },
              "additionalProperties": true
            },
            "annotations": {
              "$id": "#/properties/appserver/properties/service/properties/annotations",
              "type": "object",
              "title": "Additional Service Annotations",
              "description": "Additional annotations for the service resource.",
              "default": {},
              "required": [],
              "additionalProperties": true
            },
            "labels": {
              "$id": "#/properties/appserver/properties/service/properties/labels",
              "type": "object",
              "title": "Additional Service Labels",
              "description": "Additional labels for the service resource.",
              "default": {},
              "required": [],
              "additionalProperties": true
            }
          },
          "additionalProperties": true
        },
        "resources": {
          "$id": "#/properties/appserver/properties/resources",
          "type": "object",
          "title": "Appserver resources",
          "description": "Appserver CPU/Memory resource requests/limits.",
          "default": {},
          "required": ["requests", "limits"],
          "properties": {
            "requests": {
              "$id": "#/properties/appserver/properties/resources/properties/requests",
              "type": "object",
              "title": "Appserver resouces requests",
              "default": {},
              "required": ["memory", "cpu"],
              "properties": {
                "memory": {
                  "$id": "#/properties/appserver/properties/resources/properties/requests/properties/memory",
                  "type": "string",
                  "title": "Appserver memory",
                  "description": "Appserver memory request.",
                  "default": "2560Mi"
                },
                "cpu": {
                  "$id": "#/properties/appserver/properties/resources/properties/requests/properties/cpu",
                  "type": "number",
                  "title": "Appserver cpu",
                  "description": "Appserver cpu request.",
                  "default": 1
                }
              },
              "additionalProperties": true
            },
            "limits": {
              "$id": "#/properties/appserver/properties/resources/properties/limits",
              "type": "object",
              "title": "Appserver resouces limits",
              "default": {},
              "required": ["memory", "cpu"],
              "properties": {
                "memory": {
                  "$id": "#/properties/appserver/properties/resources/properties/limits/properties/memory",
                  "type": "string",
                  "title": "Appserver memory",
                  "description": "Appserver memory limit.",
                  "default": "3840Mi"
                },
                "cpu": {
                  "$id": "#/properties/appserver/properties/resources/properties/limits/properties/cpu",
                  "type": "integer",
                  "title": "Appserver cpu",
                  "description": "Appserver cpu limit.",
                  "default": 2
                }
              },
              "additionalProperties": true
            }
          },
          "additionalProperties": true
        },
        "ingress": {
          "$id": "#/properties/appserver/properties/ingress",
          "type": "object",
          "title": "Ingress",
          "description": "Appserver ingress.",
          "default": {},
          "required": [
            "host",
            "ssl",
            "controller",
            "contextRoots",
            "annotations",
            "labels"
          ],
          "properties": {
            "host": {
              "$id": "#/properties/appserver/properties/ingress/properties/host",
              "type": "string",
              "title": "Ingress host",
              "default": ""
            },
            "ssl": {
              "$id": "#/properties/appserver/properties/ingress/properties/ssl",
              "type": "object",
              "title": "SSL",
              "default": {},
              "required": ["enabled", "secretname"],
              "properties": {
                "enabled": {
                  "$id": "#/properties/appserver/properties/ingress/properties/ssl/properties/enabled",
                  "type": "boolean",
                  "title": "Enable SSL",
                  "description": "Whether SSL enabled for ingress.",
                  "default": true
                },
                "secretname": {
                  "$id": "#/properties/appserver/properties/ingress/properties/ssl/properties/secretname",
                  "type": "string",
                  "title": "Ingress secret name",
                  "default": ""
                }
              },
              "additionalProperties": true
            },
            "controller": {
              "$id": "#/properties/appserver/properties/ingress/properties/controller",
              "type": "string",
              "title": "Ingress controller",
              "description": "Controller class for ingress controller.",
              "default": "nginx"
            },
            "contextRoots": {
              "$id": "#/properties/appserver/properties/ingress/properties/contextRoots",
              "type": "array",
              "title": "Appserver contextRoots",
              "description": "Context roots which are allowed to be accessed through ingress.",
              "default": ["smcfs", "sbc", "sma", "isccs", "wsc", "adminCenter"],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/ingress/properties/contextRoots/items",
                "type": "string",
                "default": ""
              }
            },
            "annotations": {
              "$id": "#/properties/appserver/properties/ingress/properties/annotations",
              "type": "object",
              "title": "Additional Ingress Annotations",
              "description": "Additional annotations for the ingress resource.",
              "default": {},
              "required": [],
              "additionalProperties": true
            },
            "labels": {
              "$id": "#/properties/appserver/properties/ingress/properties/labels",
              "type": "object",
              "title": "Additional Ingress Labels",
              "description": "Additional labels for the ingress resource.",
              "default": {},
              "required": [],
              "additionalProperties": true
            }
          },
          "additionalProperties": true
        },
        "podLabels": {
          "$id": "#/properties/appserver/properties/podLabels",
          "type": "object",
          "title": "Appserver pod labels",
          "description": "Custom labels for the appserver pod.",
          "default": {},
          "required": [],
          "additionalProperties": true
        },
        "tolerations": {
          "$id": "#/properties/appserver/properties/tolerations",
          "type": "array",
          "title": "Appserver tolerations",
          "description": "Tolerations for appserver pod. Specify in accordance with k8s PodSpec.tolerations. Refer section 'Affinity and Tolerations'.",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/appserver/properties/tolerations/items",
            "type": "object",
            "default": {}
          }
        },
        "nodeAffinity": {
          "$id": "#/properties/appserver/properties/nodeAffinity",
          "type": "object",
          "title": "Appserver nodeAffinity",
          "default": {},
          "required": [
            "requiredDuringSchedulingIgnoredDuringExecution",
            "preferredDuringSchedulingIgnoredDuringExecution"
          ],
          "properties": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "$id": "#/properties/appserver/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
              "type": "object",
              "description": "k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
              "default": {},
              "required": [],
              "additionalProperties": true
            },
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "$id": "#/properties/appserver/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
              "type": "array",
              "description": "k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
                "type": "object",
                "default": {}
              }
            }
          },
          "additionalProperties": true
        },
        "podAffinity": {
          "$id": "#/properties/appserver/properties/podAffinity",
          "type": "object",
          "title": "Appserver podAffinity",
          "default": {},
          "required": [
            "requiredDuringSchedulingIgnoredDuringExecution",
            "preferredDuringSchedulingIgnoredDuringExecution"
          ],
          "properties": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "$id": "#/properties/appserver/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
              "type": "array",
              "description": "k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
                "type": "object",
                "default": {}
              }
            },
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "$id": "#/properties/appserver/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
              "type": "array",
              "description": "k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
                "type": "object",
                "default": {}
              }
            }
          },
          "additionalProperties": true
        },
        "podAntiAffinity": {
          "$id": "#/properties/appserver/properties/podAntiAffinity",
          "type": "object",
          "title": "Appserver podAntiAffinity",
          "default": {},
          "required": [
            "requiredDuringSchedulingIgnoredDuringExecution",
            "preferredDuringSchedulingIgnoredDuringExecution",
            "replicaNotOnSameNode"
          ],
          "properties": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "$id": "#/properties/appserver/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
              "type": "array",
              "description": "k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
                "type": "object",
                "default": {}
              }
            },
            "preferredDuringSchedulingIgnoredDuringExecution": {
              "$id": "#/properties/appserver/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
              "type": "array",
              "description": "k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/appserver/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
                "type": "object",
                "default": {}
              }
            },
            "replicaNotOnSameNode": {
              "$id": "#/properties/appserver/properties/podAntiAffinity/properties/replicaNotOnSameNode",
              "type": "object",
              "title": "Replica not on same node",
              "description": "Directive to prevent scheduling of replica pod on the same node. valid values: prefer, require, blank",
              "default": {},
              "required": ["mode", "weightForPreference"],
              "properties": {
                "mode": {
                  "$id": "#/properties/appserver/properties/podAntiAffinity/properties/replicaNotOnSameNode/properties/mode",
                  "type": "string",
                  "default": "prefer"
                },
                "weightForPreference": {
                  "$id": "#/properties/appserver/properties/podAntiAffinity/properties/replicaNotOnSameNode/properties/weightForPreference",
                  "type": "integer",
                  "title": "Weight for preference",
                  "description": "Preference weighting 1-100. Used if 'prefer' is specified for appserver.podAntiAffinity.replicaNotOnSameNode.",
                  "default": 100
                }
              },
              "additionalProperties": true
            }
          },
          "additionalProperties": true
        }
      },
      "additionalProperties": true
    },
    "omserver": {
      "$id": "#/properties/omserver",
      "type": "object",
      "title": "Omserver values",
      "default": {},
      "required": ["image", "common", "deployHealthMonitor", "servers"],
      "properties": {
        "deploymentStrategy": {
          "$id": "#/properties/omserver/properties/deploymentStrategy",
          "type": "object",
          "title": "Deployment Strategy.",
          "description": "Deployment Strategy for Agent/Integration servers.",
          "default": {}
        },
        "image": {
          "$id": "#/properties/omserver/properties/image",
          "type": "object",
          "title": "Omserver image",
          "description": "Docker image details of agent server.",
          "default": {},
          "required": ["name", "tag", "pullPolicy"],
          "properties": {
            "name": {
              "$id": "#/properties/omserver/properties/image/properties/name",
              "type": "string",
              "title": "Omserver image name",
              "default": "om-agent"
            },
            "tag": {
              "$id": "#/properties/omserver/properties/image/properties/tag",
              "type": "string",
              "title": "Omserver image tag",
              "default": "10.0.0.17"
            },
            "pullPolicy": {
              "$id": "#/properties/omserver/properties/image/properties/pullPolicy",
              "type": "string",
              "pattern": "^(Always|Never|IfNotPresent)$",
              "title": "Omserver pullPolicy",
              "description": "The pullPolicy used when pulling omserver image.",
              "default": "IfNotPresent"
            }
          },
          "additionalProperties": true
        },
        "common": {
          "$id": "#/properties/omserver/properties/common",
          "type": "object",
          "title": "Omserver common",
          "default": {},
          "required": [
            "jvmArgs",
            "replicaCount",
            "resources",
            "readinessFailRestartAfterMinutes",
            "podLabels",
            "tolerations",
            "nodeAffinity",
            "podAffinity",
            "podAntiAffinity"
          ],
          "properties": {
            "jvmArgs": {
              "$id": "#/properties/omserver/properties/common/properties/jvmArgs",
              "type": "string",
              "title": "Omserver JVM args",
              "description": "Default JVM args that will be passed to the list of agent servers.",
              "default": "-Xms512m -Xmx1024m"
            },
            "replicaCount": {
              "$id": "#/properties/omserver/properties/common/properties/replicaCount",
              "type": "integer",
              "title": "Omserver replicas",
              "description": "Default number of instances of agent servers that will be deployed.",
              "default": 1
            },
            "resources": {
              "$id": "#/properties/omserver/properties/common/properties/resources",
              "type": "object",
              "title": "Omserver resources",
              "description": "Omserver CPU/Memory resource requests/limits.",
              "default": {},
              "required": ["requests", "limits"],
              "properties": {
                "requests": {
                  "$id": "#/properties/omserver/properties/common/properties/resources/properties/requests",
                  "type": "object",
                  "title": "Omserver resouces requests",
                  "default": {},
                  "required": ["memory", "cpu"],
                  "properties": {
                    "memory": {
                      "$id": "#/properties/omserver/properties/common/properties/resources/properties/requests/properties/memory",
                      "type": "string",
                      "title": "Omserver memory",
                      "description": "Omserver memory request.",
                      "default": "1024Mi"
                    },
                    "cpu": {
                      "$id": "#/properties/omserver/properties/common/properties/resources/properties/requests/properties/cpu",
                      "type": "number",
                      "title": "Omserver cpu",
                      "description": "Omserver cpu request.",
                      "default": 0.5
                    }
                  },
                  "additionalProperties": true
                },
                "limits": {
                  "$id": "#/properties/omserver/properties/common/properties/resources/properties/limits",
                  "type": "object",
                  "title": "Omserver resources limits",
                  "default": {},
                  "required": ["memory", "cpu"],
                  "properties": {
                    "memory": {
                      "$id": "#/properties/omserver/properties/common/properties/resources/properties/limits/properties/memory",
                      "type": "string",
                      "title": "Omserver memory",
                      "description": "Omserver memory limit.",
                      "default": "2048Mi"
                    },
                    "cpu": {
                      "$id": "#/properties/omserver/properties/common/properties/resources/properties/limits/properties/cpu",
                      "type": "integer",
                      "title": "Omserver cpu",
                      "description": "Omserver cpu limit.",
                      "default": 1
                    }
                  },
                  "additionalProperties": true
                }
              },
              "additionalProperties": true
            },
            "readinessFailRestartAfterMinutes": {
              "$id": "#/properties/omserver/properties/common/properties/readinessFailRestartAfterMinutes",
              "type": "integer",
              "title": "Readiness fail restart after minutes",
              "description": "Approx time period (mins) after which agent is restarted if readiness check keeps failing for this period.",
              "default": 10
            },
            "podLabels": {
              "$id": "#/properties/omserver/properties/common/properties/podLabels",
              "type": "object",
              "title": "Omserver pod labels",
              "description": "Custom labels for the agent pod(s).",
              "default": {},
              "required": [],
              "additionalProperties": true
            },
            "tolerations": {
              "$id": "#/properties/omserver/properties/common/properties/tolerations",
              "type": "array",
              "title": "Omserver tolerations",
              "description": "Tolerations for agent pod. Specify in accordance with k8s PodSpec.tolerations..",
              "default": [],
              "additionalItems": true,
              "items": {
                "$id": "#/properties/omserver/properties/common/properties/tolerations/items",
                "type": "object",
                "default": {}
              }
            },
            "nodeAffinity": {
              "$id": "#/properties/omserver/properties/common/properties/nodeAffinity",
              "type": "object",
              "title": "Omserver nodeAffinity",
              "default": {},
              "required": [
                "requiredDuringSchedulingIgnoredDuringExecution",
                "preferredDuringSchedulingIgnoredDuringExecution"
              ],
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "$id": "#/properties/omserver/properties/common/properties/nodeAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "object",
                  "description": "k8s PodSpec.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
                  "default": {},
                  "required": [],
                  "additionalProperties": true
                },
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "$id": "#/properties/omserver/properties/common/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                  "type": "array",
                  "title": "The preferredDuringSchedulingIgnoredDuringExecution schema",
                  "description": "k8s PodSpec.nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/omserver/properties/common/properties/nodeAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
                    "type": "object",
                    "default": {}
                  }
                }
              },
              "additionalProperties": true
            },
            "podAffinity": {
              "$id": "#/properties/omserver/properties/common/properties/podAffinity",
              "type": "object",
              "title": "Omserver podAffinity",
              "default": {},
              "required": [
                "requiredDuringSchedulingIgnoredDuringExecution",
                "preferredDuringSchedulingIgnoredDuringExecution"
              ],
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "$id": "#/properties/omserver/properties/common/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array",
                  "description": "k8s PodSpec.podAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/omserver/properties/common/properties/podAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
                    "type": "object",
                    "default": {}
                  }
                },
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "$id": "#/properties/omserver/properties/common/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                  "type": "array",
                  "description": "k8s PodSpec.podAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/omserver/properties/common/properties/podAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
                    "type": "object",
                    "default": {}
                  }
                }
              },
              "additionalProperties": true
            },
            "podAntiAffinity": {
              "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity",
              "type": "object",
              "title": "Omserver podAntiAffinity",
              "default": {},
              "required": [
                "requiredDuringSchedulingIgnoredDuringExecution",
                "preferredDuringSchedulingIgnoredDuringExecution",
                "replicaNotOnSameNode"
              ],
              "properties": {
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution",
                  "type": "array",
                  "description": "k8s PodSpec.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution.",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/requiredDuringSchedulingIgnoredDuringExecution/items",
                    "type": "object",
                    "default": {}
                  }
                },
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution",
                  "type": "array",
                  "description": "k8s PodSpec.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.",
                  "default": [],
                  "additionalItems": true,
                  "items": {
                    "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/preferredDuringSchedulingIgnoredDuringExecution/items",
                    "type": "object",
                    "default": {}
                  }
                },
                "replicaNotOnSameNode": {
                  "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/replicaNotOnSameNode",
                  "type": "object",
                  "title": "Replica not on same node",
                  "description": "Directive to prevent scheduling of replica pod on the same node. valid values: prefer, require, blank",
                  "default": {},
                  "required": ["mode", "weightForPreference"],
                  "properties": {
                    "mode": {
                      "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/replicaNotOnSameNode/properties/mode",
                      "type": "string",
                      "default": "prefer"
                    },
                    "weightForPreference": {
                      "$id": "#/properties/omserver/properties/common/properties/podAntiAffinity/properties/replicaNotOnSameNode/properties/weightForPreference",
                      "type": "integer",
                      "title": "Weight for preference",
                      "description": "Preference weighting 1-100. Used if 'prefer' is specified for appserver.podAntiAffinity.replicaNotOnSameNode.",
                      "default": 100
                    }
                  },
                  "additionalProperties": true
                }
              },
              "additionalProperties": true
            }
          },
          "additionalProperties": true
        },
        "deployHealthMonitor": {
          "$id": "#/properties/omserver/properties/deployHealthMonitor",
          "type": "boolean",
          "title": "Deploy health monitor agent",
          "description": "Whether to deloy health monitor agent.",
          "default": true
        },
        "servers": {
          "$id": "#/properties/omserver/properties/servers",
          "type": "array",
          "default": [],
          "additionalItems": true,
          "items": {
            "$id": "#/properties/omserver/properties/servers/items",
            "type": "object",
            "default": {},
            "required": ["group", "name"],
            "properties": {
              "group": {
                "$id": "#/properties/omserver/properties/servers/items/properties/group",
                "type": "string",
                "title": "Agent group",
                "description": "Agent server group name.",
                "default": "Default Server"
              },
              "name": {
                "$id": "#/properties/omserver/properties/servers/items/properties/name",
                "type": "array",
                "title": "Agent name",
                "description": "List of agent server names.",
                "default": [],
                "additionalItems": true,
                "items": {
                  "$id": "#/properties/omserver/properties/servers/items/properties/name/items",
                  "type": "string",
                  "default": ""
                }
              },
              "replicaCount": {
                "$id": "#/properties/omserver/properties/servers/items/properties/replicaCount",
                "type": "integer",
                "title": "Agent Server Replicas",
                "description": "Number of agent server instances.",
                "default": 1
              },
              "resources": {
                "$id": "#/properties/omserver/properties/servers/items/properties/resources",
                "type": "object",
                "title": "Agent server resources",
                "description": "Agent server CPU/Memory resource requests/limits.",
                "default": {},
                "properties": {
                  "requests": {
                    "$id": "#/properties/omserver/properties/servers/items/properties/resources/properties/requests",
                    "type": "object",
                    "title": "Agent server resources requests",
                    "default": {},
                    "properties": {
                      "memory": {
                        "$id": "#/properties/omserver/properties/servers/items/properties/resources/properties/requests/properties/memory",
                        "type": "string",
                        "title": "Agent server memory",
                        "description": "Agent server memory requests.",
                        "default": "1024Mi"
                      },
                      "cpu": {
                        "$id": "#/properties/omserver/properties/servers/items/properties/resources/properties/requests/properties/cpu",
                        "type": "number",
                        "title": "Agent server cpu",
                        "description": "Agent server cpu request.",
                        "default": 0.5
                      }
                    }
                  },
                  "limits": {
                    "$id": "#/properties/omserver/properties/servers/items/properties/resources/properties/limits",
                    "type": "object",
                    "title": "Agent server resources limits",
                    "default": {},
                    "properties": {
                      "memory": {
                        "$id": "#/properties/omserver/properties/servers/items/properties/resources/properties/limits/properties/memory",
                        "type": "string",
                        "title": "Agent server memory",
                        "description": "Agent server memory limits.",
                        "default": "2048Mi"
                      },
                      "cpu": {
                        "$id": "#/properties/omserver/properties/servers/items/properties/resources/properties/limits/properties/cpu",
                        "type": "number",
                        "title": "Agent server cpu",
                        "description": "Agent server cpu limits.",
                        "default": 1
                      }
                    }
                  }
                }
              }
            },
            "additionalProperties": true
          }
        }
      },
      "additionalProperties": true
    },
    "datasetup": {
      "$id": "#/properties/datasetup",
      "type": "object",
      "title": "Datasetup",
      "default": {},
      "required": ["loadFactoryData", "mode"],
      "properties": {
        "loadFactoryData": {
          "$id": "#/properties/datasetup/properties/loadFactoryData",
          "type": "string",
          "title": "Load factory data",
          "default": "DoNotInstall"
        },
        "mode": {
          "$id": "#/properties/datasetup/properties/mode",
          "type": "string",
          "title": "Load factory data mode",
          "description": "Mode to run factory data load in.",
          "default": "create"
        },
        "fixPack": {
          "$id": "#/properties/datasetup/properties/fixPack",
          "type": "object",
          "title": "Fix Pack Datasetup",
          "default": {},
          "required": ["loadFPFactoryData", "installedFPNo"],
          "properties": {
            "loadFPFactoryData": {
              "$id": "#/properties/datasetup/properties/fixPack/properties/loadFPFactoryData",
              "type": "string",
              "title": "Load FP factory data",
              "default": "DoNotInstall"
            },
            "installedFPNo": {
              "$id": "#/properties/datasetup/properties/fixPack/properties/installedFPNo",
              "type": ["number", "null"],
              "title": "Installed FP number",
              "description": "FP number currently installed on database.",
              "default": 0
            }
          }
        }
      },
      "additionalProperties": true
    }
  },
  "additionalProperties": true
}
