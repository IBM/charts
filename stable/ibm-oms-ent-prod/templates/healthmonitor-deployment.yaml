# Licensed Materials - Property of IBM
# IBM Order Management Software (5725-D10)
# (C) Copyright IBM Corp. 2018, 2019 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
{{- if eq (.Values.global.license | lower) "accept" }}
{{- if eq .Values.omserver.deployHealthMonitor true }}
{{- include "sch.config.init" (list . "om-chart.sch.chart.config.values") }}
{{- $sysOverridesInitPath := "/opt/ssfs/system_overrides.properties.init" }}
{{- $sysOverridesPath := "/opt/ssfs/runtime/properties/system_overrides.properties" }}
{{- $varServerStateDir := "/opt/ssfs/runtime/serverstate" }}
{{- $varServerStateJvmArg := (printf "%s=%s" "-Dserver.state.dir" $varServerStateDir) }}
{{- $readyProbePeriod := 15 }}
{{- $readyFailRestartSeconds := (mul .Values.omserver.common.readinessFailRestartAfterMinutes 60) | default 600 }}
{{- $readyFailThreshold := div $readyFailRestartSeconds $readyProbePeriod }}
{{- /* for agent liveness check is not appplicable hence hardcoding livenessProbeDelay */}}
{{- $liveProbeBeginDelaySecs := 60 }}
{{- $liveFailThreshold := add (div (sub $readyFailRestartSeconds $liveProbeBeginDelaySecs) $readyProbePeriod) 1 }}
{{- $custLabels := .Values.omserver.common.podLabels | default (dict) }}
{{- $stdPodLabel := "role" }}
{{- $stdPodLabelVal := "healthmonitor" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "om-chart.fullname" . }}-healthmonitor
  labels:
{{ include "sch.metadata.labels.standard" (list .) | indent 4 }}
spec:
  replicas: {{ .Values.omserver.common.replicaCount | default 1 }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "" (set $custLabels $stdPodLabel $stdPodLabelVal)) | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "" (set $custLabels $stdPodLabel $stdPodLabelVal)) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
{{- with .Values.omserver.common.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
{{- end }}
      affinity:
{{- include "om-chart.nodeAffinity" (list . .Values.omserver.common.nodeAffinity) | indent 8 }}
{{- include "om-chart.podAffinity" (list . .Values.omserver.common.podAffinity) | indent 8 }}
{{- include "om-chart.podAntiAffinity" (list . .Values.omserver.common.podAntiAffinity $stdPodLabel $stdPodLabelVal) | indent 8 }}
      serviceAccountName: {{ .Values.global.serviceAccountName | default "default" }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: {{ .Values.global.persistence.securityContext.fsGroup | default 0 }}
        supplementalGroups: [{{ .Values.global.persistence.securityContext.supplementalGroup | default 0 }}]
      {{- if and (.Values.datasetup.loadFactoryData) (eq .Values.datasetup.loadFactoryData "install") }}
      initContainers:
      - name: {{ template "om-chart.fullname" . }}-healthmonitor-init
        image: "{{ .Values.global.image.repository }}/{{ .Values.omserver.image.name }}:{{ .Values.omserver.image.tag }}"
        securityContext:
          privileged: false
          runAsUser: 1000
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        command: ['/bin/bash', '-c']
        args:
        - 'touch /opt/ssfs/runtime/initfile && while [ -z $(find /shared -maxdepth 1 -newer /opt/ssfs/runtime/initfile -name datasetup.complete) ]; do echo "datasetup not complete $(date +%Y-%m-%d.%H.%M.%S)"; sleep 30; done; echo "datasetup found complete $(date +%Y-%m-%d.%H.%M.%S)"'
        volumeMounts:
        - name: {{ .Values.global.persistence.claims.name }}
          mountPath: "/shared"
      {{- end }}
      containers:
      - name: {{ template "om-chart.fullname" . }}-healthmonitor
        image: "{{ .Values.global.image.repository }}/{{ .Values.omserver.image.name }}:{{ .Values.omserver.image.tag }}"
        imagePullPolicy: {{ .Values.omserver.image.pullPolicy }}
        env:
        - name: OM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OM_RELEASE
          value: {{ .Release.Name }}
        - name: dbpassword
          valueFrom:
            secretKeyRef:
              name: {{ .Values.global.appSecret }}
              key: dbpassword
        - name: LOG_FORMAT
          value: {{ .Values.global.log.format | default "json" }}
{{- with .Values.global.envs }}
{{ toYaml . | indent 8 }}
{{- end }}
        resources:
{{ toYaml .Values.omserver.common.resources | indent 10 }}
        securityContext:
          privileged: false
          runAsUser: 1000
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        command: ["/bin/bash", "-c"]
        {{- $commonArg := printf "%s %s %s %s" "/opt/ssfs/evaluateEnvs.sh" $sysOverridesInitPath $sysOverridesPath "&& "}}
        {{- if .Values.omserver.common.jvmArgs }}
        args:
        - '{{ $commonArg }} 
        /opt/ssfs/runtime/bin/startHealthMonitor.sh -jvmargs {{ printf "%s %s" .Values.omserver.common.jvmArgs $varServerStateJvmArg | quote }}'
	      {{- else }}
        args:
        - '{{ $commonArg }} 
        /opt/ssfs/runtime/bin/startHealthMonitor.sh -jvmargs {{ printf "%s" $varServerStateJvmArg | quote }}'
        {{- end }}
        livenessProbe:
          exec:
            command:
            - '/bin/bash'
            - '-c'
            - '/opt/ssfs/agentStartupTest.sh {{ $varServerStateDir }} {{ printf "%s--%s_*" "HealthMonitor" "HealthMonitor" | quote }} {{ div $readyFailRestartSeconds 60 }}'
          initialDelaySeconds: {{ $liveProbeBeginDelaySecs }}
          {{- /* check for liveness every n seconds */}}
          periodSeconds: {{ $readyProbePeriod }}
          {{- /* A successful probe must return in less than 1 seconds */}}
          timeoutSeconds: 1
          failureThreshold: {{ $liveFailThreshold }}
        readinessProbe:
          exec:
            command:
            - '/bin/bash'
            - '-c'
            - '/opt/ssfs/agentStartupTest.sh {{ $varServerStateDir }} {{ printf "%s--%s_*" "HealthMonitor" "HealthMonitor" | quote }} {{ div $readyFailRestartSeconds 60 }}'
          initialDelaySeconds: 1
          {{- /* check for readiness every n seconds */}}
          periodSeconds: {{ $readyProbePeriod }}
          {{- /* A successful probe must return in less than 1 seconds */}}
          timeoutSeconds: 1
          failureThreshold: {{ $readyFailThreshold }}
        workingDir: "/opt/ssfs/runtime/"
        volumeMounts:
        - name: {{ .Values.global.persistence.claims.name }}
          mountPath: "/shared"
        - name: config
          mountPath: "/opt/ssfs/evaluateEnvs.sh"
          subPath: evaluateEnvs.sh
        - name: config
          mountPath: "/opt/ssfs/agentStartupTest.sh"
          subPath: agentStartupTest.sh
        - name: config
          mountPath: "{{ $sysOverridesInitPath }}"
          subPath: system_overrides.properties
        {{- if .Values.global.customerOverrides }}
        - name: config
          mountPath: "/opt/ssfs/runtime/properties/customer_overrides.properties"
          subPath: customer_overrides.properties
        {{- end }}
        # - name: host-timezone
        #   mountPath: /etc/localtime
      volumes:
      - name: config
        configMap:
          name: {{ template "om-chart.fullname" . }}-config
          items:
          - key: evaluateEnvs.sh
            path: evaluateEnvs.sh
            mode: 0754
          - key: agentStartupTest.sh
            path: agentStartupTest.sh
            mode: 0754
        {{- if .Values.global.customerOverrides }}
          - key: customer_overrides.properties
            path: customer_overrides.properties
        {{- end }}
          - key: system_overrides.properties
            path: system_overrides.properties
      - name: secret
        secret:
          secretName: {{ .Values.global.appSecret }}
      - name: {{ .Values.global.persistence.claims.name }}
        persistentVolumeClaim:
          claimName: {{ template "om-chart.fullname" . }}-{{ .Values.global.persistence.claims.name | lower }}
      # - name: host-timezone
      #   hostPath:
      #     path: /etc/localtime
{{- end }}
{{- end }}
