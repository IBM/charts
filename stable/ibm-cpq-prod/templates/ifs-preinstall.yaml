# Licensed Materials - Property of IBM
# IBM Sterling Configure Price Quote Software (5725-D11)
# (C) Copyright IBM Corp. 2019 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
{{- if eq .Values.global.install.ifs.enabled true }}
{{- if eq (.Values.ifs.license | lower) "accept" }}
{{- if and (.Values.ifsappserver.ingress.enabled) (.Values.ifsappserver.ingress.ssl.enabled) (not .Values.ifsappserver.ingress.ssl.secretname) }}
{{- include "sch.config.init" (list . "om-chart.sch.chart.config.values") }}
{{- $type := "preinstall" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "om-chart.fullname" . }}-ifspreinstall
  labels:
{{ include "sch.metadata.labels.standard" (list . "" (dict "type" $type)) | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "" (dict "type" $type)) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
      affinity:
{{- include "om-chart.nodeaffinity.onlyArch" . | indent 8 }}
      serviceAccountName: {{ .Values.ifs.serviceAccountName | default "default" }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: {{ .Values.ifs.persistence.securityContext.fsGroup | default 0 }}
        supplementalGroups: [{{ .Values.ifs.persistence.securityContext.supplementalGroup | default 0 }}]
      restartPolicy: "Never"
      {{- if .Values.global.image.pullsecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullsecret }}
      {{- end }}
      containers:
        - name: {{ template "om-chart.fullname" . }}-tls-secret-gen
          env:
          - name: OM_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: OM_RELEASE
            value: {{ .Release.Name }}
          - name: LOG_FORMAT
            value: {{ .Values.ifs.log.format | default "json" }}
{{- with .Values.ifs.envs }}
{{ toYaml . | indent 10 }}
{{- end }}
          image: "{{ regexReplaceAll "(^cp\\.(stg\\.)?icr\\.io/)" .Values.global.image.repository "${1}cp/" }}/{{ .Values.ifsagentserver.image.name }}:{{ .Values.ifsagentserver.image.tag }}"
          imagePullPolicy: {{ .Values.ifsagentserver.image.pullPolicy }}
          resources:
{{ toYaml .Values.ifsappserver.resources | indent 12 }}
          securityContext:
            privileged: false
            runAsUser: 1000
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          command: ["/bin/bash", "-c"]
          args:
          - 'kubectl version || exit 1;
openssl version || exit 1;
kubectl get secret {{ template "om-chart.auto-ingress-secret" . }} -n {{ .Release.Namespace }} && echo "tls secret already exists" && exit 0;
echo "creating tls secret";
openssl req -x509 -nodes -sha256 -subj "/CN={{ .Values.ifsappserver.ingress.host }}" -days 3650 -newkey rsa:2048 -keyout cert.key -out cert.crt || { exit 1; };
kubectl create secret tls {{ template "om-chart.auto-ingress-secret" . }} --key cert.key --cert cert.crt -n {{ .Release.Namespace }} || { rm -f cert.key cert.crt; exit 1; };
rm -f cert.key cert.crt; exit 0;'
{{- end }}
{{- end }}
{{- end }}
