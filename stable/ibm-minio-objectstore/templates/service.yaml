apiVersion: v1
kind: Service
metadata:
  name: {{ template "minio.fullname" . }}
  labels:
    app: {{ template "minio.name" . }}
    chart: {{ template "minio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
{{- if .Values.tls.enabled }}
    prometheus.io/scheme: "https"
{{- end }}
    prometheus.io/scrape: "{{ .Values.service.prometheusEnable }}"
    prometheus.io/path: "{{ .Values.service.prometheusPath }}"
    prometheus.io/port: "{{ .Values.service.prometheusPort }}"
spec:
{{- if (or (eq .Values.service.type "ClusterIP" "") (empty .Values.service.type)) }}
  {{- if eq .Values.mode "distributed" }}
  clusterIP: None
  {{- else }}
  type: ClusterIP
  {{- end }}
  {{- if not (empty .Values.service.clusterIP) }}
  clusterIP: {{ .Values.service.clusterIP }}
  {{end}}
{{- else if eq .Values.service.type "LoadBalancer" }}
  type: {{ .Values.service.type }}
  loadBalancerIP: {{ default "" .Values.service.loadBalancerIP }}
{{- else }}
  type: {{ .Values.service.type }}
{{- end }}
  ports:
    - name: service
      port: 9000
      targetPort: {{ .Values.service.port }}
      protocol: TCP
{{- if (and (eq .Values.service.type "NodePort") ( .Values.service.nodePort)) }}
      nodePort: {{ .Values.service.nodePort }}
{{- end}}
{{- if .Values.service.externalIPs }}
  externalIPs:
{{- range $i , $ip := .Values.service.externalIPs }}
  - {{ $ip }}
{{- end }}
{{- end }}
  selector:
    app: {{ template "minio.name" . }}
    release: {{ .Release.Name }}
