###############################################################################
## Architecture Configuration Parameters
###############################################################################
# Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
#  0 - Do not use
#  1 - Least preferred
#  2 - No preference
#  3 - Most preferred
arch:
  amd64: "2 - No preference"
  ppc64le: "2 - No preference"
  s390x: "2 - No preference"

## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the
##
image:
  repository: ibmcom/minio
  tag: RELEASE.2019-04-09T01-22-30Z.1
  pullPolicy: IfNotPresent

## Set default image, imageTag, and imagePullPolicy for the `mc` (the minio
## client used to create a default bucket).
##
mcImage:
  repository: ibmcom/minio-mc
  tag: RELEASE.2019-04-03T17-59-57Z.1
  pullPolicy: IfNotPresent

## minio server mode, i.e. standalone or distributed.
## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
##
mode: standalone

## Update strategy for Deployments
deploymentUpdate:
  type: RollingUpdate
  maxUnavailable: 1
  maxSurge: 1

## Update strategy for StatefulSets
statefulSetUpdate:
  updateStrategy: RollingUpdate


## Pod priority settings
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Set default accesskey, secretkey, Minio config file path, volume mount path and
## number of nodes (only used for Minio distributed mode)
## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
##
minioAccessSecret: ""
configPath: "/minio/.minio"
configPathmc: "/mcconf"
mountPath: "/export"
replicas: 4

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim: ~

  ## minio data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##

  useDynamicProvisioning: false
  storageClass: ~
  accessMode: ReadWriteOnce
  size: 10Gi

## If subPath is set mount a sub folder of a volume instead of the root of the volume.
## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
##
  subPath: ""

## Expose the Minio service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##

service:
  #  Allowed values are `NodePort`, `ClusterIP` or `LoadBalancer`
  type: ClusterIP
  clusterIP: ~
  loadBalancerIP: None
  port: 9000
  nodePort: 31311
  externalIPs: []
  #   - externalIp1
  prometheusEnable: false
  prometheusPath:   '/minio/prometheus/metrics'
  prometheusPort:   '9000'
    # prometheus.io/scrape: 'true'
    # prometheus.io/path:   '/minio/prometheus/metrics'
    # prometheus.io/port:   '9000'
  #annotations: ""

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Secure connection settings
##

tls:
  enabled: false
  # Specify whether a chart must autogenerate a self-signed TLS certificate or use the one that you provide.
  # Valid values are "cert-manager-generated" and "provided".
  type: "cert-manager-generated"
  minioTlsSecret: ""
  # Configuration for "selfsigned", "cert-manager-generated" certificates
  issuerRef:
    name: "icp-ca-issuer"
    # Valid values are ClusterIssuer and Issuer.
    kind: "ClusterIssuer"
  clusterDomain: "cluster.local"

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: ""
tolerations: ""
#affinity: ""
# Additational pod annotations
podAnnotations: {}

## Liveness and Readiness probe values.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 250m

## Create a bucket after minio install
##
defaultBucket:
  enabled: false
  ## If enabled, must be a string with length > 0
  name: bucket
  ## Can be one of none|download|upload|public
  policy: none
  ## Purge if bucket exists already
  purge: false

## Create multiple buckets after minio install
## Enabling `defaultBucket` will take priority over this list
##
buckets:
  - name: ""
    policy: none
    purge: false
  # - name: bucket2
  #   policy: none
  #   purge: false

s3gateway:
  enabled: false
  replicas: 4
  serviceEndpoint: ""

## Use minio as an azure blob gateway, you should disable data persistence so no volume claim are created.
## https://docs.minio.io/docs/minio-gateway-for-azure
azuregateway:
  enabled: false
  # Number of parallel instances
  replicas: 4

## Use minio as GCS (Google Cloud Storage) gateway, you should disable data persistence so no volume claim are created.
## https://docs.minio.io/docs/minio-gateway-for-gcs

gcsgateway:
  enabled: false
  # Number of parallel instances
  replicas: 4
  # credential json file of service account key
  gcsKeyJson: ""
  # Google cloud project-id
  projectId: ""

ossgateway:
  enabled: false
  # Number of parallel instances
  replicas: 4
  endpointURL: ""
## Use minio on NAS backend
## https://docs.minio.io/docs/minio-gateway-for-nas

nasgateway:
  enabled: false
  # Number of parallel instances
  replicas: 4
  # Generally for NAS Gateway, you'd like to bind the PVC to a specific PV. To ensure that happens, PV to bind to should have
  # a label like "pv: <value>", use value here.
  pv: ~
## Use this field to add environment variables relevant to Minio server. These fields will be passed on to Minio container(s)
## when Chart is deployed
environment:
  ## To disable Minio Browser, set this value to off
  - name: MINIO_BROWSER
    value: "on"
  ## To enable virtual-host-style requests, set this value to Minio host domain name.
  # - name: MINIO_DOMAIN
  #   value: ""
  ## Minio Cache settings, refer: https://docs.minio.io/docs/minio-disk-cache-guide.html
  # - name: MINIO_CACHE_DRIVES
  #   value: ""
  # - name: MINIO_CACHE_EXCLUDE
  #   value: ""
  # - name: MINIO_CACHE_EXPIRY
  #   value: ""
  # - name: MINIO_CACHE_MAXUSE
  #   value: ""
  ## Minio WORM setting, refer: https://docs.minio.io/docs/minio-server-configuration-guide.html
  # - name: MINIO_WORM
  #   value: ""
  ## Minio KMS settings, refer: https://docs.minio.io/docs/minio-kms-quickstart-guide.html
  # - name: MINIO_SSE_VAULT_ENDPOINT
  #   value: ""
  # - name: MINIO_SSE_VAULT_APPROLE_ID
  #   value: ""
  # - name: MINIO_SSE_VAULT_APPROLE_SECRET
  #   value: ""
  # - name: MINIO_SSE_VAULT_KEY_NAME
  #   value: ""
  ## Minio Federation settings, refer: https://docs.minio.io/docs/minio-federation-quickstart-guide.html
  # - name: MINIO_ETCD_ENDPOINTS
  #   value: ""
  # - name: MINIO_PUBLIC_IPS
  #   value: ""
  # - name: MINIO_DOMAIN
  #   value: ""
  ## Add other environment variables relevant to Minio server here. These values will be added to the container(s) as this Chart is deployed

networkPolicy:
  enabled: false
  allowExternal: true
