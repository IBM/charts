###############################################################################
# Licensed Materials - Property of IBM
# 5737-E67
# (C) Copyright IBM Corporation 2016, 2018 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
###############################################################################

###############################################################################
## Arch Metadata
###############################################################################
arch:
  __metadata:
    label: "Architecture scheduling preferences"
    description: "Architecture preference for target Minio server."
  amd64:
    __metadata:
      name: "amd64"
      label: "amd64 scheduling preference"
      description: "Architecture preference for target Minio server."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"
  ppc64le:
    __metadata:
      name: "ppc64le"
      label: "ppc64le scheduling preference"
      description: "Architecture preference for target Minio server."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"
  s390x:
    __metadata:
      name: "s390x"
      label: "s390x scheduling preference"
      description: "Architecture preference for target Minio server."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

image:
  __metadata:
    label: "Minio image configuration"
    description: "Docker registry to pull Minio image from."
  repository:
    __metadata:
      name: "Repository"
      label: "Docker Repository"
      description: "Docker registry to pull Minio image from."
      type: "string"
      immutable: false
      required: true
  tag:
    __metadata:
      name: "Image tag"
      label: "Image tag"
      description: "Image tag is used to choose Minio release version."
      type: "string"
      immutable: false
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "IfNotPresent"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"

mcImage:
  __metadata:
    label: "Minio client image configuration"
    description: "Docker registry to pull Minio Client image from."
  repository:
    __metadata:
      name: "Repository"
      label: "Docker Repository"
      description: "Docker registry to pull mc image from."
      type: "string"
      immutable: false
      required: true
  tag:
    __metadata:
      name: "Image tag"
      label: "Image tag"
      description: "Image tag is used to choose mc release version."
      type: "string"
      immutable: false
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "IfNotPresent"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"

mode:
  __metadata:
    name: "mode"
    label: "Minio server mode"
    description: "Sets Minio server mode"
    type: "string"
    immutable: false
    required: true
    options:
    - label: "standalone"
      value: "standalone"
    - label: "distributed"
      value: "distributed"

deploymentUpdate:
  __metadata:
    label: "Deployment update strategy"
    description: "Configure this section to precisely control the behavior of Deployment update strategy."
  type:
    __metadata:
      name: "deploymentUpdate.type"
      label: "Deployment update strategy type"
      description: "Deployment strategy type, Recreate or RollingUpdate."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "Recreate"
        value: "Recreate"
      - label: "RollingUpdate"
        value: "RollingUpdate"
  maxUnavailable:
    __metadata:
      name: "deploymentUpdate.maxUnavailable"
      label: "Rolling update maxUnavailable"
      description: "Maximum number of Pods that can be unavailable during the update process."
      type: "string"
      immutable: false
      required: false
  maxSurge:
    __metadata:
      name: "deploymentUpdate.maxSurge"
      label: "Deployment update maxSurge"
      description: "Maximum number of Pods that can be created over the desired number of Pods during the update process."
      type: "string"
      immutable: false
      required: false

statefulSetUpdate:
  __metadata:
    label: "StatefulSetUpdate update strategy"
    description: "Configure this section to precisely control the behavior of StatefulSet update."
  updateStrategy:
    __metadata:
      name: "updateStrategy"
      label: "StatefulSet update strategy"
      description: "Deployment strategy type. OnDelete or RollingUpdate."
      type: "string"
      immutable: false
      required: true

priorityClassName:
  __metadata:
    name: "priorityClassName"
    label: "Pod priority class name"
    description: "Pod priority settings. ICP system-cluster-critical priority class is available only for kube-system namespace."
    type: "string"
    immutable: false
    required: false

minioAccessSecret:
  __metadata:
    name: "minioAccessSecret"
    label: "Access secret"
    description: "Create a secret that contains base64-encoded accesskey (5 - 20 characters) and secretkey (8 - 40 characters). The keys are used to access Minio Object Server. You need to create the secret in the same namespace where you are deploying the chart."
    type: "string"
    immutable: false
    required: true

configPath:
  __metadata:
    name: "ConfigPath"
    label: "Default config file location"
    description: "Location of the default configuration file"
    type: "string"
    immutable: false
    required: true

configPathmc:
  __metadata:
    name: "ConfigPathmc"
    label: "Default config file location for Minio Client"
    description: "Default config file location for minio client - mc"
    type: "string"
    immutable: false
    required: true

mountPath:
  __metadata:
    name: "MountPath"
    label: "Mount path for the persistent drive"
    description: "Default mount path for the persistent drive."
    type: "string"
    immutable: false
    required: true

replicas:
  __metadata:
    name: "replicas"
    label: "Number of replicas"
    description: "Number of nodes (applicable only for Minio distributed mode). Should be 4 <= x <= 32."
    type: "number"
    immutable: false
    required: true

persistence:
  __metadata:
    label: "Persistence"
    description: "Use persistent volume to store data"
  enabled:
    __metadata:
      name: "persistence.enabled"
      label: "Enable persistence"
      description: "Enable persistence to use  persistent volume to store data."
      type: "boolean"
      immutable: false
      required: true
  existingClaim:
    __metadata:
      name: "persistence.existingClaim"
      label: "Existing PVC"
      description: "Use an existing PVC to persist data"
      type: "string"
      immutable: false
      required: false
  useDynamicProvisioning:
    __metadata:
      name: "persistence.useDynamicProvisioning"
      label: "Use dynamic provisioning"
      description: "If enabled, the PVC will use a storageClassName to bind the volume"
      type: "boolean"
      immutable: false
      required: true
  storageClass:
    __metadata:
      name: "persistence.storageClass"
      label: "Storage class"
      description: "Storage Class to bind PVC. You must specify a valid storage class if you have enabled useDynamicProvisioning."
      type: "string"
      immutable: false
      required: false
  accessMode:
    __metadata:
      name: "accessMode"
      label: "Access mode"
      description: "Access Mode ReadWriteOnce or ReadOnly."
      type: "string"
      immutable: false
      required: true
      options:
        - label: "ReadWriteOnce"
          value: "ReadWriteOnce"
        - label: "ReadOnly"
          value: "ReadOnly"
  size:
    __metadata:
      name: "size"
      label: "Persistent volume size"
      description: "Size of persistent volume claim (PVC)"
      type: "string"
      immutable: false
      required: true
  subPath:
    __metadata:
      name: "subPath"
      label: "Sub path"
      description: "Mount a sub directory of the persistent volume, if a sub directory is set"
      type: "string"
      immutable: false
      required: false

service:
  __metadata:
    label: "Minio service"
    description: "Minio service configuration"
  type:
    __metadata:
      name: "service.type"
      label: "Service type"
      description: "Kubernetes service type,  i.e. NodePort, ClusterIP or LoadBalancer"
      type: "string"
      immutable: false
      required: true
      options:
        - label: "NodePort"
          value: "NodePort"
        - label: "ClusterIP"
          value: "ClusterIP"
        - label: "LoadBalancer"
          value: "LoadBalancer"
  clusterIP:
    __metadata:
      name: "service.clusterIP"
      label: "Cluster IP"
      description: "Kubernetes service cluster IP, specify if service type is ClusterIP and you wish to choose your own Cluster IP."
      type: "string"
      immutable: false
      required: false
  loadBalancerIP:
    __metadata:
      name: "service.loadBalancerIP"
      label: "LoadBalancer IP"
      description: "Kubernetes service LoadBalancer IP, specify if service type is LoadBalancer and you wish to choose your own Load Balancer IP."
      type: "string"
      immutable: false
      required: false
  port:
    __metadata:
      name: "service.port"
      label: "Service port"
      description: "Kubernetes port on which the service is exposed"
      type: "number"
      immutable: false
      required: true
  nodePort:
    __metadata:
      name: "service.nodePort"
      label: "Node port"
      description: "Exposes the service on Node’s IP at a static port"
      type: "number"
      immutable: false
      required: true
  externalIPs:
    __metadata:
      name: "service.externalIPs"
      label: "External IP addresses"
      description: "List of service external IP addresses."
      type: "string"
      immutable: false
      required: false
  prometheusEnable:
    __metadata:
      name: "service.prometheusEnable"
      label: "Enable Prometheus"
      description: "Enable Prometheus scrape"
      type: "boolean"
      immutable: false
      required: false
  prometheusPath:
    __metadata:
      name: "service.prometheusPath"
      label: "Metrics Path"
      description: "Prometheus metrics path."
      type: "string"
      immutable: false
      required: false
  prometheusPort:
    __metadata:
      name: "service.prometheusPort"
      label: "Prometheus Port"
      description: "Port for metrics scrapping"
      type: "string"
      immutable: false
      required: false

ingress:
  __metadata:
    label: "Ingress Configuration"
    description: "Speify Ingress configuration"
  enabled:
    __metadata:
      name: "ingress.enabled"
      label: "Enable ingress"
      description: "Enables ingress"
      type: "boolean"
      immutable: false
      required: true
  annotations:
    __metadata:
      name: "ingress.annotations"
      label: "Annotations"
      description: "Ingress annotations, e.g. {\"kubernetes.io/ingress.class\": \"nginx\", \"kubernetes.io/tls-acme\": \"true\"}"
      type: "string"
      immutable: false
      required: false
  path:
    __metadata:
      name: "ingress.path"
      label: "Ingress path"
      description: "Ingress path."
      type: "string"
      immutable: false
      required: false
  hosts:
    __metadata:
      name: "ingress.hosts"
      label: "Ingress hosts"
      description: "Host names accepted by ingress"
      type: "string"
      immutable: false
      required: false
  tls:
    __metadata:
      name: "ingress.tls"
      label: "Ingress TLS configurations"
      description: "TLS settings, e.g. [{\"secretName\": \"chart-example-tls\", \"hosts\": [\"chart-example.local\", \"chart-example.local\"]}]"
      type: "string"
      immutable: false
      required: false


tls:
  __metadata:
    label: "TLS"
    description: "Minio server TLS configuaration"
  enabled:
    __metadata:
      name: "tls.enabled"
      label: "Enable TLS for Minio Server"
      description: "Enable Minio server with TLS certificates."
      type: "boolean"
      immutable: false
      required: true
  type:
    __metadata:
      name: "tls.type"
      label: "TLS certificate provision option"
      description: "Specify whether a chart must autogenerate a self-signed TLS certificate or use the one that you provide."
      type: "string"
      immutable: false
      required: false
      options:
      - label: "provided"
        value: "provided"
      - label: "selfsigned"
        value: "selfsigned"
      - label: "cert-manager-generated"
        value: "cert-manager-generated"
  minioTlsSecret:
    __metadata:
      name: "tls.minioTlsSecret"
      label: "Minio TLS secret"
      description: "Secret that you create and contains a Private key (key private.key), TLS certificate (key public.crt), and a CA certificate (key ca.crt) to configure the Minio server with TLS certificates. You must create and specify the secret in the same namespace where you are deploying the chart."
      type: "string"
      immutable: false
      required: false
  issuerRef:
    name:
      __metadata:
        name: "tls.issuerRef.name"
        label: "cert-manager Issuer Name"
        description: "Name of ClusterIssuer or Issuer from which signed x509 certificates is obtained."
        type: "string"
        immutable: false
        required: false
    kind:
      __metadata:
        name: "tls.issuerRef.kind"
        label: "cert-manager Issuer Kind"
        description: "Kind of certificate authority from which signed x509 certificates is obtained. Valid values are
                      ClusterIssuer and Issuer."
        type: "string"
        immutable: false
        required: false
        options:
        - label: "ClusterIssuer"
          value: "ClusterIssuer"
        - label: "Issuer"
          value: "Issuer"

  clusterDomain:
    __metadata:
      name: "tls.clusterDomain"
      label: "Cluster domain name"
      description: "Cluster domain name that is used to generate a self-signed certificate. Specify your cluster domain name here. This parameter is applicable when tls.type is set as selfsigned."
      type: "string"
      immutable: false
      required: false

nodeSelector:
  __metadata:
    name: "nodeSelector"
    label: "Node selector"
    description: "Node labels for pod assignment, e.g. {\"key\":\"value\"}"
    type: "string"
    immutable: false
    required: false

tolerations:
  __metadata:
    name: "tolerations"
    label: "Tolerations"
    description: "Toleration labels for pod assignment, e.g. [{\"key\": \"key\", \"operator\":\"Equal\", \"value\": \"value\", \"effect\":\"NoSchedule\"}]"
    type: "string"
    immutable: false
    required: false

livenessProbe:
  __metadata:
    label: "Liveness probe configuration"
    description: "Configure this section to precisely control the behavior of liveness checks."
  initialDelaySeconds:
    __metadata:
      name: "initialDelaySeconds"
      label: "Initial delay"
      description: "Number of seconds after the container has started before liveness probes are initiated."
      type: "number"
      immutable: false
      required: false
  periodSeconds:
    __metadata:
      name: "periodSeconds"
      label: "Liveness period"
      description: "Specifies period in seconds the kubelet should perform a liveness probe."
      type: "number"
      immutable: false
      required: false
  timeoutSeconds:
    __metadata:
      name: "timeoutSeconds"
      label: "Timeout Seconds"
      description: "Number of seconds after which the probe times out."
      type: "number"
      immutable: false
      required: false
  successThreshold:
    __metadata:
      name: "successThreshold"
      label: "Success threshold"
      description: "Minimum consecutive successes for the probe to be considered successful after having failed."
      type: "number"
      immutable: false
      required: false
  failureThreshold:
    __metadata:
      name: "failureThreshold"
      label: "Failure threshold"
      description:  "Minimum consecutive failures for the probe to be considered failed after having succeeded."
      type: "number"
      immutable: false
      required: false

readinessProbe:
  __metadata:
    label: "Readiness probe configuration"
    description: "Configure this section to precisely control the behavior of readiness checks."
  initialDelaySeconds:
    __metadata:
      name: "initialDelaySeconds"
      label: "Initial delay"
      description: "Number of seconds after the container has started before readiness probes are initiated"
      type: "number"
      immutable: false
      required: false
  periodSeconds:
    __metadata:
      name: "periodSeconds"
      label: "Readiness period"
      description: "Specifies period in seconds the kubelet should perform a readiness probe."
      type: "number"
      immutable: false
      required: false
  timeoutSeconds:
    __metadata:
      name: "timeoutSeconds"
      label: "Readiness timeout"
      description: "Number of seconds after which the probe times out."
      type: "number"
      immutable: false
      required: false
  successThreshold:
    __metadata:
      name: "successThreshold"
      label: "Readiness success threshold"
      description: "Minimum consecutive successes for the probe to be considered successful after having failed"
      type: "number"
      immutable: false
      required: false
  failureThreshold:
    __metadata:
      name: "failureThreshold"
      label: "Readiness failure threshold"
      description: "Minimum consecutive failures for the probe to be considered failed after having succeeded."
      type: "number"
      immutable: false
      required: false

## IBM charts has different mechanism of affinity.
#affinity:
#  __metadata:
#    name: "affinity"
#    label: "affinity"
#    description: "Affinity settings for pod assignment, specify in json"
#    type: "string"
#    immutable: false
#    required: false

resources:
  __metadata:
    label: "Pod Resources"
    description: "Specify Pod resources"
  requests:
    memory:
      __metadata:
        name: "memoryRequest"
        label: "Memory"
        description: "Memory resource requests."
        type: "string"
        immutable: false
        required: false
    cpu:
      __metadata:
        name: "cpuRequest"
        label: "CPU"
        description: "CPU resource requests."
        type: "string"
        immutable: false
        required: false

defaultBucket:
  __metadata:
    label: "Default bucket configuration"
    description: "Minio default bucket configuration"
  enabled:
    __metadata:
      name: "defaultBucket.enabled"
      label: "Enable default bucket"
      description: "If enabled, a bucket is created after Minio installation is complete."
      type: "boolean"
      immutable: false
      required: false
  name:
    __metadata:
      name: "defaultBucket.name"
      label: "Default bucket name"
      description: "Specify name of default bucket."
      type: "string"
      immutable: false
      required: false
  policy:
    __metadata:
      name: "defaultBucket.policy"
      label: "Default bucket policy"
      description: "Bucket policy. Allowed values are none, download, upload, public."
      type: "string"
      immutable: false
      required: false
  purge:
    __metadata:
      name: "defaultBucket.purge"
      label: "Purge bucket"
      description: "Purge the bucket, if already exists." 
      type: "boolean"
      immutable: false
      required: false

buckets:
  __metadata:
    name: "buckets"
    label: "Buckets"
    description: "List of buckets that will be pre-created with chart installation."
    type: "string"
    immutable: false
    required: false

s3gateway:
  __metadata:
    label: "S3 gateway"
    description: "S3 gateway configuration"
  enabled:
    __metadata:
      name: "s3gateway.enabled"
      label: "Enable S3 gateway"
      description: "Use minio as a s3 gateway."
      type: "boolean"
      immutable: false
      required: false
  replicas:
    __metadata:
      name: "s3gateway.replicas"
      label: "Number of replicas"
      description: "Number of s3 gateway instances to run in parallel."
      type: "number"
      immutable: false
      required: false
  serviceEndpoint:
    __metadata:
      name: "s3gateway.serviceEndpoint"
      label: "Service endpoint"
      description: "Endpoint to the S3 compatible service"
      type: "string"
      immutable: false
      required: false

azuregateway:
  __metadata:
    label: "Azure Gateway"
    description: "Azure gateway configuration" 
  enabled:
    __metadata:
      name: "azuregateway.enabled"
      label: "Enable Azure gateway"
      description: "Enable Minio as an Azure gateway."
      type: "boolean"
      immutable: false
      required: false
  replicas:
    __metadata:
      name: "azuregateway.replicas"
      label: "Number of replicas"
      description: "Number of Azure gateway instances to run in parallel."
      type: "number"
      immutable: false
      required: false

gcsgateway:
  __metadata:
    label: "Configure Minio as a (GCS) gateway"
    description: "Google Cloud Storage gateway (GCS) configuration"
  enabled:
    __metadata:
      name: "Enable GCS gateway"
      label: "Enable Minio as GCS gateway"
      description: "Use Minio server as a GCS gateway."
      type: "boolean"
      immutable: false
      required: false
  gcsKeyJson:
    __metadata:
      name: "gcsgateway.gcsKeyJson"
      label: "Service account key"
      description: "Credential JSON file of service account key."
      type: "string"
      immutable: false
      required: false
  projectId:
    __metadata:
      name: "gcsgateway.projectId"
      label: "Project ID"
      description: "Google Cloud Project ID."
      type: "string"
      immutable: false
      required: false
  replicas:
    __metadata:
      name: "gcsgateway.replicas"
      label: "Number of replicas"
      description: "Number of GCS gateway instances to run in parallel."
      type: "number"
      immutable: false
      required: false

ossgateway:
  __metadata:
    label: "Object Storage Service gateway configuration"
    description: "Configure this to use Minio as an [Alibaba Cloud Object Storage Service gateway]."
  enabled:
    __metadata:
      name: "ossgateway.enabled"
      label: "Enable Minio as Object Storage Service gateway"
      description: "Enable this to Use minio as an [Alibaba Cloud Object Storage Service gateway]"
      type: "boolean"
      immutable: false
      required: false
  replicas:
    __metadata:
      name: "ossgateway.replicas"
      label: "Number of replicas"
      description: "Number of oss gateway instances to run in parallel."
      type: "number"
      immutable: false
      required: false
  endpointURL:
    __metadata:
      name: "ossgateway.endpointURL"
      label: "Service endpointURL "
      description: "OSS server endpointURL"
      type: "string"
      immutable: false
      required: false

nasgateway:
  __metadata:
    label: "NAS Gateway"
    description: "Enable Minio deployment as a NAS Gateway"
  enabled:
    __metadata:
      name: "nasgateway.enabled"
      label: "Enable Minio as NAS gateway"
      description: "Enable Minio deployment as a NAS Gateway."
      type: "boolean"
      immutable: false
      required: false
  replicas:
    __metadata:
      name: "nasgateway.replicas"
      label: "Replicas"
      description: "Number of NAS gateway instances to be run in parallel on a PV."
      type: "number"
      immutable: false
      required: false
  pv:
    __metadata:
      name: "nasgateway.pv"
      label: "Persistent volume"
      description: "Generally for NAS Gateway, you'd like to bind the PVC to a specific PV. To ensure that happens, PV to bind to should have a label like \"pv: <value>\", use value here."
      type: "string"
      immutable: false
      required: false

environment:
  __metadata:
    name: "environment"
    label: "Minio server environment variables"
    description: "Environment variables relevant to Minio server. These fields will be passed on to Minio container(s)."
    type: "string"
    immutable: false
    required: false

#minioConfig:
#  __metadata:
#    label: "MinioConfig"
#    description: "Minio configuration"
#  region:
#    __metadata:
#      name: "minioConfig.region"
#      label: "Minio region"
#      description: "Region is the physical location of the server. By default it is set to ``. If you are unsure, let it unset."
#      type: "string"
#      immutable: false
#      required: false
#  browser:
#    __metadata:
#      name: "minioConfig.browser"
#      label: "Enable browser access"
#      description: "Enable or disable access to web UI. Allowed values are on or off."
#      type: "string"
#      immutable: false
#      required: false
#  domain:
#    __metadata:
#      name: "minioConfig.domain"
#      label: "Enable virtual-host-style requests."
#      description: "Specify domain to enable virtual-host-style requests. For example, mydomain.com"
#      type: "string"
#      immutable: false
#      required: false
#  worm:
#    __metadata:
#      name: "minioConfig.worm"
#      label: "Enable Write-Once-Read-Many"
#      description: "Enable this parameter to turn on Write-Once-Read-Many. Specify `off` to disable and `on` to enable."
#      type: "string"
#      immutable: false
#      required: false
#  storageClass:
#    __metadata:
#      label: "Minio storage class configuration"
#    standardStorageClass:
#      __metadata:
#        name: "minioConfig.storageClass.standardStorageClass"
#        label: "Value for standard storage class"
#        description: "Value for standard storage class. Value for standard storage class. Format is `EC:Parity`. For example, to set four disk parity for standard storage class objects, set this field to EC:4"
#        type: "string"
#        immutable: false
#        required: false
#    reducedRedundancyStorageClass:
#      __metadata:
#        name: "minioConfig.storageClass.reducedRedundancyStorageClass"
#        label: "Value for reduced redundancy storage class"
#        description: "Value for reduced redundancy storage class. Format is `EC:Parity`. For example, to set three disk parity for reduced redundancy storage class objects, set this field to EC:3."
#        type: "string"
#        immutable: false
#        required: false
#  cache:
#    __metadata:
#      label: "Minio cache configuration"
#    drives:
#      __metadata:
#        name: "minioConfig.cache.drives"
#        label: "List of mounted file system drives"
#        description: "List of mounted file system drives with atime support enabled. For example, [/mnt/drive1,/mnt/drive2]."
#        type: "string"
#        immutable: false
#        required: false
#    expiry:
#      __metadata:
#        name: "minioConfig.cache.expiry"
#        label: "Cache expiry"
#        description: "Days to cache expiry."
#        type: "number"
#        immutable: false
#        required: false
#    maxuse:
#      __metadata:
#        name: "minioConfig.cache.maxuse"
#        label: "Cache max use"
#        description: "Percentage of disk available to cache."
#        type: "number"
#        immutable: false
#        required: false
#    exclude:
#      __metadata:
#        name: "minioConfig.cache.exclude"
#        label: "Cache exclude"
#        description: "List of wildcard patterns for prefixes to exclude from cache."
#        type: "string"
#        immutable: false
#        required: false
#
#  aqmp:
#    __metadata:
#      label: "Minio AMQP configuration"
#    enable:
#      __metadata:
#        name: "Enable AMQP"
#        label: "Enable AMPQ"
#        description: "Enable AMPQ endpoint configuration."
#        type: "boolean"
#        immutable: false
#        required: false
#    url:
#      __metadata:
#        name: "minioConfig.aqmp.url"
#        label: "AMPQ server endpoint URL"
#        description: "AMQP server endpoint, e.g. amqp://myuser:mypassword@localhost:5672"
#        type: "string"
#        immutable: false
#        required: false
#    exchange:
#      __metadata:
#        name: "minioConfig.aqmp.exchange"
#        label: "AMPQ exchange"
#        description: "Name of the AMPQ exchange."
#        type: "string"
#        immutable: false
#        required: false
#    routingKey:
#      __metadata:
#        name: "minioConfig.aqmp.routingKey"
#        label: "AMQP routing key"
#        description: "Routing key for publishing."
#        type: "string"
#        immutable: false
#        required: false
#    exchangeType:
#      __metadata:
#        name: "minioConfig.aqmp.exchangeType"
#        label: "AMQP exchange type"
#        description: "AMQP Kind of exchange."
#        type: "string"
#        immutable: false
#        required: false
#    deliveryMode:
#      __metadata:
#        name: "minioConfig.aqmp.deliveryMode"
#        label: "AMQP delivery mode"
#        description: "Delivery mode for publishing."
#        type: "number"
#        immutable: false
#        required: false
#        options:
#          - label: "Transient"
#            value: 1
#          - label: "Persistent"
#            value: 2
#    mandatory:
#      __metadata:
#        name: "minioConfig.aqmp.mandatory"
#        label: "AMQP mandatory"
#        description: "Publishing related bool."
#        type: "boolean"
#        immutable: false
#        required: false
#    immediate:
#      __metadata:
#        name: "minioConfig.aqmp.immediate"
#        label: "AMQP immediate"
#        description: "Publishing related bool."
#        type: "boolean"
#        immutable: false
#        required: false
#    durable:
#      __metadata:
#        name: "minioConfig.aqmp.durable"
#        label: "AMQP durable"
#        description: "Exchange declaration related bool."
#        type: "boolean"
#        immutable: false
#        required: false
#    internal:
#      __metadata:
#        name: "minioConfig.aqmp.internal"
#        label: "AMQP internal"
#        description: "Exchange declaration related bool."
#        type: "boolean"
#        immutable: false
#        required: false
#    noWait:
#      __metadata:
#        name: "minioConfig.aqmp.noWait"
#        label: "AMQP NoWait"
#        description: "Exchange declaration related bool."
#        type: "boolean"
#        immutable: false
#        required: false
#    autoDeleted:
#      __metadata:
#        name: "minioConfig.aqmp.autoDeleted"
#        label: "AMQP AutoDeleted"
#        description: "Exchange declaration related bool."
#        type: "boolean"
#        immutable: false
#        required: false
#  nats:
#    __metadata:
#      label: "Minio NATS configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.nats.enable"
#        label: "Enable NATS endpoint"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    address:
#      __metadata:
#        name: "minioConfig.nats.address"
#        label: "NATS address"
#        description: "address, e.g. 0.0.0.0:4222."
#        type: "string"
#        immutable: false
#        required: false
#    subject:
#      __metadata:
#        name: "minioConfig.nats.subject"
#        label: "NATS subject"
#        description: "Subject string, e.g. bucketevents."
#        type: "string"
#        immutable: false
#        required: false
#    username:
#      __metadata:
#        name: "minioConfig.nats.username"
#        label: "NATS usrname"
#        description: "NATS user name for authentication."
#        type: "string"
#        immutable: false
#        required: false
#    password:
#      __metadata:
#        name: "minioConfig.nats.password"
#        label: "NATS password"
#        description: "NATS Password corresponding to username for authentication."
#        type: "string"
#        immutable: false
#        required: false
#    token:
#      __metadata:
#        name: "minioConfig.nats.token"
#        label: "NATS token"
#        description: "NATS token for authentication."
#        type: "string"
#        immutable: false
#        required: false
#    secure:
#      __metadata:
#        name: "minioConfig.nats.secure"
#        label: "Enable secure NATS"
#        description: ""
#        type: "boolean"
#        immutable: false
#        required: false
#    pingInterval:
#      __metadata:
#        name: "minioConfig.nats.pingInterval"
#        label: "NATS ping interval"
#        description: "NATS ping interval."
#        type: "number"
#        immutable: false
#        required: false
#    enableStreaming:
#      __metadata:
#        name: "minioConfig.nats.enableStreaming"
#        label: "NATS enable streaming"
#        description: "NATS enable streaming."
#        type: "boolean"
#        immutable: false
#        required: false
#    clusterID:
#      __metadata:
#        name: "minioConfig.nats.clusterID"
#        label: "NATS streaming cluster id"
#        description: "NATS streaming cluster id."
#        type: "string"
#        immutable: false
#        required: false
#    clientID:
#      __metadata:
#        name: "minioConfig.nats.clientID"
#        label: "NATS streaming client id"
#        description: "NATS streaming client id."
#        type: "string"
#        immutable: false
#        required: false
#    async:
#      __metadata:
#        name: "minioConfig.nats.async"
#        label: "Enable NATS streaming async"
#        description: "Enable NATS streaming async."
#        type: "boolean"
#        immutable: false
#        required: false
#    maxPubAcksInflight:
#      __metadata:
#        name: "minioConfig.nats.maxPubAcksInflight"
#        label: "NATS streaming MaxPubAcksInflight"
#        description: "Maximum number of outstanding acknowledgements. Used for Rate limiting."
#        type: "number"
#        immutable: false
#        required: false
#
#  elasticsearch:
#    __metadata:
#      label: "Minio Elasticsearch configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.elasticsearch"
#        label: "Enable Elasticsearch"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    format:
#      __metadata:
#        name: "minioConfig.elasticsearch.format"
#        label: "Elasticsearch format"
#        description: "Allowed values are namespace or access"
#        type: "string"
#        immutable: false
#        required: false
#        options:
#          - label: "namespace"
#            value: "namespace"
#          - label: "access"
#            value: "access"
#    url:
#      __metadata:
#        name: "minioConfig.elasticsearch.url"
#        label: "Elasticsearch url"
#        description: "The Elasticsearch server's address, with optional authentication info. For example: http://localhost:9200 or with authentication info http://elastic:MagicWord@127.0.0.1:9200."
#        type: "string"
#        immutable: false
#        required: false
#    index:
#      __metadata:
#        name: "minioConfig.elasticsearch.index"
#        label: "Elasticsearch index"
#        description: "The name of an Elasticsearch index in which Minio will store documents."
#        type: "string"
#        immutable: false
#        required: false
#
#  redis:
#    __metadata:
#      label: "Minio Redis configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.redis.enable"
#        label: "Enable Redis"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    format:
#      __metadata:
#        name: "minioConfig.redis.format"
#        label: "Redis Format"
#        description: " Allowed values are namespace or access."
#        type: "string"
#        immutable: false
#        required: false
#        options:
#          - label: "namespace"
#            value: "namespace"
#          - label: "access"
#            value: "access"
#    address:
#      __metadata:
#        name: "minioConfig.redis.address"
#        label: " Redis address"
#        description: "The Redis server's address. For example: localhost:6379."
#        type: "string"
#        immutable: false
#        required: false
#    password:
#      __metadata:
#        name: "minioConfig.redis.password"
#        label: "Redis password"
#        description: "The Redis server's password."
#        type: "string"
#        immutable: false
#        required: false
#    key:
#      __metadata:
#        name: "minioConfig.redis.key"
#        label: "Redis key"
#        description: "The name of the Redis key under which events are stored. A hash is used in case of namespace format and a list in case of access format."
#        type: "string"
#        immutable: false
#        required: false
#
#  postgresql:
#    __metadata:
#      label: "Minio PostgreSQL configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.postgresql.enable"
#        label: "Enable PostgreSQL"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    format:
#      __metadata:
#        name: "minioConfig.postgresql.format"
#        label: "PostgreSQL format"
#        description: "Allowed values are namespace or access."
#        type: "string"
#        immutable: false
#        required: false
#        options:
#          - label: "namespace"
#            value: "namespace"
#          - label: "access"
#            value: "access"
#    connectionString:
#      __metadata:
#        name: "minioConfig.postgresql.connectionString"
#        label: "PostgreSQL connection string"
#        description: "Connection string parameters for the PostgreSQL server. Can be used to set sslmode for example."
#        type: "string"
#        immutable: false
#        required: false
#    table:
#      __metadata:
#        name: "minioConfig.postgresql.table"
#        label: "PostgreSQL table"
#        description: "Table name where events are stored or updated. If the table does not exist, the Minio server creates a table at start-up."
#        type: "string"
#        immutable: false
#        required: false
#    host:
#      __metadata:
#        name: "minioConfig.postgresql.host"
#        label: "PostgreSQL Host Name"
#        description: "Host name of the PostgreSQL server. Defaults to localhost."
#        type: "string"
#        immutable: false
#        required: false
#    port:
#      __metadata:
#        name: "minioConfig.postgresql.port"
#        label: "PostgreSQL port"
#        description: "Port on which to connect to PostgreSQL server. Defaults to 5432."
#        type: "string"
#        immutable: false
#        required: false
#    user:
#      __metadata:
#        name: "minioConfig.postgresql.user"
#        label: "PostgreSQL username"
#        description: "Database user name. Defaults to user running the server process."
#        type: "string"
#        immutable: false
#        required: false
#    password:
#      __metadata:
#        name: "minioConfig.postgresql.password"
#        label: "PostgreSQL password"
#        description: "PostgreSQL Database password."
#        type: "string"
#        immutable: false
#        required: false
#    database:
#      __metadata:
#        name: "minioConfig.postgresql.database"
#        label: "PostgreSQL Database Name"
#        description: "PostgreSQL Database name."
#        type: "string"
#        immutable: false
#        required: false
#  kafka:
#    __metadata:
#      label: "Minio Apache Kafka configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.kafka.enable"
#        label: "Enable Apache Kafka"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    brokers:
#      __metadata:
#        name: "minioConfig.kafka.brokers"
#        label: "Apache Kafka brokers"
#        description: "List of brokers, e.g. [\"localhost:9092\"]"
#        type: "string"
#        immutable: false
#        required: false
#    topic:
#      __metadata:
#        name: "minioConfig.kafka.topic"
#        label: "Kafka topic"
#        description: "The topic that is used by Kafka"
#        type: "string"
#        immutable: false
#        required: false
#
#  webhook:
#    __metadata:
#      label: "Minio Webhooks configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.webhook.enable"
#        label: "Enable Webhook"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    endpoint:
#      __metadata:
#        name: "minioConfig.webhook.endpoint"
#        label: "Webhool endpoint"
#        description: "Endpoint is the server listening for webhook notifications."
#        type: "string"
#        immutable: false
#        required: false
#
#  mysql:
#    __metadata:
#      label: "Minio MySQL configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.mysql.enable"
#        label: "Enable MySQL"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    format:
#      __metadata:
#        name: "minioConfig.mysql.format"
#        label: "MySQL format"
#        description: "Allowed values are namespace or access."
#        type: "string"
#        immutable: false
#        required: false
#        options:
#          - label: "namespace"
#            value: "namespace"
#          - label: "access"
#            value: "access"
#    dsnString:
#      __metadata:
#        name: "minioConfig.mysql.dsnString"
#        label: "MySQL DNS String"
#        description: "Data-Source-Name connection string for the MySQL server. If not specified, the connection information specified by the host, port, user, password and database parameters are used."
#        type: "string"
#        immutable: false
#        required: false
#    table:
#      __metadata:
#        name: "minioConfig.mysql.table"
#        label: "MySQL table"
#        description: "Table name where events are stored or updated. If the table does not exist, the Minio server creates a table at start-up."
#        type: "string"
#        immutable: false
#        required: false
#
#    host:
#      __metadata:
#        name: "minioConfig.mysql.host"
#        label: "MySQL Host"
#        description: "Host name of the MySQL server (used only if dsnString is empty)."
#        type: "string"
#        immutable: false
#        required: false
#    port:
#      __metadata:
#        name: "minioConfig.mysql.port"
#        label: "MySQL port"
#        description: "Port on which to connect to the MySQL server (used only if dsnString is empty)."
#        type: "string"
#        immutable: false
#        required: false
#    user:
#      __metadata:
#        name: "minioConfig.mysql.user"
#        label: "MySQL User"
#        description: "Database user-name (used only if dsnString is empty)."
#        type: "string"
#        immutable: false
#        required: false
#    password:
#      __metadata:
#        name: "minioConfig.mysql.password"
#        label: "MySQL password"
#        description: "Database password (used only if dsnString is empty)."
#        type: "string"
#        immutable: false
#        required: false
#    database:
#      __metadata:
#        name: "minioConfig.mysql.database"
#        label: "MySQL database"
#        description: "Database name (used only if dsnString is empty)."
#        type: "string"
#        immutable: false
#        required: false
#  mqtt:
#    __metadata:
#      label: "Minio MQTT configuration"
#    enable:
#      __metadata:
#        name: "minioConfig.mqtt.enable"
#        label: "Enable MQTT"
#        description: "Is this server endpoint configuration active/enabled?"
#        type: "boolean"
#        immutable: false
#        required: false
#    broker:
#      __metadata:
#        name: "minioConfig.mqtt.broker"
#        label: "MQTT broker"
#        description: "MQTT server endpoint, e.g. tcp://localhost:1883."
#        type: "string"
#        immutable: false
#        required: false
#    topic:
#      __metadata:
#        name: "minioConfig.mqtt.topic"
#        label: "MQTT topic"
#        description: "Name of the MQTT topic to publish on, e.g. minio."
#        type: "string"
#        immutable: false
#        required: false
#    qos:
#      __metadata:
#        name: "minioConfig.mqtt.qos"
#        label: "MQTT QoS"
#        description: "Set the quality of service(QoS) Level."
#        type: "number"
#        immutable: false
#        required: false
#    clientId:
#      __metadata:
#        name: "minioConfig.mqtt.clientId"
#        label: "MQTT client id"
#        description: "Unique id for the MQTT broker to identify Minio."
#        type: "string"
#        immutable: false
#        required: false
#    username:
#      __metadata:
#        name: "minioConfig.mqtt.username"
#        label: "MQTT username"
#        description: "Username to connect to the MQTT server (if required)."
#        type: "string"
#        immutable: false
#        required: false
#    password:
#      __metadata:
#        name: "minioConfig.mqtt.password"
#        label: "MQTT password"
#        description: "Password to connect to the MQTT server (if required)."
#        type: "string"
#        immutable: false
#        required: false
#    reconnectInterval:
#      __metadata:
#        name: "minioConfig.mqtt.reconnectInterval"
#        label: "MQTT reconnect interval"
#        description: "MQTT reconnect interval seconds."
#        type: "number"
#        immutable: false
#        required: false
#    keepAliveInterval:
#      __metadata:
#        name: "minioConfig.mqtt.keepAliveInterval"
#        label: "MQTT keepalive interval"
#        description: "Keep keepalive interval seconds."
#        type: "string"
#        immutable: false
#        required: false
#
networkPolicy:
  __metadata:
    label: "Network Policy"
    description: "Network policy configuration"
  enabled:
    __metadata:
      name: "networkPolicy.enabled"
      label: "Enable network policy"
      description: "With network policy enabled, traffic will be limited to just port 9000."
      type: "boolean"
      immutable: false
      required: false
  allowExternal:
    __metadata:
      name: "allowExternal.enabled"
      label: "Enable allow external"
      description: "For more precise policy, enable networkPolicy.allowExternal. This will only allow pods with the generated client label to connect to Minio. This label will be displayed in the output of a successful install."
      type: "boolean"
      immutable: false
      required: false
