###############################################################################
## Arch Metadata
###############################################################################
arch:
  __metadata:
    label: "Architecture scheduling preferences"
  amd64:
    __metadata:
      name: "amd64"
      label: "amd64 scheduling preference"
      description: "Architecture preference for target minio server."
      type: "string"
      default: "2 - No preference"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"
image:
  __metadata:
    label: "minio image configuration"
  repository:
    __metadata:
      name: "Repository"
      label: "Docker Repository"
      description: "Docker registry to pull minio image from"
      type: "string"
      immutable: "false"
      required: true
  tag:
    __metadata:
      name: "Image Tag"
      label: "Image Tag"
      description: "Image Tag is used to choose minio release version"
      type: "string"
      immutable: "false"
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: "false"
      required: true
      options:
      - label: "IfNotPresent"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"

mcImage:
  __metadata:
    label: "mc (the minio client) image configuration"
  repository:
    __metadata:
      name: "Repository"
      label: "Docker Repository"
      description: "Docker registry to pull mc image from"
      type: "string"
      immutable: "false"
      required: true
  tag:
    __metadata:
      name: "Image Tag"
      label: "Image Tag"
      description: "Image Tag is used to choose mc release version"
      type: "string"
      immutable: "false"
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: "false"
      required: true
      options:
      - label: "IfNotPresent"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"

mode:
  __metadata:
    name: "mode"
    label: "minio server mode"
    description: "Sets minio server mode, i.e. standalone or distributed. Defaults to standalone"
    type: "string"
    immutable: "false"
    required: true
    options:
    - label: "standalone"
      value: "standalone"
    - label: "distributed"
      value: "distributed"
    - label: "shared"
      value: "shared"

minioAccessSercret:
  __metadata:
    name: "minioAccessSercret"
    label: "MinioAccessSecret Name"
    description: "This manually created secret contains accesskey and secretkey to access Minio Object Server. Users need to create this in same namespace as chart being deployed and specify name of secret here."
    type: "string"
    immutable: "false"
    required: true

minioAccessSecretTemplateName:
  __metadata:
    name: "minioAccessSecretTemplateName"
    label: "MinioAccessSecret template name"
    description: "Name of the helm template that generates the name of the secret minioAccessSecret. Used only if minioAccessSercret is empty."
    type: "string"
    immutable: true
    required: false

configPath:
  __metadata:
    name: "ConfigPath"
    label: "Default config file location"
    description: "Default config file location, default ~/.minio"
    type: "string"
    immutable: "false"
    required: false

mountPath:
  __metadata:
    name: "MountPath"
    label: "Default mount location for persistent drive"
    description: "Default mount location for persistent drive, default /export"
    type: "string"
    immutable: "false"
    required: true

replicas:
  __metadata:
    name: "replicas"
    label: "Replicas"
    description: "Number of nodes (applicable only for Minio distributed mode). Should be 4 <= x <= 32, default 4"
    type: "number"
    immutable: "false"
    required: true

persistence:
  __metadata:
    label: "Persistence"
  enabled:
    __metadata:
      name: "persistence"
      label: "persistence.enabled"
      description: "Enable persistence using Persistent Volume Claims."
      type: "boolean"
      immutable: "false"
      required: true
  useDynamicProvisioning:
    __metadata:
      name: "persistence.useDynamicProvisioning"
      label: "persistence.useDynamicProvisioning"
      description: "If true, the persistent volume claim will use the storageClassName to bind the volume."
      type: "boolean"
      immutable: "false"
      required: true
  storageClass:
    __metadata:
      name: "storageClass"
      label: "persistence.storageClass"
      description: "minio data Persistent Volume Storage Class, specify if you have checked useDynamicProvisioning."
      type: "string"
      immutable: "false"
      required: false
  accessMode:
    __metadata:
      name: "accessMode"
      label: "persistence.accessMode"
      description: "Access Mode ReadWriteOnce or ReadOnly"
      type: "string"
      immutable: "false"
      required: true
      options:
        - label: "ReadWriteOnce"
          value: "ReadWriteOnce"
        - label: "ReadOnly"
          value: "ReadOnly"
  size:
    __metadata:
      name: "size"
      label: "persistence.size"
      description: "Size of persistent volume claim"
      type: "string"
      immutable: "false"
      required: true
  subPath:
    __metadata:
      name: "subPath"
      label: "persistence.subPath"
      description: "If subPath is set mount a sub folder of a volume instead of the root of the volume. This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs)."
      type: "string"
      immutable: "false"
      required: false
  existingClaim:
    __metadata:
      name: "existingClaim"
      label: "persistence.existingClaim"
      description: "Existing PVC to be used by Minio for object store."
      type: "string"
      immutable: "false"
      required: false

service:
  __metadata:
    label: "service"
  type:
    __metadata:
      name: "type"
      label: "service.type"
      description: "Kubernetes service type."
      type: "string"
      immutable: "false"
      required: true
      options:
        - label: "ClusterIP"
          value: "ClusterIP"
        - label: "LoadBalancer"
          value: "LoadBalancer"
  clusterIP:
    __metadata:
      name: "clusterIP"
      label: "service.clusterIP"
      description: "Kubernetes service clusterIP, specify if service type is ClusterIP and you wish to choose your own Cluster IP"
      type: "string"
      immutable: "false"
      required: false
  loadBalancerIP:
    __metadata:
      name: "loadBalancerIP"
      label: "service.loadBalancerIP"
      description: "Kubernetes service loadBalancerIP, specify if service type is LoadBalancer and you wish to choose your own Load Balancer IP"
      type: "string"
      immutable: "false"
      required: false
  port:
    __metadata:
      name: "port"
      label: "service.port"
      description: "Kubernetes service loadBalancerIP, specify if you wish to choose your own loadBalancerIP"
      type: "number"
      immutable: "false"
      required: true
  annotations:
    __metadata:
      name: "annotations"
      label: "service.annotations"
      description: "Service annotations, e.g. {\"prometheus.io/scrape\": \"true\", \"prometheus.io/path\":   \"/minio/prometheus/metrics\", \"prometheus.io/port\":   \"9000\"}"
      type: "string"
      immutable: "false"
      required: false

ingress:
  __metadata:
    label: "ingress"
  enabled:
    __metadata:
      name: "ingress"
      label: "ingress.enabled"
      description: "Enables Ingress"
      type: "boolean"
      immutable: "false"
      required: true
  annotations:
    __metadata:
      name: "annotations"
      label: "ingress.annotations"
      description: "ingress annotations, e.g. {\"kubernetes.io/ingress.class\": \"nginx\", \"kubernetes.io/tls-acme\": \"true\"}"
      type: "string"
      immutable: "false"
      required: false
  path:
    __metadata:
      name: "path"
      label: "ingress.path"
      description: "Ingress path"
      type: "string"
      immutable: "false"
      required: false
  hosts:
    __metadata:
      name: "hosts"
      label: "ingress.hosts"
      description: "Ingress accepted hostnames, e.g. [\"chart-example.local\"]"
      type: "string"
      immutable: "false"
      required: false
  tls:
    __metadata:
      name: "tls"
      label: "ingress.tls"
      description: "TLS settings, e.g. [{\"secretName\": \"chart-example-tls\", \"hosts\": [\"chart-example.local\", \"chart-example.local\"]}]"
      type: "string"
      immutable: "false"
      required: false


nodeSelector:
  __metadata:
    name: "nodeSelector"
    label: "nodeSelector"
    description: "Node labels for pod assignment, e.g. {\"key\":\"value\"}"
    type: "string"
    immutable: "false"
    required: false

tolerations:
  __metadata:
    name: "tolerations"
    label: "tolerations"
    description: "Toleration labels for pod assignment, e.g. [{\"key\": \"key\", \"operator\":\"Equal\", \"value\": \"value\", \"effect\":\"NoSchedule\"}]"
    type: "string"
    immutable: "false"
    required: false

#affinity:
#  __metadata:
#    name: "affinity"
#    label: "affinity"
#    description: "Affinity settings for pod assignment, specify in json"
#    type: "string"
#    immutable: "false"
#    required: false


resources:
  __metadata:
    label: "resources"
  requests:
    __metadata:
      label: "resources.requests"
    memory:
      __metadata:
        name: "resources.requests.memory"
        label: "resources.requests.memory"
        description: "Memory resource requests"
        type: "string"
        immutable: "false"
        required: false
    cpu:
      __metadata:
        name: "resources.requests.cpu"
        label: "resources.requests.cpu"
        description: "CPU resource requests"
        type: "string"
        immutable: "false"
        required: false

defaultBucket:
  __metadata:
    label: "defaultBucket"
  enabled:
    __metadata:
      name: "defaultBucket.enabled"
      label: "defaultBucket.enabled"
      description: "If enabled, a bucket will be created after minio install"
      type: "boolean"
      immutable: "false"
      required: false
  name:
    __metadata:
      name: "defaultBucket.name"
      label: "defaultBucket.name"
      description: "Bucket name"
      type: "string"
      immutable: "false"
      required: false
  policy:
    __metadata:
      name: "defaultBucket.policy"
      label: "defaultBucket.policy"
      description: "Bucket policy"
      type: "string"
      immutable: "false"
      required: false
  purge:
    __metadata:
      name: "defaultBucket.purge"
      label: "defaultBucket.purge"
      description: "If enabled, purge the bucket if already exists"
      type: "boolean"
      immutable: "false"
      required: false

azuregateway:
  __metadata:
    label: "azuregateway"
  enabled:
    __metadata:
      name: "azuregateway.enabled"
      label: "azuregateway.enabled"
      description: "Use minio as an azure gateway"
      type: "boolean"
      immutable: "false"
      required: false


gcsgateway:
  __metadata:
    label: "gcsgateway"
  enabled:
    __metadata:
      name: "gcsgateway.enabled"
      label: "gcsgateway.enabled"
      description: "Use minio as a Google Cloud Storage gateway"
      type: "boolean"
      immutable: "false"
      required: false
  gcsKeyJson:
    __metadata:
      name: "gcsgateway.gcsKeyJson"
      label: "gcsgateway.gcsKeyJson"
      description: "credential json file of service account key"
      type: "string"
      immutable: "false"
      required: false
  projectId:
    __metadata:
      name: "gcsgateway.projectId"
      label: "gcsgateway.projectId"
      description: "Google cloud project id"
      type: "string"
      immutable: "false"
      required: false

networkPolicy:
  __metadata:
    label: "networkPolicy"
  enabled:
    __metadata:
      name: "networkPolicy.enabled"
      label: "networkPolicy.enabled"
      description: "With NetworkPolicy enabled, traffic will be limited to just port 9000."
      type: "boolean"
      immutable: "false"
      required: false
  allowExternal:
    __metadata:
      name: "allowExternal.enabled"
      label: "allowExternal.enabled"
      description: "For more precise policy, enable networkPolicy.allowExternal. This will only allow pods with the generated client label to connect to Minio. This label will be displayed in the output of a successful install."
      type: "boolean"
      immutable: "false"
      required: false
