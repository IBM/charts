# Â© Copyright IBM Corporation 2017, 2020
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# license must be set to "accept" to accept the terms of the IBM license
license: "not accepted"

image:
  # repository is the container repository to use, which must contain IBM MQ Advanced for Developers
  repository: ibmcom/mq
  # tag is the tag to use for the container repository
  tag: 9.1.5.0-r1
  # pullSecret is the secret to use when pulling the image from a private registry
  pullSecret:
  # pullPolicy is either IfNotPresent or Always (https://kubernetes.io/docs/concepts/containers/images/)
  pullPolicy: IfNotPresent

# metadata allows setting of additional labels to be added to all resources. Set on helm install using --set metadata.labels.KEY=VALUE,metadata.labels.=VALUE,...
metadata:
  labels: {}

# persistence section specifies persistence settings which apply to the whole chart
persistence:
  # enabled is whether to use Persistent Volumes or not
  enabled: true
  # useDynamicProvisioning is whether or not to use Storage Classes to dynamically create Persistent Volumes
  useDynamicProvisioning: true

# dataPVC section specifies settings for the main Persistent Volume Claim, which is used for data in /var/mqm -> /mnt/mqm
dataPVC:
  # name sets part of the name for this Persistent Volume Claim
  name: "data"
  ## storageClassName is the name of the Storage Class to use, or an empty string for no Storage Class
  storageClassName: ""
  ## size is the minimum size of the Persistent Volume
  size: 2Gi

# logPVC section specifies settings for the transaction logs Persistent Volume Claim, which is used for data in /mnt/mqm-log
logPVC:
  ## enabled is whether to use separate storage for transaction logs
  enabled: false
  # name sets part of the name for this Persistent Volume Claim
  name: "log"
  ## storageClassName is the name of the Storage Class to use, or an empty string for no Storage Class
  storageClassName: ""
  ## size is the minimum size of the Persistent Volume
  size: 2Gi

# qmPVC section specifies settings for the queue manager data Persistent Volume Claim, which is used for data in /mnt/mqm-data
qmPVC:
  ## enabled is whether to use separate storage for queue manager data
  enabled: false
  # name sets part of the name for this Persistent Volume Claim
  name: "qm"
  ## storageClassName is the name of the Storage Class to use, or an empty string for no Storage Class
  storageClassName: ""
  ## size is the minimum size of the Persistent Volume
  size: 2Gi

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 512Mi

security:
  # context section specifies additional security context settings for the pod
  context:
    fsGroup:
    supplementalGroups: []
  # initVolumeAsRoot specifies whether or not storage provider requires root permissions to initialize
  initVolumeAsRoot: false

# queueManager section specifies settings for the MQ Queue Manager
queueManager:
  # name allows you to specify the name to use for the queue manager.  Defaults to the Helm release name.
  name:
  # multiInstance specifies whether to run in multi-instance mode with an active and standby queue manager
  multiInstance: false
  # The duration in seconds the Queue Manager needs to terminate gracefully, difference in time between SIGTERM and SIGKILL
  terminationGracePeriodSeconds: 30
  # dev section specifies settings for the MQ developer defaults available in the MQ Advanced for Developers image.
  dev:
    secret:
      # name is the secret that contains the 'admin' user password and optionally the 'app' user password to use for messaging
      name:
      # adminPasswordKey is the secret key that contains the 'admin' user password
      adminPasswordKey:
      # appPasswordKey is the secret key that contains the 'app' user password
      appPasswordKey:

# pki is used to supply certificates, that are stored in k8s secrets, for use with the webconsole and queue manager.
# Must be supplied as an array of yaml objects in the following format:
# - name: <label to give certificate> (only for pki.keys)
#   secret:
#     secretName: <name of Kubernetes secret>
#     items:
#       - <certificate files to import> (for example: tls.key, tls.crt, ca.crt)
pki:
  keys: []
  trust: []

# log section specifies settings for MQ error logs
log:
  format: basic
  debug: false

# trace can be used to enable MQ trace
trace:
  strmqm: false

# metrics section specifies settings for generating queue manager metrics
metrics:
  enabled: true

# livenessProbe section specifies setting for the MQ liveness probe, which checks for a running Queue Manager
livenessProbe:
  # initialDelaySeconds should be raised if your system cannot start the Queue Manager in 60 seconds
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 1

# readinessProbe section specifies setting for the MQ readiness probe, which checks when the MQ listener is running
readinessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 1

# nameOverride can be set to partially override the name of the resources created by this chart
nameOverride: ""
