apiVersion: apps/v1
kind: Deployment
metadata:
  name: ubiquity-db
  labels:
    product: ibm-storage-enabler-for-containers
{{ include "ibm_storage_enabler_for_containers.helmLabels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ubiquity-db
      product: ibm-storage-enabler-for-containers
  template:
    metadata:
      annotations:
{{ include "ibm_storage_enabler_for_containers.productAnnotations" . | indent 8 }}
      labels:
        app.kubernetes.io/name: ubiquity-db
        product: ibm-storage-enabler-for-containers
{{ include "ibm_storage_enabler_for_containers.podLabels" . | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
                      - s390x
      {{- if .Values.ubiquityDb.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.ubiquityDb.nodeSelector | indent 8}}
      {{- end }}
      serviceAccountName: ubiquity
      containers:
      - name: ubiquity-db
{{ include "ibm_storage_enabler_for_containers.securityContext" . | indent 8 }}
        image: "{{ .Values.ubiquityDb.image.repository }}:{{ .Values.ubiquityDb.image.tag }}"
        imagePullPolicy: {{ .Values.ubiquityDb.image.pullPolicy }}
        {{- with .Values.ubiquityDb.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        ports:
        - containerPort: 5432
          name: ubiq-db-port  # no more then 15 chars
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 2
          periodSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 60
          periodSeconds: 30
        env:
          - name: UBIQUITY_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm_storage_enabler_for_containers.ubiquityDbCredentials" . }}
                key: username

          - name: UBIQUITY_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm_storage_enabler_for_containers.ubiquityDbCredentials" . }}
                key: password

          - name: UBIQUITY_DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm_storage_enabler_for_containers.ubiquityDbCredentials" . }}
                key: dbname

        volumeMounts:
          - name: ibm-ubiquity-db
            mountPath: "/var/lib/postgresql/data"
            subPath: "ibm-ubiquity"
{{- if eq .Values.globalConfig.sslMode "verify-full" }}
          - name: ubiquity-db-private-certificate
            mountPath: /var/lib/postgresql/ssl/provided/
{{- end }}

      volumes:
      - name: ibm-ubiquity-db
        persistentVolumeClaim:
          claimName: ibm-ubiquity-db
{{- if (eq .Values.globalConfig.sslMode "verify-full") }}
      - name: ubiquity-db-private-certificate
        secret:
          secretName: ubiquity-db-private-certificate
          items:
          - key: ubiquity-db.key
            path: ubiquity-db.key
            mode: 0600
          - key: ubiquity-db.crt
            path: ubiquity-db.crt
            mode: 0600
{{- end }}
