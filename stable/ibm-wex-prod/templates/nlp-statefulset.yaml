{{- include "sch.config.init" (list . "ibm-wex-prod.sch.chart.config.values") -}}
{{- $compNlpName := .sch.chart.components.wex.nlp.name }}
{{- $compNlpLabelComponent := .sch.chart.components.wex.nlp.label.component }}
{{- $compNlpLabelRunStatefulset := .sch.chart.components.wex.nlp.label.runStatefulset }}

{{- $compConfigmapName := .sch.chart.components.wex.configmap.name }}
{{- $compDataPVCName := .sch.chart.components.wex.data.pvc.name }}
{{- $compConfigName := .sch.chart.components.wex.config.name }}
{{- $compHdpNnName := .sch.chart.components.wex.hdp.nn.name }}
{{- $compHdpRmName := .sch.chart.components.wex.hdp.rm.name }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compNlpName ) }}
  labels:
    app: {{ template "{{ .Chart.Name }}.fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: wex-nlp
    run: {{ $compNlpLabelRunStatefulset }}
spec:
  selector:
    matchLabels:
      app: {{ template "{{ .Chart.Name }}.fullname" . }}
      component: wex-nlp
      run: {{ $compNlpLabelRunStatefulset }}
  serviceName: {{ include "sch.names.fullCompName" (list . $compNlpName ) }}
  replicas: {{ .Values.nlp.replica }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: {{ template "{{ .Chart.Name }}.fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: wex-nlp
        run: {{ $compNlpLabelRunStatefulset }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
      serviceAccountName: {{ .Values.general.serviceAccount.name | default "default" | quote }}
{{- include "sch.security.securityContext" (list . .sch.chart.specSecurityContext) | indent 6 }}
      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        podAntiAffinity:
        {{- if eq .Values.nlp.antiAffinity "hard" }}
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app: {{ template "{{ .Chart.Name }}.fullname" . }}
                component: wex-nlp
                run: {{ $compNlpLabelRunStatefulset }}
        {{- else if eq .Values.nlp.antiAffinity "soft" }}
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 5
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ template "{{ .Chart.Name }}.fullname" . }}
                  component: wex-nlp
                  run: {{ $compNlpLabelRunStatefulset }}
        {{- end }}
      terminationGracePeriodSeconds: 0
      containers:
      - name: nlp
        image: "{{ .Values.general.image.core }}"
        imagePullPolicy: {{ .Values.general.image.pullPolicy }}
{{- include "sch.security.securityContext" (list . .sch.chart.podSecurityContext) | indent 8 }}
        env:
        - name: WEX_ALL_COMPONENTS
          value: "nlp"
        - name: ZK_HOST
          value: "{{ include "sch.names.fullCompName" (list . $compConfigName ) }}:2181"
        - name: DEPLOYMENT_TYPE
          value: CLUSTER
        - name: HADOOP_CONF_DIR
          value: /wexdata/config/hadoop
        - name: HADOOP_NAMENODE_ADDRESS
          value: "{{ include "sch.names.fullCompName" (list . $compHdpNnName ) }}:9000"
        - name: YARN_RESOURCEMANAGER_HOSTNAME
          value: "{{ include "sch.names.fullCompName" (list . $compHdpRmName ) }}"
        envFrom:
        - configMapRef:
            name: {{ include "sch.names.fullCompName" (list . $compConfigmapName ) }}
        ports:
        - name: api
          containerPort: 8393
          protocol: TCP
        resources:
{{ toYaml .Values.nlp.resources | indent 10 }}
        volumeMounts:
        - name: datadir
          mountPath: /wexdata
        readinessProbe:
          httpGet:
            path: /nlp/api/v1/limit/status
            port: api
          initialDelaySeconds: {{ .Values.nlp.readinessProbe.initialDelaySeconds }}
          periodSeconds: 15
          timeoutSeconds: {{ .Values.nlp.readinessProbe.timeoutSeconds }}
          failureThreshold: 12
        livenessProbe:
          httpGet:
            path: /nlp/api/v1/limit/status
            port: api
          initialDelaySeconds: {{ .Values.nlp.livenessProbe.initialDelaySeconds }}
          periodSeconds: 15
          timeoutSeconds: {{ .Values.nlp.livenessProbe.timeoutSeconds }}
      volumes:
      - name: "datadir"
        persistentVolumeClaim:
          claimName: {{ include "sch.names.fullCompName" (list . $compDataPVCName ) }}
