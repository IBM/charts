# Default values for mss.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fullnameOverride: "wmla-mss"
# if replica > 1, will do leader election among msd replicas.
# only 1 leader and other replicas will acquire for it
# it will reduce server down time
replicaCount: 1
image:
  repository: wml-accelerator-msd
  tag: 2.1.0
  pullPolicy: IfNotPresent
service:
  # If the nodePort is null, msd service is deployed as ClusterIP, which
  # means the service can be accessed within the cluster only.
  # If you want to access msd service outside cluster, specify a nodePort.
  # e.g. nodePort: 31080
  nodePort: null
resources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2048Mi
# below are configurations for msd
policy: "elastic-hierarchy"
maxConcurrence: 100000
logLevel: INFO
kernel:
  defaultImage: ""
  # default is the same namespace as msd, {{.Release.Namespace}}
  namespace: ""
  resourceNodeSelector: ""
  # default is empty, use k8s default scheduler
  scheduler: ""
  connectionTimeout: 120
security:
  sslEnable: false
  secretName: ""
  caSecretName: ""

global:
  imagePullSecret: null
  serviceAccountName:
  tolerationKey:
  tolerationValue:
  tolerationEffect: NoExecute
  nodesLabelKey:
  # Specify architecture (amd64, ppc64le, s390x) and weight to be
  # used for scheduling as follows :
  #   0 - Do not use
  #   1 - Least preferred
  #   2 - No preference
  #   3 - Most preferred
  arch:
    amd64: "2 - No preference"
    ppc64le: "3 - Most preferred"

etcd:
  # set to false if using external etcd
  enabled: true
  # default is the built-in one, can specify external one, do not specify http or https
  endpoint: wmla-etcd:2379
  # true if etcd enable SSL or user:password authentication
  authEnable: false
  # specify the external etcd secret if it enable SSL or user:password authentication
  # secret items: ca.crt, tls.crt, tls.key, username, password
  # for msd (play as etcd client) talk with etcd
  clientSecretName: null

  fullnameOverride: "wmla-etcd"
  image:
    repository: etcd-ubi
    tag: v.v3.3.5
    pullPolicy: IfNotPresent
  persistence:
    enabled: false
    useDynamicProvisioning: false
  pvc:
    accessMode: ReadWriteMany
    existingClaimName: ""
    storageClassName: ""
    storageCapacity: 1Gi
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 1000m
      memory: 1024Mi

infoservice:
  enabled: true
  # endpoint for infoservice
  endpoint: wmla-infoservice:8892

  fullnameOverride: "wmla-infoservice"
  image:
    repository: wml-accelerator-infoservice
    tag: 2.1.0
    pullPolicy: IfNotPresent
  service:
    nodePort: null
  persistence:
    enabled: false
    useDynamicProvisioning: false
  pvc:
    accessMode: ReadWriteMany
    existingClaimName: ""
    storageClassName: ""
    storageCapacity: 4Gi
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1024Mi

redis:
  enabled: true
  fullnameOverride: "wmla-redis"
  image:
    repository: privatecloud-redis-repo
    tag: v2.5.0.0-210
    pullPolicy: IfNotPresent
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 500m
      memory: 1024Mi
