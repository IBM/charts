{{ if (eq .Release.Namespace .Values.dsxNamespaces.ibmPrivateCloud) -}}
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: spawner-api
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    run: spawner-api-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: spawner-api-deployment-pod
  template:
    metadata:
      labels:
        component: spawner-api
        run: spawner-api-deployment-pod
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: spawner-api-container
        image: {{ .Values.spawnerApiContainer.image.repository }}:{{ .Values.spawnerApiContainer.image.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
        command: ["/startup.sh"]
        env:
        {{- if .Values.userHomePvc.persistence.existingClaimName }}
        - name: USER_HOME_MOUNT_CLAIM
          value: {{ .Values.userHomePvc.persistence.existingClaimName }}
        {{- else }}
        - name: USER_HOME_MOUNT_CLAIM
          value: {{ template "fullname" . }}-{{ .Values.userHomePvc.name }}
        {{- end }}
        {{- if .Values.userHomePvc.persistence.existingClaimName }}
        - name: SPARK_METRICS_MOUNT_CLAIM
          value: {{ .Values.sparkMetricsPvc.persistence.existingClaimName }}
        {{- else }}
        - name: SPARK_METRICS_MOUNT_CLAIM
          value: {{ template "fullname" . }}-{{ .Values.sparkMetricsPvc.name }}
        {{- end }}
        - name: RSTUDIO_IMAGE_REPOSITORY
          value: {{ .Values.rstudioContainer.image.repository }}
        - name: RSTUDIO_IMAGE_TAG
          value: {{ .Values.rstudioContainer.image.tag }}
        - name: JUPYTER_IMAGE_REPOSITORY
          value: {{ .Values.jupyterContainer.image.repository }}
        - name: JUPYTER_IMAGE_TAG
          value: {{ .Values.jupyterContainer.image.tag }}
        - name: ZEPPELIN_IMAGE_REPOSITORY
          value: {{ .Values.zeppelinContainer.image.repository }}
        - name: ZEPPELIN_IMAGE_TAG
          value: {{ .Values.zeppelinContainer.image.tag }}
        resources:
{{ toYaml .Values.spawnerApiContainer.resources | indent 12 }}
        ports:
        - containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /spawner/monitor
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /spawner/monitor
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
{{- end }}
