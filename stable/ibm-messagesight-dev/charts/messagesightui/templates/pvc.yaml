{{ if and .Values.persistence.enabled (not .Values.dataPVC.existingClaimName) -}}
{{- include "sch.config.init" (list . "webui.sch.chart.config.values") -}}
{{- $pvcName := "pvc" -}}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ $pvcName}}-{{ include "sch.names.fullName" (list .) }}
  labels:
{{ include "sch.metadata.labels.standard" (list .) | indent 4 }}
spec:
  {{- if .Values.persistence.useDynamicProvisioning }}
  # if present, use the storageClassName from the values.yaml, else use the
  # default storageClass setup by kubernetes Administrator
  # setting storageClassName to nil means use the default storage class 
  storageClassName: {{ default nil .Values.dataPVC.storageClassName | quote }}
  {{- else }}
  # bind to an existing pv.
  # setting storageClassName to "" disables dynamic provisioning 
  storageClassName: {{ default "" .Values.dataPVC.storageClassName | quote }}
  {{- if .Values.dataPVC.selector.label }}
  # use selectors in the binding process
  selector:
    matchExpressions:
      - {key: {{ .Values.dataPVC.selector.label }}, operator: In, values: [{{ .Values.dataPVC.selector.value }}]}
  {{- end }}
  {{- end }}
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: {{ .Values.dataPVC.size | quote }}
{{- end }}
