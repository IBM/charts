# Â© Copyright IBM Corporation 2017
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# The couchdbpod deploys a simple couchdb database
#
kind: Deployment
apiVersion: apps/v1beta2 

metadata:
  name: {{ template "fullname" . }}-couchdb
  labels:
    app: {{ template "fullname" . }}-couchdb
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "fullname" . }}-couchdb
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-couchdb
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        productName: "{{ .Chart.Description }}"
        productID: "Tool"
        productVersion: "{{ .Chart.Version }}"
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: false 
        runAsUser: 0
      affinity:
        {{- include "nodeAffinity" . | indent 6 }}
      serviceAccountName: {{ .Values.security.serviceAccountName | default "default" }}
      containers:
        - name: {{ .Chart.Name }}-couchdb
          image: "{{ .Values.couchdb.image.repository }}:{{ .Values.couchdb.image.tag }}"
          imagePullPolicy: {{ .Values.couchdb.image.pullPolicy }}
          resources:
{{ toYaml .Values.couchdb.resources | indent 12 }}
          ports:
            - containerPort: 5984
              name: couchdb
          env:
            - name: COUCHDB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.authentication.icp.secretName | default "xxplaceholderxx" }}
                  key: db_username
                  optional: true
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.authentication.icp.secretName | default "xxplaceholderxx" }}
                  key: secret
                  optional: true
          volumeMounts:
            - mountPath: {{ .Values.couchdb.persistence.volumeMountPath | default "/opt/couchdb/data" }} 
              name: couchdb-data
          securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false 
            runAsUser: 0
            privileged: false
            capabilities:
              drop:
              - ALL 
              add:
              - CHOWN
              - DAC_OVERRIDE
              - FOWNER
              - FSETID
              - KILL
              - SETGID
              - SETUID
              - SETPCAP
              - NET_BIND_SERVICE
              - NET_RAW
              - SYS_CHROOT
              - AUDIT_WRITE
              - SETFCAP
          # set liveness probe to determine if container needs to be restarted
          # this test is the same as the readiness probe however this tests for multiple long periods
          # of time of non-responsiveness - if fails the tests, restarts the container
          # - command, http, or tcp
          # ref : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
          livenessProbe:
            exec:
              command:
              - bash
              - -c
              - curl -s -k localhost:5984 | grep "Welcome"
            initialDelaySeconds: {{ .Values.couchdb.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.couchdb.livenessProbe.timeoutSeconds }} 
            periodSeconds: {{ .Values.couchdb.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.couchdb.livenessProbe.failureThreshold }}
          # set readiness probe to determine if container is ready to accept traffic
          # - command, http, or tcp
          # looks for short durations of non-responsiveness to identify as unavail to accept traffic
          # ref : https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
          readinessProbe:
            exec:
              command:
              - bash
              - -c
              - curl -s -k localhost:5984 | grep "Welcome"
            initialDelaySeconds: {{ .Values.couchdb.readinessProbe.initialDelaySeconds }} 
            timeoutSeconds: {{ .Values.couchdb.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.couchdb.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.couchdb.readinessProbe.failureThreshold }}

      volumes:
        - name: couchdb-data
      {{- if .Values.couchdb.persistence.enabled }}
          persistentVolumeClaim:
            {{- if .Values.couchdb.persistence.existingClaim }}
              claimName: {{ .Values.couchdb.persistence.existingClaim }}
            {{- else }}
              claimName: {{ default (include "fullname" .) }}-couchdb
            {{- end -}}
      {{- else }}
          emptyDir: {}
      {{- end -}}
