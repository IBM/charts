## Metadata for RabbitMQ configuration
## This metadata is used to augment the value.yaml to drive ICP UI for configuration of the Helm chart installation

## Arch metadata
arch:
  __metadata:
    label: "Architecture scheduling preferences"
    description: "Targets a specific OS to use for the worker node."
    options: 
    - label: 'AMD64 platforms'
      value: 'amd64'

  amd64:
    __metadata:
      label: "Architecture preference for target worker node"
      description: "Scheduling priority for using the Intel 64-bit architecture for worker nodes."
      options:
      - label: '3 - Most preferred'
        value: '3 - Most preferred'

## Image configuration metadata
config:
  __metadata:
    label: "Config Docker image"
    description: "copy-rabbitmq-config Docker Image Configuration"
  image:
    name:
      __metadata:
        name: "name"
        label: "Config image name"
        description: "Name of Docker image to be pulled for rabbitmq copy config"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        immutable: false
        required: true

rabbitmq:
  __metadata:
    label: "RabbitMQ Docker image"
    name: "RabbitMQ"
    description: "RabbitMQ Docker Image Configuration"
  image:
    name:
      __metadata:
        name: "name"
        label: "Rabbitmq image name"
        description: "Name of Docker image to be pulled for rabbitmq"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        immutable: false
        required: true

creds:
  __metadata:
    label: "Creds Docker image"
    name: "Credentials Job Utility"
    description: "Creds Docker Image Configuration"
  image:
    name:
      __metadata:
        name: "name"
        label: "Creds image name"
        description: "Name of Docker image to be pulled for creds gen job"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        immutable: false
        required: true

global:
  __metadata:
    label: "Global Image Secret Name"
    name: "Global Image Secret Name"
    description: "A secret that is used globally in the chart"
  image:
    repository:
      __metadata:
        name: "repository"
        label: "Global image repository"
        description: "Docker registry to pull all the images from."
        type: "string"
        immutable: false
        required: true
    pullSecret:
      __metadata:
        name: "pullSecret"
        label: "Global image pull secret"
        description: "Image pull secret to be used globally for all images"
        type: "string"
        immutable: false
        required: false
    pullPolicy:
      __metadata:
        name: "pullPolicy"
        label: "Global image pull policy"
        description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
        type: "string"
        immutable: false
        required: true
        options:
        - label: "IfNotPresent"
          value: "IfNotPresent"
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
  sch:
    enabled:
      __metadata:
        name: "sch subchart"
        label: "ibm-sch subchart is used"
        description: "Set to false only is upstream chart provides ibm-sch chart"
        type: "boolean"
        hidden: false

securityContext:
  __metadata:
    label: "Securitycontext configuration"
    description: "Security context configuration for all containers and pods"
  rabbitmq:
    runAsUser: 
      __metadata:
        label: "Runasuser"
        description: "Run as user config for the contianers rabbitmq and rabbitmq cofig copy"
        type: "number"
        required: false
  creds:
    runAsUser:       
      __metadata:
        label: "Runasuser"
        description: "Run as user config for the containers creds gen and creds clean up"
        type: "number"
        required: false

replicas:
  __metadata:
    label: "Server replicas"
    description: "Number of rabbitmq statefulset replicas to deploy. Defaults to 3"
    type: "number"
    immutable: false
    required: true

auth:
  __metadata:
    label: "Authentication"
    description: "Authentication for RabbitMQ"
  rabbitmqUsername:
    __metadata:
      name: "rabbitmqUsername"
      label: "User Name"
      description: "RabbitMQ admin user name. Defaults to 'admin'."
      type: "string"
      immutable: false
      required: true
  managementUsername:
    __metadata:
      name: "managementUsername"
      label: "Management User Name"
      description: "RabbitMQ management user name. Defaults to 'management'."
      type: "string"
      immutable: false
      required: true
  authSecretName:
    __metadata:
      name: "Secret Name"
      label: "RabbitMQ Auth Secret Name"
      description: "Secret that has the RabbitMQ password. If not provided, a secret with random password will be generated"
      type: "string"
      immutable: false
      required: false

#rabbitmqServerAdditionalErlArgs:
#  __metadata:
#    name: "rabbitmqServerAdditionalErlArgs"
#    label: "RabbitMQ Additional Server Args (RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS)"
#    description: "RabbitMQ additional Server configuration. See https://docs.docker.com/samples/library/rabbitmq/#additional-configuration for information."
#    type: "string"
#    immutable: false
#    required: false

rabbitmqNodePort:
  __metadata:
    name: "rabbitmqNodePort"
    label: "Port"
    description: "RabbitMQ port number. Defaults to '5671'."
    type: "string"
    immutable: false
    required: true

rabbitmqManagerPort:
  __metadata:
    name: "rabbitmqManagerPort"
    label: "Manager Port"
    description: "RabbitMQ manager port number. Defaults to '15671'."
    type: "string"
    immutable: false
    required: true

amqpsNodePort:
  __metadata:
    name: "amqpsNodePort"
    label: "AMQPS Port"
    description: "RabbitMQ AMQPS port number. Defaults to '5671'."
    type: "string"
    immutable: false
    required: true

#rabbitmqNodeType:
#  __metadata:
#    name: "rabbitmqNodeType"
#    label: "Node Type"
#    description: "RabbitMQ node type. Defaults to 'stats'."
#    type: "string"
#    immutable: false
#    required: true

#rabbitmqNodeName:
#  __metadata:
#    name: "rabbitmqNodeName"
#    label: "Node Name"
#    description: "RabbitMQ node name. Defaults to 'rabbit'."
#    type: "string"
#    immutable: false
#    required: true

#rabbitmqClusterNodeName:
#  __metadata:
#    name: "rabbitmqClusterNodeName"
#    label: "Cluster Node Name"
#    description: "RabbitMQ cluster node name. Defaults to empty for no clustering."
#    type: "string"
#    immutable: false
#    required: false

rabbitmqVhost:
  __metadata:
    name: "rabbitmqVhost"
    label: "RabbitMQ Application vhost"
    description: "RabbitMQ application vhost. Defaults to '/'."
    type: "string"
    immutable: false
    required: true

rabbitmqHipeCompile:
  __metadata:
    name: "rabbitmqHipeCompile"
    label: "Enable rabbitmqHipeCompile, true if needs to be enabled"
    description: "Enable rabbitmq Hipe Compile. It needs to be enabled when rabbitmq comiple needs to be done at startup"
    type: "boolean"
    immutable: false
    required: true

extraConfig:
  __metadata:
    name: "extraConfig"
    label: "Extraconfig"
    description: "Extraconfig to be provided in rabbitmq config file"
    type: string
    multiline: true

definitions:
  __metadata:
    label: "Rabbitmq broker definitions"
    description: "Rabbitmq broker definitions provided in config file"
  users:
    __metadata:
      name: "users"
      label: "Users part"
      description: "Users part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  vhosts:
    __metadata:
      name: "vhosts"
      label: "Vhosts part"
      description: "Vhosts part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  parameters:
    __metadata:
      name: "parameters"
      label: "Parameters part"
      description: "Parameters part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  permissions:
    __metadata:
      name: "permissions"
      label: "Permissions part"
      description: "Permissions part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  queues:
    __metadata:
      name: "queues"
      label: "Queues part"
      description: "Queues part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  exchanges:
    __metadata:
      name: "exchanges"
      label: "Exchanages part"
      description: "Exchanages part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  bindings:
    __metadata:
      name: "bindings"
      label: "Bindings part"
      description: "Bindings part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true
  policies:
    __metadata:
      name: "policies"
      label: "Policies part"
      description: "Policies part to be provided in rabbitmq broker definitions"
      type: string
      multiline: true

## Persistence options
persistentVolume:
  __metadata:
    label: "Persistent configuration"
    description: "Persistent Volumes helps retain the data when pod restarts"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable persistence storage for the rabbitmq"
      description: "Select this checkbox to store rabbitmq data on a persistent volume so that the data is preserved if the pod is stopped."
      type: "boolean"
      immutable: false
      required: true
  useDynamicProvisioning:
    __metadata:
      name: "enabled"
      label: "Use dynamic provisioning"
      description: "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects."
      type: "boolean"
      immutable: false
      required: true
  accessModes:
    __metadata:
      name: "accessModes"
      label: "Persistent Volume Access Mode"
      description: "The mode in which persistent volume should be accessed"
      immutable: false
      required: true
      options:
        - label: "ReadWriteOnce"
          value: "ReadWriteOnce"
#        - label: "ReadOnlyMany"
#          value: "ReadOnlyMany"
        - label: "ReadWriteMany"
          value: "ReadWriteMany"

  storageClassName:
    __metadata:
      name: "storageClassName"
      label: "Storage Class Name"
      description: "The name of StorageClass to be used to create persistent volume claim"
      type: "string"
      immutable: false
  size:
    __metadata:
      name: "size"
      label: "PV Storage Size"
      description: "Storage Size for persistent volume to be created"
      type: "string"
      immutable: false
      required: true

dataPVC:
  __metadata:
    label: "Persistent Volume Claim Configuration"
    description: "Configures created Persistent Volume Claims and how they bind to Persistent Volumes"
  selector:
    # label - label that the PV should have to be boundable to created PVCs
    label:
      __metadata:
        label: "Label of Persistent Volume"
        description: "If useDynamicProvisioning is disabled, this specifies labels that needs to have the Persistent Volumes to be used. Defaults to null"
        type: "string"
        required: false
            # value - value of the label that the PV should have to be boundable to created PVCs
    value:
      __metadata:
        label: "Value of Persistent Volume label"
        description: "Specifies value assigned to the label that needs to have the Persistent Volumes to be used. Defaults to null"
        type: "string"
        required: false

## Resource requests and limits configuration metadata
initContainer:
  __metadata:
    label: "Initcontainer resource quotas"
    description: "CPU and Memory Resources for init container"
  resources:
      requests:
        cpu:
          __metadata:
            label: "CPU request"
            description: "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core)."
            type: "string"
            required: true
        memory:
          __metadata:
            label: "Memory request"
            description: "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
            type: "string"
            required: true
      limits:
        cpu:
          __metadata:
            label: "CPU limit"
            description: "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core)."
            type: "string"
            required: true
        memory:
          __metadata:
            label: "Memory limit"
            description: "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
            type: "string"
            required: true

resources:
  __metadata:
    label: "Rabbitmq Resource quotas"
    description: "CPU and Memory Resources for Rabbitmq container"
  requests:
    cpu:
      __metadata:
        label: "CPU request"
        description: "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core)."
        type: "string"
        required: true
    memory:
      __metadata:
        label: "Memory request"
        description: "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
        type: "string"
        required: true
  limits:
    cpu:
      __metadata:
        label: "CPU limit"
        description: "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core)."
        type: "string"
        required: true
    memory:
      __metadata:
        label: "Memory limit"
        description: "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
        type: "string"
        required: true

## TLS info
tls:
  __metadata:
    label: "TLS configuration"
    description: "TLS Configuration parameters"
  enabled:
    __metadata:
      label: "Enable TLS"
      description: "To enable TLS for client and management connections set this to true, when true, you MUST also specify tls cert,key and CA bundle information"
      type: "boolean"
      required: true
  tlsSecretName:
    __metadata:
      name: "Secret Name"
      label: "RabbitMQ TLS Secret Name"
      description: "Secret that has the RabbitMQ TLS certs and keys. If not provided, a secret with TLS certs and keys will be generated"
      type: "string"
      immutable: false
      required: false

livenessProbe:
  __metadata:
    label: "LivenessProbe configuration"
    description: "Liveness probe config for RabbitMQ Servers"

  initialDelaySeconds:
    __metadata:
      name: "initialDelaySeconds"
      label: "Liveness probe initial delay seconds"
      description: "Number of seconds after the container has started before the probe is initiated."
      type: "number"
      immutable: false
      required: true
  periodSeconds:
    __metadata:
      name: "periodSeconds"
      label: "Liveness probe period seconds"
      description: "How often (in seconds) to perform the probe."
      type: "number"
      immutable: false
      required: true
  timeoutSeconds:
    __metadata:
      name: "timeoutSeconds"
      label: "Liveness probe timeout seconds"
      description: "Number of seconds after which the probe times out."
      type: "number"
      immutable: false
      required: true
  failureThreshold:
    __metadata:
      name: "failureThreshold"
      label: "Liveness probe failure threshold"
      description: "Number of failures to accept before giving up and marking the pod as Unready."
      type: "number"
      immutable: false
      required: true

readinessProbe:
  __metadata:
    label: "ReadinessProbe configuration"
    description: "Liveness probe config for RabbitMQ Servers"

  initialDelaySeconds:
    __metadata:
      name: "initialDelaySeconds"
      label: "Readiness probe initial delay seconds"
      description: "Number of seconds after the container has started before the probe is initiated."
      type: "number"
      immutable: false
      required: true
  periodSeconds:
    __metadata:
      name: "periodSeconds"
      label: "Readiness probe period seconds"
      description: "How often (in seconds) to perform the probe."
      type: "number"
      immutable: false
      required: true
  timeoutSeconds:
    __metadata:
      name: "timeoutSeconds"
      label: "Readiness probe timeout seconds"
      description: "Number of seconds after which the probe times out."
      type: "number"
      immutable: false
      required: true
  failureThreshold:
    __metadata:
      name: "failureThreshold"
      label: "Readiness probe failure threshold"
      description: "Number of failures to accept before giving up and restarting the."
      type: "number"
      immutable: false
      required: true

clusterDomain:
  __metadata:
    name: "clusterDomain"
    label: "Cluster domain used by in-cluster KubeDNS names."
    description: "Specify only if your KubeDNS service names does not end with cluster.local."
    type: "string"
    required: false
    hidden: true
