# Values for ibm-business-automation-insights Helm Chart
persistence:
  __metadata:
    label: "Persistent volume global configuration"
    description: "States whether to use dynamic provisioning of persistent volume."
  useDynamicProvisioning:
    __metadata:
      label: "Use dynamic provisioning"
      description: "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects."
      type: "boolean"
      required: true

baiSecret:
  __metadata:
    label: "Name of a secret containing sensitive data"
    description: "If a secret is provided, it overrides all the user names and passwords that are defined in Helm values."
    type: "string"
    required: false

imageCredentials:
  __metadata:
    label: "Docker registry global configuration"
    description: "Provide URL and credentials to access Docker registry"
  registry:
    __metadata:
      label: "Docker URL"
      description: "Docker registry URL"
      type: "string"
      required: false
  username:
    __metadata:
      label: "Docker username"
      description: "The user's name to the Docker registry"
      type: "string"
      required: false
  password:
    __metadata:
      label: "Docker password"
      description: "The password to the Docker registry"
      type: "password"
      required: false
  imagePullSecret:
    __metadata:
      label: "Name of a secret used as imagePullSecret for IBM Business Automation Insights docker images"
      description: "The imagePullSecret for docker images. Overrides imageCredentials.registry, imageCredentials.username and imageCredentials.password"
      type: "string"
      required: false

imagePullPolicy:
  __metadata:
    label: "Images pull policy"
    description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
    type: "string"
    required: false
    options:
    - label: 'Always'
      value: 'Always'
    - label: 'Never'
      value: 'Never'
    - label: 'IfNotPresent'
      value: 'IfNotPresent'

security:
  __metadata:
    label: "Security"
    description: "Configuration settings for security."
  serviceAccountName:
    __metadata:
      label: "Service account name"
      description: "Name of the service account to use by default. Applies to all pods which are not running privileged containers."
      type: "string"
      required: true
      hidden: true

kafka:
  __metadata:
    label: "Apache Kafka settings"
    description: "Information required for IBM Business Automation Insights to connect to Apache Kafka."
  bootstrapServers:
    __metadata:
      label: "Apache Kafka bootstrap servers"
      description: "Comma-separated list of Apache Kafka bootstrap servers"
      type: "string"
      required: true
  securityProtocol:
    __metadata:
      label: "Apache Kafka security protocol"
      description: "The value of the Kafka security.protocol property"
      type: "string"
      required: true
      options:
      - label: "PLAINTEXT"
        value: "PLAINTEXT"
      - label: "SSL"
        value: "SSL"
      - label: "SASL_PLAINTEXT"
        value: "SASL_PLAINTEXT"
      - label: "SASL_SSL"
        value: "SASL_SSL"
  saslKerberosServiceName:
    __metadata:
      label: "Apache Kafka SASL Kerberos service name"
      description: "The value of the Kafka sasl.kerberos.service.name property"
      type: "string"
      required: false
      immutable: true
  serverCertificate:
    __metadata:
      label: "Apache Kafka server certificate"
      description: "The Apache Kafka server certificate used for SSL communications (base64 encoded)"
      type: "string"
      required: false
  propertiesConfigMap:
    __metadata:
      label: "Name of Kubernetes ConfigMap holding Kafka advanced configuration"
      description: "Name of a ConfigMap already deployed into Kubernetes and contains Kafka consumer and producer properties"
      type: "string"
      required: false
  username:
    __metadata:
      name: "username"
      label: "Apache Kafka username"
      description: "The user name to the Apache Kafka server"
      type: "string"
      required: false
  password:
    __metadata:
      name: "password"
      label: "Apache Kafka password"
      description: "The password to the Apache Kafka server"
      type: "password"
      required: false

elasticsearch:
  __metadata:
    label: "Elasticsearch settings"
    description: "Settings related to Elasticsearch"
  install:
    __metadata:
      label: "Install Elasticsearch"
      description: "Whether to install Elasticsearch and Kibana by using the ibm-dba-ek subchart."
      type: "boolean"
      required: true
      immutable: true
  url:
    __metadata:
      label: "Elasticsearch URL"
      description: "Elasticsearch URL. This attribute is relevant only if you set 'Install Elasticsearch' to false."
      type: "string"
      required: false
      immutable: true
  username:
    __metadata:
      label: "Elasticsearch username"
      description: "Elasticsearch username. This attribute is relevant only if you set 'Install Elasticsearch' to false."
      type: "string"
      required: false
      immutable: true
  password:
    __metadata:
      label: "Elasticsearch password"
      description: "Elasticsearch password. This attribute is relevant only if you set 'Install Elasticsearch' to false."
      type: "password"
      required: false
      immutable: true
  serverCertificate:
    __metadata:
      label: "Elasticsearch server certificate"
      description: "Elasticsearch server certificate used for SSL communications (base64 encoded). This attribute is relevant only if you set 'Install Elasticsearch' to false."
      type: "string"
      required: false
      immutable: true


settings:
  __metadata:
    label: "Business Automation Insights settings"
    description: "IBM Business Automation Insights settings"
  egress:
    __metadata:
      label: "Enable data egress"
      description: "Enable Apache Kafka data egress"
      type: "boolean"
      required: true
  ingressTopic:
    __metadata:
      label: "Ingress topic"
      description: "Apache Kafka ingress topic"
      type: "string"
      required: false
  egressTopic:
    __metadata:
      label: "Egress topic"
      description: "Apache Kafka egress topic"
      type: "string"
      required: false
  serviceTopic:
    __metadata:
      label: "Service topic"
      description: "Apache Kafka service topic"
      type: "string"
      required: false

setup:
  __metadata:
    label: "Setup service settings"
    description: "The Setup service initializes the Elasticsearch data required by IBM Business Automation Insights."
  image:
    repository:
      __metadata:
        label: "Setup service image repository"
        description: "Docker registry to pull Setup service image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "Setup service image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Setup pod memory requirement"
          description: "The minimum memory required (including JVM heap and file system cache) to start a setup pod."
          type: "string"
          required: false
          hidden: true
      cpu:
        __metadata:
          label: "Setup pod CPU requirement"
          description: "The minimum amount of CPU required to start a setup pod."
          type: "string"
          required: false
          hidden: true
    limits:
      memory:
        __metadata:
          label: "Setup pod memory limit"
          description: "The maximum memory (including JVM heap and file system cache) of a setup pod."
          type: "string"
          required: false
          hidden: true
admin:
  __metadata:
    label: "Administration service settings"
    description: "Settings related to the Administration service"
  image:
    repository:
      __metadata:
        label: "Administration service image repository"
        description: "Docker registry to pull Administration service image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "Administration Service image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  serviceType:
    __metadata:
      label: "Admin API service type"
      description: "An API object that describes how to access the Administration REST API exposed by Administration pods."
      type: "string"
      required: true
      options:
      - label: "NodePort"
        value: "NodePort"
      - label: "ClusterIP"
        value: "ClusterIP"
  externalPort:
    __metadata:
      label: "Administration service external REST port"
      description: "The port to which the admin API will be exposed externally. Relevant only if the serviceType property is set to NodePort."
      type: "number"
      required: false
  replicas:
    __metadata:
      label: "Administration service replicas"
      description: "The number of replicas of the administration service"
      type: "number"
      required: true
      immutable: true
  username:
    __metadata:
      label: "Administration service username"
      description: "Sets the user name to the administration service API."
      type: "string"
      required: true
  password:
    __metadata:
      label: "Administration service password"
      description: "Sets the password to the administration service API. It is recommended to use a randomly-generated password."
      type: "password"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Administration pod memory requirement"
          description: "The minimum memory required (including JVM heap and file system cache) to start an administration pod."
          type: "string"
          required: false
          hidden: true
      cpu:
        __metadata:
          label: "Administration pod CPU requirement"
          description: "The minimum amount of CPU required to start an administration pod."
          type: "string"
          required: false
          hidden: true
    limits:
      memory:
        __metadata:
          label: "Administration pod memory limit"
          description: "The maximum memory (including JVM heap and file system cache) of an administration pod."
          type: "string"
          required: false
          hidden: true
flinkPv:
  __metadata:
    label: "Apache Flink persistent volume claim settings"
    description: "Settings related to the Persistent Volume Claim used by Apache Flink processing."
  capacity:
    __metadata:
      label: "Apache Flink persistent volume capacity"
      description: "Persistent volume capacity required by the Apache Flink processing."
      type: "string"
      required: true
  storageClassName:
    __metadata:
      label: "Apache Flink storage class name"
      description: "Name of the storage class name to use for the Apache Flink Persistent Volume."
      type: "string"
      required: false
  existingClaimName:
    __metadata:
      label: "Apache Flink existing claim name"
      description: "By default, a new persistent volume claim is created. Specify an existing claim here if one is available."
      type: "string"
      required: false

flink:
  __metadata:
    label: "Apache Flink settings"
    description: "Configuration of the Flink processing of IBM Business Automation Insights."
  image:
    repository:
      __metadata:
        label: "Apache Flink image repository"
        description: "Docker registry to pull Apache Flink image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "Apache Flink image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  taskManagerHeapMemory:
    __metadata:
      label: "Apache Flink task manager heap memory"
      description: "Apache Flink task manager heap memory (in megabytes)."
      type: "number"
      required: false
  taskManagerMemory:
    __metadata:
      label: "Apache Flink task manager memory"
      description: "Apache Flink task manager total memory (in megabytes). Must be greater than task manager heap memory."
      type: "number"
      required: false
  taskManagerCPU:
    __metadata:
      label: "Apache Flink task manager CPU"
      description: "Apache Flink task manager total CPU. Any value greater than 1 will be considered as 1."
      type: "number"
      required: false
      hidden: true
  jobManagerLivenessInitialDelaySeconds:
    __metadata:
      label: "Apache Flink job manager liveness probe initial delay"
      description: "Number of seconds after the Apache Flink job manager has started before the liveness probe gets initiated."
      type: "number"
      required: false
      hidden: true
  jobCheckpointingInterval:
    __metadata:
      label: "Apache Flink job checkpointing interval"
      description: "Interval between checkpoints in Apache Flink jobs"
      type: "number"
      required: true
  jobManagerMemoryRequest:
    __metadata:
      label: "Apache Flink job manager memory request"
      description: "The minimum memory required (including JVM heap and file system cache) to start the Apache Flink job manager (in megabytes)."
      type: "number"
      required: false
      hidden: true
  jobManagerCPURequest:
    __metadata:
      label: "Apache Flink job manager CPU request"
      description: "The minimum amount of CPU required to start the Apache Flink job manager."
      type: "number"
      required: false
      hidden: true
  jobManagerMemoryLimit:
    __metadata:
      label: "Apache Flink job manager memory limit"
      description: "The maximum memory (including JVM heap and file system cache) for the Apache Flink job manager (in megabytes)."
      type: "number"
      required: false
      hidden: true
  batchSize:
    __metadata:
      label: "Apache Flink storage batch size"
      description: "Batch size of the bucketing sink storage"
      type: "number"
      required: false
  checkInterval:
    __metadata:
      label: "Apache Flink inactive bucket check interval"
      description: "How frequently (in ms) the job checks for inactive buckets"
      type: "number"
      required: false
  bucketThreshold:
    __metadata:
      label: "Apache Flink inactive bucket threshold"
      description: "The minimum time (in ms) after which a bucket that doesn't receive new data is considered inactive"
      type: "number"
      required: false
  storageBucketUrl:
    __metadata:
      label: "Apache Flink storage bucket URL"
      description: "The HDFS URL of long-term storage (for example, hdfs://<node_name>:<port>/bucket/path)"
      type: "string"
      required: false
      immutable: true
  initStorageDirectory:
    __metadata:
      label: "Whether the ownership and permissions of the Flink storage directory need to be set."
      description: "Whether the Flink storage directory needs to be initialized. When BAI is deployed on IBM Cloud, needs to be set to true to make possible the change of ownership and permissions for the storage directory using an init container running as privileged. Defaults to false."
      type: "boolean"
      required: false
  zookeeper:
    image:
      repository:
        __metadata:
          label: "Apache Zookeeper image repository"
          description: "Docker registry to pull Apache Zookeeper image from."
          type: "string"
          required: true
      tag:
        __metadata:
          label: "Apache Zookeeper image tag"
          description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
          type: "string"
          required: true
    replicas:
      __metadata:
        label: "Apache Zookeeper replicas"
        description: "Number of replicas of Apache Zookeeper"
        type: "number"
        required: true
        immutable: true
    heapSize:
      __metadata:
        label: "Apache Zookeeper heap size"
        description: "Apache Zookeeper Heap Memory Size (default value: '512M')"
        type: "string"
        required: true
        hidden: true
    resources:
      limits:
        memory:
          __metadata:
            label: "Apache Zookeeper memory limit"
            description: "The maximum memory (including JVM heap and file system cache) to allocate to each Apache Zookeeper pod"
            type: "string"
            required: true
            hidden: true
        cpu:
          __metadata:
            label: "Apache Zookeeper CPU limit"
            description: "The maximum amount of CPU to allocate to each Apache Zookeeper pod."
            type: "string"
            required: true
            hidden: true
      requests:
        memory:
          __metadata:
            label: "Apache Zookeeper memory requirement"
            description: "The minimum memory required (including JVM heap and file system cache) to start a Apache Zookeeper pod"
            type: "string"
            required: true
            hidden: true
        cpu:
          __metadata:
            label: "Apache Zookeeper CPU requirement"
            description: "The minimum amount of CPU required to start a Apache Zookeeper pod."
            type: "string"
            required: true
            hidden: true
  rocksDbPropertiesConfigMap:
    __metadata:
      label: "Name of a Kubernetes ConfigMap holding advanced RocksDB configuration"
      description: "Name of a ConfigMap already deployed into Kubernetes that contains advanced RocksDB properties"
      type: "string"
      required: false
  log4jConfigMap:
    __metadata:
      label: "Name of a Kubernetes ConfigMap holding customized log4j configuration"
      description: "Name of a configMap already deployed into kubernetes that overrides the default bai-flink-log4j configMap."
  hadoopConfigMap:
    __metadata:
      label: "Name of a Kubernetes ConfigMap holding HDFS configuration"
      description: "Name of a ConfigMap already deployed into Kubernetes that contains HDFS configuration (core-site.xml and hdfs-site.xml)."
      type: "string"
      required: false

ingestion:
  __metadata:
    label: "Raw events processing settings"
    description: "Settings related to the raw events processing"
  install:
    __metadata:
      label: "Install Ingestion"
      description: "Whether to enable processing of raw events (not available with the developer edition)"
      type: "boolean"
      required: true
      immutable: true
  image:
    repository:
      __metadata:
        name: "repository"
        label: "Ingestion image repository"
        description: "Docker registry to pull Ingestion image from."
        type: "string"
        required: true
        immutable: true
    tag:
      __metadata:
        label: "Ingestion image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
        immutable: true
  recoveryPath:
    __metadata:
      label: "Ingestion recovery savepoint/checkpoint path"
      description: "The path to the savepoint or checkpoint from which a job will recover"
      type: "string"
      required: false
      immutable: true
  parallelism:
    __metadata:
      label: "Ingestion job parallelism"
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true

bpmn:
  __metadata:
    label: "BPMN events processing settings"
    description: "Settings related to the BPMN events processing"
  install:
    __metadata:
      label: "Install BPMN events processing"
      description: "Whether to enable processing of Business Process Model & Notation (BPMN) events."
      type: "boolean"
      required: true
  image:
    repository:
      __metadata:
        label: "BPMN events processing image repository"
        description: "Docker registry to pull BPMN events processing image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "BPMN events processing image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  recoveryPath:
    __metadata:
      label: "BPMN events processing recovery savepoint/checkpoint path"
      description: "The path to the savepoint or checkpoint from which a job will recover"
      type: "string"
      required: false
  endAggregationDelay:
    __metadata:
      label: "BPMN events processing summary end aggregation delay"
      description: "The delay in milliseconds before clearing the states used for summary transformation"
      type: "number"
      required: false
  parallelism:
    __metadata:
      label: "BPMN events processing job parallelism"
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true

bawadv:
  __metadata:
    label: "BAW Advanced events processing settings"
    description: "Settings related to the BAW Advanced events processing"
  install:
    __metadata:
      label: "Install BAW Advanced events processing"
      description: "Whether to enable processing of BAW Advanced (BPEL, human tasks...) events."
      type: "boolean"
      required: true
  image:
    repository:
      __metadata:
        label: "BAW Advanced events processing image repository"
        description: "Docker registry to pull BAW Advanced events processing image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "BAW Advanced events processing image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  recoveryPath:
    __metadata:
      label: "BAW Advanced events processing recovery savepoint/checkpoint path"
      description: "The path to the savepoint or checkpoint from which a job will recover"
      type: "string"
      required: false
  parallelism:
    __metadata:
      label: "BAW Advanced events processing job parallelism"
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true

icm:
  __metadata:
    label: "Case events processing settings"
    description: "Settings related to the IBM Case Manager events processing"
  install:
    __metadata:
      label: "Install Case events processing"
      description: "Whether to enable processing of Case events."
      type: "boolean"
      required: true
  image:
    repository:
      __metadata:
        label: "Case events processing image repository"
        description: "Docker registry to pull Case events processing image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "Case events processing image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  recoveryPath:
    __metadata:
      label: "Case events processing recovery savepoint/checkpoint path"
      description: "The path to the savepoint or checkpoint from which a job will recover"
      type: "string"
      required: false
  parallelism:
    __metadata:
      label: "Case events processing job parallelism"
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true

odm:
  __metadata:
    label: "ODM events processing settings"
    description: "Settings related to IBM Operational Decision Manager (ODM) event processing"
  install:
    __metadata:
      label: "Install ODM events processing "
      description: "Whether to enable processing of ODM events."
      type: "boolean"
      required: true
  image:
    repository:
      __metadata:
        label: "ODM events processing image repository"
        description: "Docker registry to pull ODM events processing image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "ODM events processing image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  recoveryPath:
    __metadata:
      label: "ODM events processing recovery savepoint/checkpoint path"
      description: "The path to the savepoint or checkpoint from which a job will recover"
      type: "string"
      required: false
  parallelism:
    __metadata:
      label: "ODM events processing job parallelism"
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true

content:
  __metadata:
    label: "Content events processing settings"
    description: "Settings related to IBM Content Platform Engine event processing"
  install:
    __metadata:
      label: "Install Content events processing "
      description: "Whether to enable processing of Content events."
      type: "boolean"
      required: true
  image:
    repository:
      __metadata:
        label: "Content events processing image repository"
        description: "Docker registry to pull Content events processing image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "Content events processing image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  recoveryPath:
    __metadata:
      label: "Content events processing recovery savepoint/checkpoint path"
      description: "The path to the savepoint or checkpoint from which a job will recover"
      type: "string"
      required: false
  parallelism:
    __metadata:
      label: "Content events processing job parallelism"
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true


baiw:
  __metadata:
    label: "BAIW events processing settings."
    description: "Settings related to BAIW event processing."
  install:
    __metadata:
      label: "Install BAIW events processing."
      description: "Whether to enable processing of BAIW events."
      type: "boolean"
      required: true
  image:
    repository:
      __metadata:
        label: "BAIW events processing image repository."
        description: "Docker registry to pull BAIW events processing image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "BAIW events processing image tag."
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true
  recoveryPath:
    __metadata:
      label: "BAIW events processing recovery savepoint/checkpoint path."
      description: "The path to the savepoint or checkpoint from which a job will recover."
      type: "string"
      required: false
  parallelism:
    __metadata:
      label: "BAIW events processing job parallelism."
      description: "The number of parallel instances (task managers) to use for running the processing job."
      type: "number"
      required: false
      immutable: true


kerberos:
  __metadata:
    label: "Kerberos configuration"
    description: "Settings related to Kerberos auhentication"
  enabledForKafka:
    __metadata:
      label: "Apache Kafka Kerberos enabled"
      description: "Set to true to enable Apache Kafka Kerberos authentication"
      type: "boolean"
      required: true
      immutable: true
  enabledForHdfs:
    __metadata:
      label: "HDFS Kerberos enabled"
      description: "Set to true to enable HDFS Kerberos authentication"
      type: "boolean"
      required: true
      immutable: true
  realm:
    __metadata:
      label: "Kerberos REALM name"
      description: "Name of the Kerberos default realm"
      type: "string"
      required: false
      immutable: true
  kdc:
    __metadata:
      label: "Kerberos KDC host"
      description: "Kerberos Key Distribution Center host"
      type: "string"
      required: false
      immutable: true
  principal:
    __metadata:
      label: "Kerberos principal"
      description: "Set the Kerberos principal to authenticate with (<name>/<FQDN>@<REALM>)."
      type: "string"
      required: false
      immutable: true
  keytab:
    __metadata:
      label: "Kerberos Keytab"
      description: "Set the Kerberos Keytab (base64 encoded)."
      type: "password"
      required: false
      immutable: true

initImage:
  __metadata:
    label: "Initialization image details"
    description: "Settings related to the docker image used by initContainers"
  image:
    repository:
      __metadata:
        label: "Initialization image repository"
        description: "Docker registry to pull initialization image from."
        type: "string"
        required: true
    tag:
      __metadata:
        label: "Initialization image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        required: true

ibm-dba-ek:
  __metadata:
    label: "ibm-dba-ek subchart"
    description: "Settings related to the ibm-dba-ek subchart which deploys Elasticsearch and Kibana as part of BAI"
  image:
    pullPolicy:
      __metadata:
        label: "Images pull policy"
        description: "The default pull policy is IfNotPresent which causes the Kubelet to skip pulling an image if it already exists."
        type: "string"
        required: false
        options:
        - label: 'Always'
          value: 'Always'
        - label: 'Never'
          value: 'Never'
        - label: 'IfNotPresent'
          value: 'IfNotPresent'
    credentials:
      registry:
        __metadata:
          label: "Docker URL"
          description: "Docker registry URL"
          type: "string"
          required: false
      username:
        __metadata:
          label: "Docker username"
          description: "User name to the Docker registry"
          type: "string"
          required: false
      password:
        __metadata:
          label: "Docker password"
          description: "Password to the Docker registry"
          type: "password"
          required: false
    imagePullSecret:
      __metadata:
        label: "Name of a secret used as imagePullSecret for ibm-dba-ek subchart docker images"
        description: "The imagePullSecret for ibm-dba-ek subchart docker images. Overrides ibm-dba-ek.image.credentials"
        type: "string"
        required: false

  security:
    serviceAccountName:
      __metadata:
        label: "Service account name used by ibm-dba-ek subchart"
        description: "Name of the service account to use by default. Applies to all pods which are not running privileged containers."
        type: "string"
        required: true
        hidden: true
    initOpenDistroConfig:
      __metadata:
        label: "Init Open Distro security configuration"
        description: "Boolean stating if the security configuration job should be created. See README for more details."
        type: "boolean"
        required: true
    openDistroConfigSecret:
      __metadata:
        label: "Open Distro security configuration"
        description: "Name of a secret that contains the Open Distro for Elasticsearch security configuration files. See README for more details."
        type: "string"
        required: false

  elasticsearch:
    image:
      repository:
        __metadata:
          label: "Elasticsearch image repository"
          description: "Docker registry to pull Elasticsearch image from."
          type: "string"
          required: true
      tag:
        __metadata:
          label: "Elasticsearch image tag"
          description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
          type: "string"
          required: true
    init:
      image:
        repository:
          __metadata:
            label: "Elasticsearch system initializer image"
            description: "Docker registry to pull Elasticsearch system initializer image from."
            type: "string"
            required: true
        tag:
          __metadata:
            label: "Elasticsearch system initializer image tag"
            description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
            type: "string"
            required: true
    client:
      replicas:
        __metadata:
          label: "Elasticsearch client replicas"
          description: "The number of replicas of Elasticsearch client pods."
          type: "number"
          required: true
          immutable: true
      serviceType:
        __metadata:
          label: "Elasticsearch client service type"
          description: "An API object that describes how to access the REST API exposed by Elasticsearch client pods."
          type: "string"
          required: true
          options:
          - label: "NodePort"
            value: "NodePort"
          - label: "ClusterIP"
            value: "ClusterIP"
      externalPort:
        __metadata:
          label: "Elasticsearch client external REST port"
          description: "The port to which the Elasticsearch client will be exposed externally. Relevant only if the serviceType property is set to NodePort."
          type: "number"
          required: false

    master:
      replicas:
        __metadata:
          label: "Elasticsearch master replicas"
          description: "The number of replicas of Elasticsearch master pods."
          type: "number"
          required: true
          immutable: true

    data:
      replicas:
        __metadata:
          label: "Elasticsearch data replicas"
          description: "The number of replicas of Elasticsearch data pods."
          type: "number"
          required: true
          immutable: true
      storage:
        persistent:
          __metadata:
            label: "Elasticsearch data persistent storage"
            description: "Set to true if you want to persist Elasticsearch data into persistent volumes. Set to false for non-production or trial-only deployment."
            type: "boolean"
            required: true
        size:
          __metadata:
            label: "Elasticsearch data persistent storage size"
            description: "The minimum size of the persistent volumes used by Elasticsearch Data pods."
            type: "string"
            required: true
        storageClass:
          __metadata:
            label: "Elasticsearch data persistent storage class name"
            description: "Name of the storage class name to use for the persistent volumes used by Elasticsearch Data pods."
            type: "string"
            required: false
        useDynamicProvisioning:
          __metadata:
            label: "Elasticsearch data persistent storage dynamic provisioning"
            description: "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects."
            type: "boolean"
            required: true
      snapshotStorage:
        enabled:
          __metadata:
            label: "Elasticsearch snapshot storage"
            description: "Set to true if you want to support creating snapshots of Elasticsearch data. Set to false for non-production or trial-only deployment."
            type: "boolean"
            required: true
        size:
          __metadata:
            label: "Elasticsearch snapshot storage size"
            description: "The minimum size of the persistent volume to store snapshots of Elasticsearch data."
            type: "string"
            required: true
        useDynamicProvisioning:
          __metadata:
            label: "Elasticsearch snapshot storage dynamic provisioning"
            description: "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects."
            type: "boolean"
            required: true
        storageClassName:
          __metadata:
            name: "storageClassName"
            label: "Elasticsearch snapshot storage class name"
            description: "Name of the storage class name to use for the persistent volume storing snapshots of Elasticsearch data."
            type: "string"
            required: false
        existingClaimName:
          __metadata:
            name: "existingClaimName"
            label: "Elasticsearch snapshot storage existing claim name"
            description: "By default, a new persistent volume claim is created. Specify an existing claim here if one is available."
            type: "string"
            required: false

  kibana:
    image:
      repository:
        __metadata:
          label: "Kibana image"
          description: "Docker registry to pull Kibana image from."
          type: "string"
          required: true
      tag:
        __metadata:
          label: "Kibana image tag"
          description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
          type: "string"
          required: true
    replicas:
      __metadata:
        label: "Kibana replicas"
        description: "The number of replicas of Kibana pods."
        type: "number"
        required: true
        immutable: true
    username:
      __metadata:
        label: "Kibana user name"
        description: "The name of the user used internally by Kibana to authenticate against the Elasticsearch REST API."
        type: "string"
        required: true
    password:
      __metadata:
        label: "Kibana password "
        description: "Password of the user used internally by Kibana to authenticate against the Elasticsearch REST API"
        type: "password"
        required: true
    serviceType:
      __metadata:
        label: "Kibana service type"
        description: "An API object that describes how to access Kibana."
        type: "string"
        required: true
        options:
        - label: "NodePort"
          value: "NodePort"
        - label: "ClusterIP"
          value: "ClusterIP"
    externalPort:
      __metadata:
        label: "External kibana port"
        description: "The port used by external users, exposed as a NodePort service. Relevant only if the serviceType property is set to NodePort."
        type: "number"
        required: false
