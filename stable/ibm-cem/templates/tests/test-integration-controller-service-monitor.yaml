{{/*********************************************************** {COPYRIGHT-TOP} ****
* Licensed Materials - Property of IBM
*
* "Restricted Materials of IBM"
*
*  5737-H89, 5737-H64
*
* Â© Copyright IBM Corp. 2015, 2019  All Rights Reserved.
*
* US Government Users Restricted Rights - Use, duplication, or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
********************************************************* {COPYRIGHT-END} ****/}}
{{- $compName := "integration-controller-service-monitor-test" -}}
{{- include "sch.config.init" (list . "cem.sch.chart.config.values") -}}
{{- $testName := include "sch.names.fullCompName" (list . $compName) -}}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ $testName }}"
  annotations:
    "helm.sh/hook": test-success
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
    origin: helm-cem
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
      #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
      #
      #If you specify multiple matchExpressions associated with nodeSelectorTerms,
      #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
      #
      #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
        nodeSelectorTerms:
        - matchExpressions:
          - key: beta.kubernetes.io/arch
            operator: In
            values:
            {{- range $arch := .Values.arch }}
              - {{ $arch -}}
            {{ end }}
  containers:
    - name: "cem-helm-tests"
      image: "{{ include "cem.getImageRepo" . }}/{{ .Values.commonimages.cemusers.image.name }}:{{ .Values.commonimages.cemusers.image.tag }}"
      env:
        - name: test_url
          value: '{{ include "cem.services.integrationcontroller" . }}'
        - name: test_port
          value: "443"
      imagePullPolicy: IfNotPresent
      command: ["sh", "-c", "curl $test_url/servicemonitor"]
      securityContext:
        privileged: false
        readOnlyRootFilesystem: false
        allowPrivilegeEscalation: false
        runAsNonRoot: true
        runAsUser: 1000
        capabilities:
          drop:
          - ALL
  restartPolicy: Never
