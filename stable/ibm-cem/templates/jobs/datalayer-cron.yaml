{{/*********************************************************** {COPYRIGHT-TOP} ****
* Licensed Materials - Property of IBM
*
* "Restricted Materials of IBM"
*
*  5737-H89, 5737-H64
*
* Â© Copyright IBM Corp. 2015, 2018  All Rights Reserved.
*
* US Government Users Restricted Rights - Use, duplication, or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
********************************************************* {COPYRIGHT-END} ****/}}
{{- $compName := "datalayer-cron" -}}
{{- include "sch.config.init" (list . "cem.sch.chart.config.values") -}}
{{- $jobName := include "sch.names.fullCompName" (list . $compName) -}}
{{- $rootData := fromYaml (include "root.data" .) -}}
{{- $rootMetering := $rootData.metering -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ $jobName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
    origin: helm-cem
spec:
  concurrencyPolicy: Forbid
  schedule: '15 1 * * *'
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 12 }}
            origin: helm-cem
          annotations:
{{- include "sch.metadata.annotations.metering" (list . $rootMetering) | indent 12 }}
        spec:
{{ include "ingress-host-alias" . | indent 10 }}
          hostNetwork: false
          hostPID: false
          hostIPC: false
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            fsGroup: 1001
            supplementalGroups:
            {{- range $group := .Values.global.persistence.supplementalGroups }}
              - {{ $group -}}
            {{ end }}
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
              #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
              #
              #If you specify multiple matchExpressions associated with nodeSelectorTerms,
              #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
              #
              #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
                nodeSelectorTerms:
                - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                    {{- range $arch := .Values.arch }}
                      - {{ $arch -}}
                    {{ end }}
          containers:
          - name: expirycheck
            image: "{{ include "ibm-cem.getImageRepo" . }}/hdm-datalayer:{{ .Values.commonimages.datalayer.image.tag }}"
            command:
              - /bin/sh
              - -c
              - 'node expirycheck'
            env:
            - name: NODE_CONFIG
              value: '{"cassandra": {"contactPoints": [{{- template "datalayer.contactPoints" . }}],"localDataCenter":"datacenter1","keyspace": "datalayer","authProvider": { "userid": "cassandra", "password": "cassandra" },"socketOptions":{"readTimeout": 120000}, "cassandraNodeReplicas": {{ .Values.global.cassandraNodeReplicas }}},"kafka":{"enabled":{{- if eq .Values.kafka.ssl.enabled true }}true{{ else }}false{{ end }},"secured":{{- if eq .Values.kafka.ssl.enabled true }}true{{ else }}false{{ end }},"kafka_brokers_sasl":{{ include "cem.services.kafkabrokers.json" . }},"user": "{{ .Values.kafka.client.username }}","password": "{{ .Values.kafka.client.password }}","sslcalocation": "/etc/keystore/ca-cert","sslcertlocation": "/etc/keystore/client.pem","sslkeylocation": "/etc/keystore/client.key","sslkeypassword": "{{ .Values.kafka.ssl.password }}","kafka_admin_url":"{{ include "cem.services.kafkaadmin" . }}"}, "logging": {"useStdout": true}}'
            resources: {}
            terminationMessagePath: "/dev/termination-log"
            imagePullPolicy: IfNotPresent
            securityContext:
              privileged: false
              readOnlyRootFilesystem: false
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 1001
              capabilities:
                drop:
                - ALL
          restartPolicy: Never
