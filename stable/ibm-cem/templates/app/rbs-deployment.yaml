{{/*********************************************************** {COPYRIGHT-TOP} ****
* Licensed Materials - Property of IBM
*
* "Restricted Materials of IBM"
*
*  5737-H89, 5737-H64
*
* Â© Copyright IBM Corp. 2015, 2018  All Rights Reserved.
*
* US Government Users Restricted Rights - Use, duplication, or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
********************************************************* {COPYRIGHT-END} ****/}}
{{- $compName := "rba-rbs" -}}
{{- include "sch.config.init" (list . "cem.sch.chart.config.values") -}}
{{- $deploymentName := include "sch.names.fullCompName" (list . $compName) -}}
{{- $rbsTlsTemplateName := include "sch.names.volumeClaimTemplateName" (list . "tls" $deploymentName) -}}
{{- $rootData := fromYaml (include "root.data" .) -}}
{{- $rootMetering := $rootData.metering -}}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
    origin: helm-cem
spec:
  replicas: {{ .Values.rba.rbs.clusterSize }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ include "sch.names.appName" (list .) | quote }}
      component: {{ $compName | quote }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
        origin: helm-cem
      annotations:
{{- include "sch.metadata.annotations.metering" (list . $rootMetering) | indent 8 }}
    spec:
{{ include "ingress-host-alias" . | indent 6 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- if .Values.arch }}
                  - {{ .Values.arch }}
                {{- else }}
                  - {{ template "arch" . }}
                {{- end }}
      initContainers:
      - name: waitforcouchdb
        image: "{{ .Values.global.image.repository }}/hdm-icp-rba-rbs:{{ .Values.commonimages.rba.rbs.image.tag }}"
        command: ["sh", "-c", "i=1;until getent hosts {{ template "releasename" . }}-couchdb.{{ .Release.Namespace }}.svc; do echo waiting for couchdb $i;i=$((i+1)); sleep 2; done;"]
      - name: waitforkafka
        image: "{{ .Values.global.image.repository }}/hdm-icp-rba-rbs:{{ .Values.commonimages.rba.rbs.image.tag }}"
        command: ["sh", "-c", "i=1;until [ `getent hosts {{ template "releasename" . }}-kafka.{{ .Release.Namespace }}.svc | wc -l` -gt 0 ]; do echo waiting for kafka $i;i=$((i+1)); sleep 10; done;"]
      containers:
      - name: rba-rbs
        image: "{{ .Values.global.image.repository }}/hdm-icp-rba-rbs:{{ .Values.commonimages.rba.rbs.image.tag }}"
        imagePullPolicy: IfNotPresent
        args:
        - npm
        - start
        ports:
        - containerPort: 3005
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 3005
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
        readinessProbe:
          tcpSocket:
            port: 3005
          initialDelaySeconds: 20
          periodSeconds: 30
        resources:
{{ include "ibmcemprod.comp.size.data" (list . "rbs" "resources") | indent 10 }}
        env:
        - name: LICENSE
          value: {{ .Values.license | default "not accepted" }}
        - name: RBA_RBS_CEMFEEDBACK_URL
          value: {{ include "cem.services.incidentprocessor" . }}/api/incidents/v1
        - name: RBA_RBS_CEMUIPROXYPREFIX
          value: '/{{ .Values.global.ingress.prefix }}cemui/proxy/rba'
        - name: RBA_RBS_MAIL_NOTIFICATION_CEMTYPE
          value: '{{ .Values.email.type }}'
{{ if eq .Values.email.type "smtp" }}
        - name: RBA_RBS_MAIL_NOTIFICATION_HOST
          value: '{{ .Values.email.smtphost }}'
        - name: RBA_RBS_MAIL_NOTIFICATION_PORT
          value: '{{ .Values.email.smtpport }}'
        - name: RBA_RBS_MAIL_NOTIFICATION_REQUIRE_TLS
          value: 'true'
        - name: RBA_RBS_MAIL_NOTIFICATION_USER
          valueFrom:
            secretKeyRef:
              name: '{{ template "releasename" . }}-cem-email-cred-secret'
              key: smtpuser
        - name: RBA_RBS_MAIL_NOTIFICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: '{{ template "releasename" . }}-cem-email-cred-secret'
              key: smtppassword
        - name: RBA_RBS_MAIL_NOTIFICATION_FROM
          value: '{{ .Values.email.mail }}'
{{ end }}
        - name: RBA_RBS_KAFKA_BROKERS
          value: '{{ include "cem.services.kafkabrokers" . }}'
        - name: RBA_RBS_KAFKA_USERNAME
          value: '{{ .Values.kafka.client.username }}'
        - name: RBA_RBS_KAFKA_PASSWORD
          value: '{{ .Values.kafka.client.password }}'
        - name: RBA_RBS_KAFKA_SSL_ENABLED
          value: '{{ .Values.kafka.ssl.enabled }}'
        - name: RBA_RBS_KAFKA_CONSUMER_TOPIC
          value: 'incidents'
        - name: RBA_RBS_KAFKA_CONSUMER_GROUPID
          value: 'rba'
        - name: RBA_RBS_KAFKA_CONSUMER_CLIENTID
          value: 'RBA'
        - name: VCAP_APP_HOST
          value: {{ template "releasename" . }}-rba-rbs.{{ .Release.Namespace }}.svc
        - name: RBA_DEPLOYMODE
          value:  'icp-cem'
        - name: RBA_RUNBOOKSERVICE_EXTERNAL_HOST
          value: {{ include "cem.service.host" (list . "cem.services.rba") }}
        - name: RBA_RUNBOOKSERVICE_EXTERNAL_PROTOCOL
          value: {{ include "cem.service.protocol" (list . "cem.services.rba") }}
        - name: RBA_RUNBOOKSERVICE_INTERNAL_PROTOCOL
          value: http
        - name: RBA_DATABASE_CLUSTER_ENABLED
          value: 'true'
        - name: RBA_DATABASE_CLUSTER_PROTOCOL
          value: {{ include "cem.service.protocol" (list . "cem.services.couchdb") }}
        - name: RBA_DATABASE_CLUSTER_HOST
          value: {{ include "cem.service.host" (list . "cem.services.couchdb") }}
        - name: RBA_DATABASE_CLUSTER_PORT
          value: {{ include "cem.service.port" (list . "cem.services.couchdb") | quote }}
        - name: RBA_DATABASE_CLUSTER_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-{{ .Values.couchdb.secretName }}
              key: username
        - name: RBA_DATABASE_CLUSTER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-{{ .Values.couchdb.secretName }}
              key: password
        - name: RBA_DATABASE_CLUSTER_DBNAMEPREFIX
          value: 'icp'
        - name: RBA_RBS_USERGROUPSERVICE_PROTOCOL
          value: {{ include "cem.service.protocol" (list . "cem.services.cemusers") }}
        - name: RBA_RBS_USERGROUPSERVICE_HOST
          value: {{ include "cem.service.host" (list . "cem.services.cemusers") }}
        - name: RBA_RBS_USERGROUPSERVICE_PORT
          value: {{ include "cem.service.port" (list . "cem.services.cemusers") | quote }}
        - name: RBA_RBS_USERGROUPSERVICE_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-cem-cemusers-cred-secret
              key: username
        - name: RBA_RBS_USERGROUPSERVICE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-cem-cemusers-cred-secret
              key: password
        - name: RBA_DEVOPS_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-rba-devops-secret
              key: username
        - name: RBA_DEVOPS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-rba-devops-secret
              key: password
        - name: RBA_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "releasename" . }}-rba-jwt-secret
              key: secret
        - name: RBA_AUTOMATIONSERVICE_EXTERNAL_HOST
          value: {{ include "cem.service.host" (list . "cem.services.rbaas") }}
        - name: RBA_AUTOMATIONSERVICE_EXTERNAL_PROTOCOL
          value: {{ include "cem.service.protocol" (list . "cem.services.rbaas") }}
        - name: RBA_AUTOMATIONSERVICE_EXTERNAL_PORT
          value: {{ include "cem.service.port" (list . "cem.services.rbaas") | quote }}
        - name: INGRESS_PREFIX
          value: '{{ .Values.global.ingress.prefix }}'
        - name: INGRESS_DOMAIN
          value: '{{ .Values.global.ingress.domain }}'
      restartPolicy: Always
      securityContext:
        runAsUser: 1000
