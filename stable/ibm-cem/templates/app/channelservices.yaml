{{/*********************************************************** {COPYRIGHT-TOP} ****
* Licensed Materials - Property of IBM
*
* "Restricted Materials of IBM"
*
*  5737-H89, 5737-H64
*
* Â© Copyright IBM Corp. 2015, 2018  All Rights Reserved.
*
* US Government Users Restricted Rights - Use, duplication, or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
********************************************************* {COPYRIGHT-END} ****/}}
{{- $compName := "channelservices" -}}
{{- include "sch.config.init" (list . "cem.sch.chart.config.values") -}}
{{- $deploymentName := include "sch.names.fullCompName" (list . $compName) -}}
{{- $rootData := fromYaml (include "root.data" .) -}}
{{- $rootMetering := $rootData.metering -}}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $deploymentName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
    origin: helm-cem
spec:
  replicas: {{ .Values.channelservices.clusterSize }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: {{ include "sch.names.appName" (list .) | quote }}
      component: {{ $compName | quote }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
        origin: helm-cem
      annotations:
        checksum/email-cred-secret.yaml: {{ include (print $.Template.BasePath "/secrets/email-cred-secret.yaml") . | sha256sum }}
{{- include "sch.metadata.annotations.metering" (list . $rootMetering) | indent 8 }}
    spec:
{{ include "ingress-host-alias" . | indent 6 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- if .Values.arch }}
                  - {{ .Values.arch }}
                {{- else }}
                  - {{ template "arch" . }}
                {{- end }}
      containers:
      - name: channelservices
        image: "{{ .Values.global.image.repository }}/hdm-channelservices:{{ .Values.commonimages.channelservices.image.tag }}"
        ports:
        - containerPort: 3091
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: 3091
          initialDelaySeconds: 60
          timeoutSeconds: 60
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 3091
          initialDelaySeconds: 20
          timeoutSeconds: 60
        env:
        - name: LICENSE
          value: {{ .Values.license | default "not accepted" }}
        - name: PORT
          value: "3091"
        - name: ENV_ICP
          value: "1"
        - name: BASEURL
          value: '{{ include "cem.services.channelservices" . }}'
{{ include "cloudeventmanagement.channelservices.env" . | indent 8 }}
        - name: VCAP_APPLICATION
          value: '{}'
        - name: INGRESS_PREFIX
          value: '{{ .Values.global.ingress.prefix }}'
        - name: INGRESS_DOMAIN
          value: '{{ .Values.global.ingress.domain }}'
        resources:
{{ include "ibmcemprod.comp.size.data" (list . "channelservices" "resources") | indent 10 }}
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsUser: 1000
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
