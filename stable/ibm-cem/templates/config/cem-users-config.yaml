{{/*********************************************************** {COPYRIGHT-TOP} ****
* Licensed Materials - Property of IBM
*
* © Copyright IBM Corporation 2018, 2019.
*
* US Government Users Restricted Rights - Use, duplication, or
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
********************************************************* {COPYRIGHT-END} ****/}}

{{- $compName := "cem-users" -}}
{{- include "sch.config.init" (list . "cem.sch.chart.config.values") -}}
{{- $configMapName := include "sch.names.fullCompName" (list . $compName) -}}
kind: ConfigMap
metadata:
  name: {{ $configMapName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "sch.metadata.labels.standard" (list .) | indent 4 }}
    origin: helm-cem
apiVersion: v1
data:
  oidcPayload.json: |-
    {
      "token_endpoint_auth_method":"client_secret_basic",
      "client_id": "${client_id}",
      "client_secret": "${client_secret}",
      "scope":"openid profile email",
      "grant_types":[
        "authorization_code",
        "client_credentials",
        "password",
        "implicit",
        "refresh_token",
        "urn:ietf:params:oauth:grant-type:jwt-bearer"
      ],
      "response_types":[
        "code",
        "token",
        "id_token token"
      ],
      "application_type":"web",
      "subject_type":"public",
      "post_logout_redirect_uris":[
        "https://{{ .Values.global.masterIP }}:{{ .Values.global.masterPort }}/console/logout"
      ],
      "preauthorized_scope":"openid profile email general",
      "introspect_tokens":true,
      "trusted_uri_prefixes":[
        "https://{{ .Values.global.masterIP }}:{{ .Values.global.masterPort }}"
      ],
      "redirect_uris":[
         "https://{{ .Values.global.masterIP }}:{{ .Values.global.masterPort }}/auth/liberty/callback",
         {{- if eq .Values.global.ingress.port 443.0 }}
         "https://{{ .Values.global.ingress.domain }}/{{ .Values.global.ingress.prefix }}",
         "https://{{ .Values.global.ingress.domain }}/{{ .Values.global.ingress.prefix }}users/api/authprovider/v1/icp/return",
         {{- end }}
         "https://{{ .Values.global.ingress.domain }}:{{ .Values.global.ingress.port }}/{{ .Values.global.ingress.prefix }}",
         "https://{{ .Values.global.ingress.domain }}:{{ .Values.global.ingress.port }}/{{ .Values.global.ingress.prefix }}users/api/authprovider/v1/icp/return"
      ]
    }
  oidc_reg.sh: |-
    #!/bin/bash

    #validate no: of args
    if [[ "$1" == "?" ]]; then
      echo "USAGE: oidc_reg.sh { OIDC_CREDENTIALS }"
      echo
      echo "Run as cluster admin from your master node to register credentials for Cloud App Management."
      echo
      exit 1
    else
      echo "Registering IBM Cloud Event Management identity ..."
    fi

    OIDC_CREDENTIALS="$1"
    OIDC_CREDENTIALS="$(base64 --decode <<< $OIDC_CREDENTIALS)"
    if [ -z "$OIDC_CREDENTIALS" ] ; then
       echo "✖ Error: OIDC_CREDENTIALS not valid!" >&2;
       echo
       exit 1
    fi

    echo

    #replace variables in OIDC_PAYLOAD and write to a temp file
    sed -e "s/\${client_id}/$AUTH_ICP_CLIENT_ID/" -e "s/\${client_secret}/$AUTH_ICP_CLIENT_SECRET/" /etc/oidc/oidcPayload.json > /tmp/OIDC_PAYLOAD_TEMP

    #Check registration
    echo "Checking registration..."
    REG_CHECK_RESULT="$(curl -k -X GET -u oauthadmin:$OIDC_CREDENTIALS -H "Content-Type: application/json" https://icp-management-ingress.kube-system:{{ .Values.global.masterPort }}/oidc/endpoint/OP/registration/$AUTH_ICP_CLIENT_ID)"

    echo
    #echo REG_CHECK_RESULT:
    #echo $REG_CHECK_RESULT
    #echo

    RETVAL=1

    if [[ $REG_CHECK_RESULT = *"access_denied"* ]]; then
      echo "✖ Authentication failed, must be an admin"
      echo
    fi

    if [[ $REG_CHECK_RESULT = *"client_id_issued_at"* ]]; then
      echo "✔ Client exists..."
      #Update registration
      echo "Updating registration..."
      RESPCODE=`curl --silent --output /dev/null --write-out %{http_code} -k -X PUT -u oauthadmin:$OIDC_CREDENTIALS -H "Content-Type: application/json" --data @/tmp/OIDC_PAYLOAD_TEMP https://icp-management-ingress.kube-system:{{ .Values.global.masterPort }}/oidc/endpoint/OP/registration/$AUTH_ICP_CLIENT_ID`
      echo
      if [ "$RESPCODE" = "200" ]; then
        RETVAL=0
      else
        echo "Unable to perform client registration with response code of $RESPCODE"
      fi
    fi

    if [[ $REG_CHECK_RESULT = *"invalid_client"* ]]; then
      echo "✖ Client does not exist..."
      #Create registration
      echo "Registering client..."
      RESPCODE=`curl --silent --output /dev/null --write-out %{http_code} -k -X POST -u oauthadmin:$OIDC_CREDENTIALS -H "Content-Type: application/json" --data @/tmp/OIDC_PAYLOAD_TEMP https://icp-management-ingress.kube-system:{{ .Values.global.masterPort }}/oidc/endpoint/OP/registration`
      echo
      if [ "$RESPCODE" = "201" ]; then
        RETVAL=0
      else
        echo "Unable to perform client registration with response code of $RESPCODE"
      fi
    fi

    #Cleanup - delete the temp payload file with variables replaced
    trap "{ rm -f /tmp/OIDC_PAYLOAD_TEMP; }" EXIT

    echo
    echo Done.
    exit $RETVAL
