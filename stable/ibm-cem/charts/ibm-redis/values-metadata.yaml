###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

## Metadata for Redis HA configuration
## This metadata is used to augment the value.yaml to drive ICP UI for configuration of the Helm chart installation

## Arch metadata
arch:
  # Type 1
  # Targeting in .arch.__metadata makes it a hard requirement to run on a
  # given platform
  __metadata:
    label: "Architecture scheduling preferences"
    description: "Targets a specific OS to use for the worker node."
    options: 
    - label: 'AMD64 platforms'
      value: 'amd64'
    - label: 'Power 64 LE platforms'
      value: 'ppc64le'
  # Type 2
  # Providing multiple architecture options and a range of degrees of
  # preference for each allows for the finest degree of control over
  # which systems are scheduled for your worker nodes
  ppc64le:
    __metadata:
      label: "Architecture preference for target worker node"
      description: "Scheduling priority for using the PowerPC 64-bit LE architecture for worker nodes."
      options:
      - label: '0 - Do not use'
        value: '0 - Do not use'
      - label: '1 - Least preferred'
        value: '1 - Least preferred'
      - label: '2 - No Preference'
        value: '2 - No Preference'
      - label: '3 - Most preferred'
        value: '3 - Most preferred'
# Type 3
# If amd64 in this example was the only architecture specified, and it is set
# to max priority, and .arch.__metadata does not contain targeting information,
# then the chart will always try to schedule allocation of amd64 worker nodes,
# but will fall back to other architectures if amd64 is unavailable.
  amd64:
    __metadata:
      label: "Architecture preference for target worker node"
      description: "Scheduling priority for using the Intel 64-bit architecture for worker nodes."
      options:
      - label: '3 - Most preferred'
        value: '3 - Most preferred'

## Image configuration metadata
image:
  __metadata:
    label: "Redis Docker Image"
    name: "Redis"
    description: "Redis Docker Image Configuration"
  name:
    __metadata:
      name: "name"
      label: "Redis image name"
      description: "Docker image to be pulled for Redis."
      type: "string"
      immutable: false
      required: true
  tag:
    __metadata:
      name: "tag"
      label: "Image tag"
      description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
      type: "string"
      immutable: false
      required: true
  pullPolicy:
    __metadata:
      name: "imagePullPolicy"
      label: "redis Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      options:
      - label: "IfNotPresent"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"

creds:
  __metadata:
    label: "Creds image name"
    name: "Creds"
    description: "Creds Docker Image Configuration"
  image:
    name:
      __metadata:
        name: "name"
        label: "Creds image name"
        description: "Docker image to be pulled for creds."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "tag"
        label: "Image tag"
        description: "A tag is a label applied to a image in a repository. Tags are how various images in a repository are distinguished from each other."
        type: "string"
        immutable: false
        required: true

    pullPolicy:
      __metadata:
        name: "imagePullPolicy"
        label: "redis Docker image pull policy"
        description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
        type: "string"
        immutable: false
        required: true
        options:
        - label: "IfNotPresent"
          value: "IfNotPresent"
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"

global:
  __metadata:
    label: "Global configuration"
    name: "global"
    description: "Configurations applied globally within this chart"
  image:
    repository:
      __metadata:
        name: "repository"
        label: "Global image repository"
        description: "Docker registry to pull all the images from."
        type: "string"
        immutable: false
        required: true
    pullSecret:
      __metadata:
        name: "pullSecret"
        label: "Image pull secret"
        description: "Image pull secret to be used globally for all images"
        type: "string"
        immutable: false
        required: false
  environmentSize:
    __metadata:
      label: "Environment size"
      description: "Controls resource sizing. Size0 is a minimal spec for evaluation purposes. Use 'custom' to set sizing in values.yaml"
      type: "string"
      options:
        - label: "size0"
          value: "size0"
        - label: "size1"
          value: "size1"
        - label: "custom"
          value: "custom"
  persistence:
    enabled:
      __metadata:
        label: "Enable persistence storage for the redis server"
        description: "Select this checkbox to store redis server data on a persistent volume so that the data is preserved if the pod is stopped."
        type: "boolean"
    supplementalGroups:
      __metadata:
        label: "Supplemental Groups"
        description: "Provide the gid of the volumes as list (required for NFS)."
        type: "string" ### because of a backwards compatibility bug, the type *must* be string.
    useDynamicProvisioning:
      __metadata:
        name: "enabled"
        label: "Use dynamic provisioning"
        description: "Select this checkbox to allow the cluster to automatically provision new storage resource and create PersistentVolume objects."
        type: "boolean"
        immutable: false
        required: true
  sch:
    enabled:
      __metadata:
        name: "sch subchart"
        label: "ibm-sch subchart is used"
        description: "Set to false only is upstream chart provides ibm-sch chart"
        type: "boolean"
        hidden: false


affinity: 
  __metadata:
    label: "Affinity"
    description: "JSON Format."
    type: "string"
    required: false

affinityRedis: 
  __metadata:
    label: "Affinity for Redis server statefulset"
    description: "Affinity settings influencing only Redis server statefulset. JSON Format."
    type: "string"
    required: false

replicas:
  __metadata:
    label: "Cluster configuration"
    description: "Number of pod replicas for the satatefulsets"
  servers:
    __metadata:
      name: "servers"
      label: "Server replicas"
      description: "Number of server replicas to deploy. Defaults to 3"
      type: "number"
      immutable: false
      required: true
  sentinels:
    __metadata:
      name: "sentinels"
      label: "Sentinels replicas"
      description: "Number of sentinel replicas to deploy. Defaults to 3"
      type: "number"
      immutable: false
      required: true

auth:
  __metadata:
    label: "Authentication"
    description: "Authentication for Redis"
  authSecretName:
    __metadata:
      name: "Secret Name"
      label: "Redis Auth Secret Name"
      description: "Secret that has the redis password. If not provided, a secret with random password will be generated"
      type: "string"
      immutable: false
      required: false

cachemode:
  __metadata:
    name: "cachemode"
    label: "cache mode"
    description: "yes - to enable redis in cache mode, no - to enable redis in storage mode"
    type: "string"
    immutable: false
    required: true

maxmemory:
  __metadata:
    name: "maxmemory"
    label: "Maximum memory"
    description: "In Bytes, the amount maximum memory to be used for cache mode, default - 100mb"
    type: "string"
    immutable: false
    required: true

maxmemoryPolicy:
  __metadata:
    name: "maxmemoryPolicy"
    label: "Maximum memory Policy"
    description: "The eviction policy to be used in cache mode, default: allkeys-lru"
    type: "string"
    immutable: false
    required: true

#configuration parameters
appendonly:
  __metadata:
    name: "appendonly"
    label: "AOF"
    description: "no - to turn off AOF, AOF need to be turned off when the data needs to be restored in redis, yes - to turn on AOF"
    type: "string"
    immutable: false
    required: true

timeout:
  __metadata:
    name: "timeout"
    label: "Connection timeout in seconds"
    description: "Close the connection after a client is idle for N seconds (0 to disable)"
    type: "number"
    immutable: false
    required: true

tcpKeepAlive:
  __metadata:
    name: "tcpKeepAlive"
    label: "Tcp Keep Alive"
    description: "Send TCP ACKs to clients every N seconds in absence of communication, default: 300"
    type: "number"
    immutable: false
    required: true

luaTimeLimit:
  __metadata:
    name: "luaTimeLimit"
    label: "Lua Time Limit"
    description: "Max execution time of a Lua script in milliseconds, default: 5000"
    type: "number"
    immutable: false
    required: true

slowlogLogSlowerThan:
  __metadata:
    name: "slowlogLogSlowerThan"
    label: "Slowlog Log Slower Than"
    description: "The execution time, in microseconds, that commands must exceed in order to get logged in the slowlog, default: 10000"
    type: "number"
    immutable: false
    required: true

slowlogMaxLen:
  __metadata:
    name: "slowlogMaxLen"
    label: "Slowlog Max Length"
    description: "default 120, The maximum length of the slow log"
    type: "number"
    immutable: false
    required: true

persistence:
  __metadata:
    label: "Persistent Volume configuration"
    description: "Persistent Volumes helps retain the data when pod restarts"

  accessMode:
    __metadata:
      name: "accessMode"
      label: "Persistent Volume Access Mode"
      description: "The mode in which persistent volume should be accessed"
      immutable: false
      required: true
      options:
        - label: "ReadWriteOnce"
          value: "ReadWriteOnce"
#        - label: "ReadOnlyMany"
#          value: "ReadOnlyMany"
        - label: "ReadWriteMany"
          value: "ReadWriteMany"

  storageClassName:
    __metadata:
      name: "storageClassName"
      label: "Storage Class Name"
      description: "The name of StorageClass to be used to create persistent volume claim"
      type: "string"
      immutable: false

  size:
    __metadata:
      name: "size"
      label: "PV Storage Size"
      description: "Storage Size for persistent volume to be created"
      type: "string"
      immutable: false
      required: true

dataPVC:
  __metadata:
    label: "Persistent Volume Claim Configuration"
    description: "Configures created Persistent Volume Claims and how they bind to Persistent Volumes"

  name:
    __metadata:
      label: "The prefix of PVC."
      description: "The prefix of the created Persistent Volume Claims. The defaults to data"
      type: "string"
      required: false

  selector:
    # label - label that the PV should have to be boundable to created PVCs
    label:
      __metadata:
        label: "Label of Persistent Volume"
        description: "If useDynamicProvisioning is disabled, this specifies labels that needs to have the Persistent Volumes to be used. Defaults to null"
        type: "string"
        required: false
            # value - value of the label that the PV should have to be boundable to created PVCs
    value:
      __metadata:
        label: "Value of Persistent Volume label"
        description: "Specifies value assigned to the label that needs to have the Persistent Volumes to be used. Defaults to null"
        type: "string"
        required: false

master:
  __metadata:
    label: "Master node configuration"
    description: "Liveness and Readiness probe config for Redis Servers"
  livenessProbe:
    enabled:
      __metadata:
        name: "enabled"
        label: "Liveness probe enabled"
        description: "Enable master node liveness probes"
        type: "boolean"
        immutable: false
        required: true
    initialDelaySeconds:
      __metadata:
        name: "initialDelaySeconds"
        label: "Liveness probe initial delay seconds"
        description: "Number of seconds after the container has started before the probe is initiated."
        type: "number"
        immutable: false
        required: true
    periodSeconds:
      __metadata:
        name: "periodSeconds"
        label: "Liveness probe period seconds"
        description: "How often (in seconds) to perform the probe."
        type: "number"
        immutable: false
        required: true
    timeoutSeconds:
      __metadata:
        name: "timeoutSeconds"
        label: "Liveness probe timeout seconds"
        description: "Number of seconds after which the probe times out."
        type: "number"
        immutable: false
        required: true
    successThreshold:
      __metadata:
        name: "successThreshold"
        label: "Liveness probe success threshold"
        description: "Minimum consecutive successes for the probe to be considered successful after having failed."
        type: "number"
        immutable: false
        required: true
    failureThreshold:
      __metadata:
        name: "failureThreshold"
        label: "Liveness probe failure threshold"
        description: "Number of failures to accept before giving up and marking the pod as Unready."
        type: "number"
        immutable: false
        required: true
  readinessProbe:
    enabled:
      __metadata:
        name: "enabled"
        label: "Readiness probe enabled"
        description: "Enable master node readiness probes"
        type: "boolean"
        immutable: false
        required: true
    initialDelaySeconds:
      __metadata:
        name: "initialDelaySeconds"
        label: "Readiness probe initial delay seconds"
        description: "Number of seconds after the container has started before the probe is initiated."
        type: "number"
        immutable: false
        required: true
    periodSeconds:
      __metadata:
        name: "periodSeconds"
        label: "Readiness probe period seconds"
        description: "How often (in seconds) to perform the probe."
        type: "number"
        immutable: false
        required: true
    timeoutSeconds:
      __metadata:
        name: "timeoutSeconds"
        label: "Readiness probe timeout seconds"
        description: "Number of seconds after which the probe times out."
        type: "number"
        immutable: false
        required: true
    successThreshold:
      __metadata:
        name: "successThreshold"
        label: "Readiness probe success threshold"
        description: "Minimum consecutive successes for the probe to be considered successful after having failed."
        type: "number"
        immutable: false
        required: true
    failureThreshold:
      __metadata:
        name: "failureThreshold"
        label: "Readiness probe failure threshold"
        description: "Number of failures to accept before giving up and restarting the."
        type: "number"
        immutable: false
        required: true

sentinel:
  __metadata:
    label: "Sentinel node configuration"
    description: "Liveness and Readiness probe config for Redis Sentinel"
  livenessProbe:
    enabled:
      __metadata:
        name: "enabled"
        label: "Liveness probe enabled"
        description: "Enable sentinel node liveness probes"
        type: "boolean"
        immutable: false
        required: true
    initialDelaySeconds:
      __metadata:
        name: "initialDelaySeconds"
        label: "Liveness probe initial delay seconds"
        description: "Number of seconds after the container has started before the probe is initiated."
        type: "number"
        immutable: false
        required: true
    periodSeconds:
      __metadata:
        name: "periodSeconds"
        label: "Liveness probe period seconds"
        description: "How often (in seconds) to perform the probe."
        type: "number"
        immutable: false
        required: true
    timeoutSeconds:
      __metadata:
        name: "timeoutSeconds"
        label: "Liveness probe timeout seconds"
        description: "Number of seconds after which the probe times out."
        type: "number"
        immutable: false
        required: true
    successThreshold:
      __metadata:
        name: "successThreshold"
        label: "Liveness probe success threshold"
        description: "Minimum consecutive successes for the probe to be considered successful after having failed."
        type: "number"
        immutable: false
        required: true
    failureThreshold:
      __metadata:
        name: "failureThreshold"
        label: "Liveness probe failure threshold"
        description: "Number of failures to accept before giving up and marking the pod as Unready."
        type: "number"
        immutable: false
        required: true
  readinessProbe:
    enabled:
      __metadata:
        name: "enabled"
        label: "Readiness probe enabled"
        description: "Enable sentinel node readiness probes"
        type: "boolean"
        immutable: false
        required: true
    initialDelaySeconds:
      __metadata:
        name: "initialDelaySeconds"
        label: "Readiness probe initial delay seconds"
        description: "Number of seconds after the container has started before the probe is initiated."
        type: "number"
        immutable: false
        required: true
    periodSeconds:
      __metadata:
        name: "periodSeconds"
        label: "Readiness probe period seconds"
        description: "How often (in seconds) to perform the probe."
        type: "number"
        immutable: false
        required: true
    timeoutSeconds:
      __metadata:
        name: "timeoutSeconds"
        label: "Readiness probe timeout seconds"
        description: "Number of seconds after which the probe times out."
        type: "number"
        immutable: false
        required: true
    successThreshold:
      __metadata:
        name: "successThreshold"
        label: "Readiness probe success threshold"
        description: "Minimum consecutive successes for the probe to be considered successful after having failed."
        type: "number"
        immutable: false
        required: true
    failureThreshold:
      __metadata:
        name: "failureThreshold"
        label: "Readiness probe failure threshold"
        description: "Number of failures to accept before giving up and restarting the."
        type: "number"
        immutable: false
        required: true

serverService:
  __metadata:
    label: "Service configuration"
    description: "Redis kubernetes Service"
  type:
    __metadata:
      name: "type"
      label: "Type"
      description: "Type of service. Select 'LoadBalancer' to enable access from the VPC"
      type: "string"
      immutable: false
      required: true
      options:
        - label: "ClusterIP"
          value: "ClusterIP"
        - label: "LoadBalancer"
          value: "LoadBalancer"

rbac:
  __metadata:
    label: "RBAC roles and bindings"
    description: "Role Based Access Control"
  create:
    __metadata:
      name: "create"
      label: "Create"
      description: "Create RBAC roles and bindings"
      type: "boolean"
      immutable: false
      required: true

serviceAccount:
  __metadata:
    label: "Service account"
    description: "Service Account Creation/Mapping"
  create:
    __metadata:
      name: "create"
      label: "Create"
      description: "Create a ServiceAccount"
      type: "boolean"
      immutable: false
      required: true
  name:
    __metadata:
      name: "name"
      label: "Name"
      description: "ServiceAccount name"
      type: "string"
      immutable: false
      required: false

## Resource requests and limits configuration metadata
resources:
  __metadata:
    label: "Resource quotas"
    description: "Resource quotos for redis server and redis sentinel"
  server:
    requests:
      cpu:
        __metadata:
          label: "CPU request"
          description: "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core)."
          type: "string"
          required: true
      memory:
        __metadata:
          label: "Memory request"
          description: "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
          type: "string"
          required: true
    limits:
      cpu:
        __metadata:
          label: "CPU limit"
          description: "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core)."
          type: "string"
          required: true
      memory:
        __metadata:
          label: "Memory limit"
          description: "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
          type: "string"
          required: true
  sentinel:
    requests:
      cpu:
        __metadata:
          label: "CPU request"
          description: "The minimum required CPU core. Specify integers, fractions (e.g. 0.5), or millicore values(e.g. 100m, where 100m is equivalent to .1 core)."
          type: "string"
          required: true
      memory:
        __metadata:
          label: "Memory request"
          description: "The minimum memory in bytes. Specify integers with one of these suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
          type: "string"
          required: true
    limits:
      cpu:
        __metadata:
          label: "CPU limit"
          description: "The upper limit of CPU core. Specify integers, fractions (e.g. 0.5), or millicores values(e.g. 100m, where 100m is equivalent to .1 core)."
          type: "string"
          required: true
      memory:
        __metadata:
          label: "Memory limit"
          description: "The memory upper limit in bytes. Specify integers with suffixes: E, P, T, G, M, K, or power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki."
          type: "string"
          required: true

redisPodSecurityContext:
  __metadata:
    name: "redisPodSecurityContext"
    label: "Pod level Security Context for redis server/sentinel statefulsets"
    description: "Pod Security Context to the redis server/sentinel pods in yaml format"
    type: "string"
    required: false
    multiline: true

redisContainerSecurityContext:
  __metadata:
    name: "redisContainerSecurityContext"
    label: "Container level Security Context for redis server/sentinel statefulsets"
    description: "Container Security Context to the redis server/sentinel pods in yaml format"
    type: "string"
    required: false
    multiline: true
