###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################

# Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
#   0 - Do not use
#   1 - Least preferred
#   2 - No preference
#   3 - Most preferred
arch:
  amd64: "2 - No preference"
  ppc64le: "2 - No preference"

image:
  name: "opencontent-redis-3"
  tag: "1.0.1"
  pullPolicy: "IfNotPresent"

creds:
  image:
    name: "release-master/opencontent-common-utils"
    tag: "1.1.2"
    #1.1.2-ppc64le
    pullPolicy: "IfNotPresent"

global:
  environmentSize: "custom"
  image:
    repository: ""
    pullSecret: ""
  persistence:
    enabled: false
    supplementalGroups: []  # this is required for NFS storage
      # - 1001              # - provide the gid of the volumes as list
      # - 1002
    # useDynamicProvisioning - if enabled the persistence.storageClassName volumes will be dynamicaly created (if the storage class can be created automatically).
    #  If disabled either dataPVC.selectot.label should be specify and then the PVC will bound to precreated PV based on labels or persistence.storageClassName should be empty and then cluster admin has to bound the PVC to existing PV manually
    useDynamicProvisioning: true
  sch:
    # global.sch.enabled - Specifies if the ibm-sch chart should be used as sub-chart. If set to false, a compatible version of sch chart should be provided by umbrella chart.
    enabled: true

affinity: {}

# affinityRedis - Affinities for Redis stateful set. Overrides the generated affinities if provided.
#  Supports templated values like "{{- incluede "umbrella-chart.ibm-redis.affinities" . -}}"
#  Usage: e.g., generated podAntiAffinity, ...
affinityRedis: {}

replicas:
  servers: 2
  sentinels: 3

##redis password
auth:
  authSecretName: ""

cachemode: "no"
#yes - to enable redis cache mode
#no - to enable redis storage mode
maxmemory: "100mb"
#<bytes>
maxmemoryPolicy:  "allkeys-lru"
#allkeys-lru,

#configuration parameters
appendonly: "yes"
# no - to turn off AOF, AOF need to be turned off when the data needs to be restored in redis.
# yes - to turn on AOF
timeout: 0
#default 0 (Close the connection after a client is idle for N seconds (0 to disable)).

tcpKeepAlive: 300
#default 300 (Send TCP ACKs to clients every N seconds in absence of communication).

luaTimeLimit: 5000
#default 5000 (Max execution time of a Lua script in milliseconds).

slowlogLogSlowerThan: 10000
#default 10000 (The execution time, in microseconds, that commands must exceed in order to get logged in the slowlog).

slowlogMaxLen: 120
#default 120 (The maximum length of the slow log).

persistence:
  ## Persistent Volume Access Mode.
  ##
  accessMode: ReadWriteOnce

  ## Persistant Volume Storage Class Name
  ## Default value is the default storage class configured by the cluster admin
  storageClassName: ""

  ## Persistent Volume Storage Size.
  ##
  size: 2Gi

dataPVC:
  # name - name (prefix) of the created PVC
  name: "data"

  # selector - if you not using dynamic provisioning, you can use selectors to refine the binding process. You cannot specify a selector if your using dynamic provisioning.
  selector:
    # label - label that the PV should have to be boundable to created PVCs
    label: ""
    # value - value of the label that the PV should have to be boundable to created PVCs
    value: ""


##
## Redis Master parameters
##

master:
  ## Redis Master Liveness Probe
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  ## Redis Master Readiness Probe
  readinessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3

##
## Redis Sentinel parameters
##
sentinel:
  ## Redis Master Liveness Probe
  livenessProbe:
    enabled: true
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5

  ## Redis Master Readiness Probe
  readinessProbe:
    enabled: true
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3

serverService:
  type: ClusterIP  # [ClusterIP|LoadBalancer]

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  server:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 700Mi
      cpu: 100m
  sentinel:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 100m

redisPodSecurityContext: |
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

redisContainerSecurityContext: |
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
