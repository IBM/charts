{{- include "sch.config.init" (list . "ibm-spectrum-symphony.sch.chart.config.values") -}}
{{- $fullName := include "sch.names.fullName" (list .) -}}
{{- $role := "master" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-{{ $role }}
  labels:
    role: {{ $role }}
{{ toYaml .sch.chart.labels | indent 4 }}
spec:
  progressDeadlineSeconds: 900
  replicas: 1
  selector:
    matchLabels:
      role: {{ $role }}
{{ toYaml .sch.chart.labels | indent 6 }}
  template:
    metadata:
      labels:
        role: {{ $role }}
{{ toYaml .sch.chart.labels | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
{{ toYaml .sch.chart.specSecurity | indent 6 }}
      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
      hostname: master
      serviceAccountName: {{ template "ibm-spectrum-symphony.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
{{ toYaml .sch.chart.image | indent 10 }}
          resources:
{{ toYaml .Values.master.resources | indent 12 }}
          env:
{{ toYaml .sch.chart.env | indent 12 }}
            - name: GENERATE_SSL_CERT
              value: "Y"
          securityContext:
{{ toYaml .sch.chart.containerSecurity  | indent 12 }}
          volumeMounts:
            - name: persistdir
              mountPath: /shared
            {{- if .Values.cluster.scriptsSecretName }}
            - name: config
              mountPath: /opt/ibm/spectrumcomputing/scripts/config
              readOnly: true
            {{- end }}
            {{- if .Values.master.entitlementSecretName }}
            - name: entitlement
              mountPath: /opt/ibm/spectrumcomputing/scripts/secret
              readOnly: true
            {{- end }}
          livenessProbe:
            exec:
              command: [ "/bin/bash", "-c", "</dev/tcp/localhost/17869"]
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 30
          readinessProbe:
            exec:
              command: [ "/bin/bash", "-c", "</dev/tcp/localhost/17869"]
            initialDelaySeconds: 90
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 30
      volumes:
        - name: persistdir
          persistentVolumeClaim:
          {{- if .Values.cluster.pvc.existingClaimName }}
            claimName: {{ .Values.cluster.pvc.existingClaimName }}
          {{- else }}
            claimName: {{ $fullName }}
          {{- end }}
        {{- if .Values.master.entitlementSecretName }}
        - name: entitlement
          secret:
            secretName: {{ .Values.master.entitlementSecretName }}
        {{- end }}
        {{- if .Values.cluster.scriptsSecretName }}
        - name: config
          secret:
            secretName: {{ .Values.cluster.scriptsSecretName }}
        {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
