###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018,2019. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
{{- if semverCompare ">=1.11.1" .Capabilities.KubeVersion.GitVersion }}
apiVersion: apps/v1
{{- else if .Capabilities.APIVersions.Has "apps/v1beta2" }}
apiVersion: apps/v1beta2
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
{{- if or .Values.ddl.enabled .Values.paiDistributed.mode }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- if or .Values.ddl.enabled .Values.paiDistributed.mode }}
  serviceName: {{ template "fullname" . }}
  podManagementPolicy: Parallel
  {{- end }}
  replicas: {{ template "workerCount" . }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}

      annotations:
        productName: "WML CE"
        productID: "5765-PAI"
        productVersion: "1.6.1"

    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 2051
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "amd64"
                - "ppc64le"
        {{- if or .Values.ddl.enabled .Values.paiDistributed.mode }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "fullname" . }}
            topologyKey: "kubernetes.io/hostname"
        {{- end }}
      {{- if .Values.resources.gputype }}
      nodeSelector:
        gputype: {{ .Values.resources.gputype }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        {{- if .Values.global.image.secretName }}
        imagePullSecrets:
        - name: {{ .Values.global.image.secretName }}
        {{- end }}
        command: [ "/bin/bash", "-c" ]
        {{- define "makeArgs" }}
        {{- if or .Values.ddl.enabled .Values.paiDistributed.mode }}
        {{- print "sudo -E bash /wmlce/config/setup_ssh.sh;" }}
        {{- end }}
        {{- if (ne .Values.command "") }}
        {{- printf "host=$(hostname);[ ${host: -2} = '-0' ] && %s;" .Values.command }}
        {{- end }}
        {{- end }}
        args: [ "{{ template "makeArgs" . }} tini; tail -f /dev/null;" ]
        securityContext:
          privileged: false
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        {{- if or .Values.ddl.useInfiniBand .Values.paiDistributed.useInfiniBand }}
            add: ["AUDIT_WRITE", "CHOWN", "FOWNER", "SETUID", "SETGID", "SYS_CHROOT", "DAC_OVERRIDE", "NET_BIND_SERVICE", "IPC_LOCK", "SYS_PTRACE", "SYS_RESOURCE"]
        {{- else }}
            add:
            - AUDIT_WRITE
            - CHOWN
            - FOWNER
            - SETUID
            - SETGID
            - SYS_CHROOT
            - DAC_OVERRIDE
            - NET_BIND_SERVICE
        {{- end }}
        ports:
        {{- if .Values.service.port }}
        - name: service
          containerPort: {{ .Values.service.port }}
        {{- end }}
        {{- if .Values.ddl.enabled }}
        - containerPort: {{ .Values.ddl.sshPort }}
        {{- else if .Values.paiDistributed.mode }}
        - containerPort: {{ .Values.paiDistributed.sshPort }}
        {{- end }}
        env:
        {{- if (eq .Values.license "accept") }}
        - name: LICENSE
          value: "yes"
        {{- end }}
        {{- if .Values.ddl.enabled }}
        - name: SSH_PORT
          value: "{{ .Values.ddl.sshPort }}"
        {{- else if .Values.paiDistributed.mode }}
        - name: SSH_PORT
          value: "{{ .Values.paiDistributed.sshPort }}"
        {{- end }}
        {{- if or .Values.ddl.useInfiniBand .Values.paiDistributed.useInfiniBand }}
        - name: INFINIBAND
          value: "1"
        {{- end }}
        {{- if .Values.resources.gpu }}
        livenessProbe:
          exec:
            command:
            - bash
            - -c
            - nvidia-smi
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - nvidia-smi
          initialDelaySeconds: 30
          periodSeconds: 60
        {{- end }}
        resources:
          limits:
          {{- if or .Values.ddl.useInfiniBand .Values.paiDistributed.useInfiniBand }}
            tencent.com/rdma: 1 # requesting 1 RDMA device
          {{- end }}
          {{- if .Values.ddl.enabled }}
            {{- if and (eq (.Capabilities.KubeVersion.Major|int) 1) (lt (.Capabilities.KubeVersion.Minor|int) 11) }}
            alpha.kubernetes.io/nvidia-gpu: {{ .Values.ddl.gpuPerHost }}
            {{- else }}
            nvidia.com/gpu: {{ .Values.ddl.gpuPerHost }}
            {{- end }}
          {{- else if .Values.paiDistributed.mode }}
            {{- if and (eq (.Capabilities.KubeVersion.Major|int) 1) (lt (.Capabilities.KubeVersion.Minor|int) 11) }}
            alpha.kubernetes.io/nvidia-gpu: {{ .Values.paiDistributed.gpuPerHost }}
            {{- else }}
            nvidia.com/gpu: {{ .Values.paiDistributed.gpuPerHost }}
            {{- end }}
          {{- else }}
            {{- if and (eq (.Capabilities.KubeVersion.Major|int) 1) (lt (.Capabilities.KubeVersion.Minor|int) 11) }}
            alpha.kubernetes.io/nvidia-gpu: {{ .Values.resources.gpu }}
            {{- else }}
            nvidia.com/gpu: {{ .Values.resources.gpu }}
            {{- end }}
          {{- end }}
        volumeMounts:
        - mountPath: /dev/shm
          name: dshm
        - name: "{{ template "fullname" . }}-{{ .Values.wmlcePVC.name }}"
          mountPath: /wmlce/data
        {{- if or .Values.ddl.enabled .Values.paiDistributed.mode }}
        - name: ssh-volume
          readOnly: true
          mountPath: "/wmlce/sshkeys"
        - name: cfgmap-volume
          mountPath: "/wmlce/config"
        {{- end }}
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
      - name: "{{ template "fullname" . }}-{{ .Values.wmlcePVC.name }}"
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
        {{- if .Values.wmlcePVC.existingClaimName }}
          claimName: {{ .Values.wmlcePVC.existingClaimName }}
        {{- else }}
          claimName: {{ template "fullname" . }}-{{ .Values.wmlcePVC.name }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.ddl.enabled }}
      - name: ssh-volume
        secret:
          secretName: {{ .Values.ddl.sshKeySecret }}
      - name: cfgmap-volume
        configMap:
          name: {{ template "fullname" . }}
      dnsConfig:
        searches:
          - {{ template "fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
      {{- else if .Values.paiDistributed.mode }}
      - name: ssh-volume
        secret:
          secretName: {{ .Values.paiDistributed.sshKeySecret }}
      - name: cfgmap-volume
        configMap:
          name: {{ template "fullname" . }}
      dnsConfig:
        searches:
          - {{ template "fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local
      {{- end }}
      {{- if or .Values.ddl.useInfiniBand .Values.paiDistributed.useInfiniBand }}
      hostPID: true
      hostIPC: true
      {{- end }}
      {{- if or .Values.ddl.useHostNetwork .Values.paiDistributed.useHostNetwork }}
      hostNetwork: true
      hostIPC: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
