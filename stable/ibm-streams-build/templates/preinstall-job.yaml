# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# Licensed Materials - Property of IBM                             
# 5724-Y95                                                         
# (C) Copyright IBM Corp.  2018, 2019    All Rights Reserved.      
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  
# end_generated_IBM_copyright_prolog
{{- include "build.checkValues" . }}
{{ if ( .Values.build.persistentVolumeClaim ) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-build-preinstall"
  labels:
{{- include "build.defaultLabels" . | indent 4 }}
    app.kubernetes.io/name: "{{ .Release.Name }}-build-preinstall"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "0"
    {{- if .Values.debug }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- else }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    {{- end }}
    
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{ .Release.Name }}-build-preinstall"
      labels:
{{- include "build.defaultLabels" . | indent 8 }}
{{- include "build.serviceability" . | indent 8 }}
        app.kubernetes.io/name: "{{ .Release.Name }}-build-preinstall"
      annotations:
{{- include "build.metering" . | indent 8 }}

    spec:
      affinity:
{{- include "build.nodeaffinity" . | indent 8 }}
 
      restartPolicy: Never
      
      {{- if .Values.build.serviceAccount }}
      serviceAccountName: {{ .Values.build.serviceAccount }}
      {{- end }}
      
{{- include "build.podGeneralSecurityPolicies" . | indent 6 }}         
      securityContext:
{{- include "build.streamsinstallPodSecurityContext" . | indent 8 }}
        
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets }}
      {{- end }}
      
      volumes:
        - name: streams-state-volume
          persistentVolumeClaim:
            claimName: {{ template "build.persistentVolumeClaimName" . }}
            
      containers:
      - name: pre-install
        {{- if .Values.image.prefix }}
        image: "{{ .Values.image.prefix }}/{{ .Values.image.build }}:{{ .Values.image.buildTag }}"
        {{- else }}
        image: "{{ .Values.image.build }}:{{ .Values.image.buildTag }}"
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
        
        workingDir: {{ include "build.installdir" . }}
        
        env:
{{- include "build.basicEnv" . | indent 10 }}
        
        securityContext:
{{- include "build.containerSecurityContext" . | indent 10 }}
            
        command: [ "$(STREAMS_INSTALL)/system/impl/bin/rmbuildpool.sh" ]
        
        volumeMounts:
          - name: streams-state-volume
            mountPath: {{ template "build.stateMountPath" . }}
            
        resources:
          requests:
            cpu: 1
            memory: "1Gi"
          limits:
            cpu: 1
            memory: "1Gi"
{{- end }}            