# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# Licensed Materials - Property of IBM                             
# 5724-Y95                                                         
# (C) Copyright IBM Corp.  2018, 2019    All Rights Reserved.      
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  
# end_generated_IBM_copyright_prolog     
# debug specifies if debug is enabled for the helm install. Kubernetes jobs will be left on the system to aid in debug if set to true.
debug: false

# license specifies if you read the license agreement and agree to the terms. Set the license value to 'accept'. This value is required.
license: "not accepted"

build:
  # build.buildInactivityTimeout specifies the default build inactivity timeout in minutes.
  buildInactivityTimeout: 15

  # build.cpu specifies the minimum required amount of CPU core resources for the build service. Must be less than or equal to build.cpuLimit. This value is required.
  cpu: "1"

  # build.cpuLimit specifies the upper limit of CPU core resource for the build service. This value is required.
  cpuLimit: "2"

  # build.installAnaconda specifies to install anaconda on builder.streamsExtPvc. Valid values are: true, false.
  installAnaconda: "true"

  # build.installSpss specifies to install spps on builder.streamsExtPvc. Valid values are: true, false.
  installSpss: "true"

  # build.memory specifies the minimum required amount of memory for the build service. Must be less than or equal to build.memoryLimit. This value is required.
  memory: "1Gi"

  # build.memoryLimit specifies the upper limit for memory in bytes for the build service. This value is required.
  memoryLimit: "2Gi"

  # build.persistentStorageClassName specifies a storage class name to dynamically provision the storage for build related data. If you specify an existing persistent volume claim this value is ignored. You must specify this or build.persistentVolumeClaim.
  persistentStorageClassName:

  # build.persistentVolumeClaim specifies an existing persistent volume claim for storing build related data. You must specify this or build.persistentStorageClassName.
  persistentVolumeClaim:

  # build.persistentVolumeClaimSize specifies a size to dynamically provision the storage for build related data. If you specify an existing persistent volume claim this value is ignored.
  persistentVolumeClaimSize: "5Gi"

  # build.poolResourceWaitTimeout specifies the time in minutes to wait for a builder resource.
  poolResourceWaitTimeout: 2

  # build.poolSizeMaximum specifies the maximum number of builder resources.
  poolSizeMaximum: 5

  # build.poolSizeMinimum specifies the minimum number of builder resources.
  poolSizeMinimum: 1

  # build.securitySecret specifies the secret containing keystore and truststore files, passwords, and alias for the build service.
  securitySecret:

  # build.serviceAccount specifies the service account used for build pod. If specified, it must be granted permissions for required Kubernetes objects.  If not specified, one will be created with necessary role based access control objects.
  serviceAccount:

  # build.serviceExternalIPs specifies an array of external ip addresses for the Kubernetes service exposing the build service.
  serviceExternalIPs:

  # build.serviceNodePort specifies a node port value for the Kubernetes service exposing the build service.
  serviceNodePort:

  # build.serviceType specifies the type for the Kubernetes service exposing the build service. This value is required. Valid values are: ClusterIP, NodePort, LoadBalancer.
  serviceType: "ClusterIP"

  # build.sslOption specifies the default cryptographic protocol for the build service. Valid values are: SSL_TLS, SSL_TLSv2, TLSv1, TLSv1.1, TLSv1.2, none.
  sslOption: "TLSv1.2"

  # build.traceFileCount specifies the maximum number of files to save for the build service.
  traceFileCount: 3

  # build.traceFileSize specifies the maximum size, in kilobytes, for each trace file.
  traceFileSize: 5000

  # build.traceLevel specifies the default trace level to use for debugging problems with the build service. Valid values are: off, error, warn, info, debug, trace.
  traceLevel: "error"

builder:
  # builder.buildProcessingTimeout specifies the default build processing timeout in minutes.
  buildProcessingTimeout: 15

  # builder.buildProductVersion specifies the Streams product version to use for builds if not explicitly specified.
  buildProductVersion:

  # builder.cpu specifies the minimum required amount of CPU core resources for builder resources. Must be less than or equal to builder.cpuLimit. This value is required.
  cpu: "1"

  # builder.cpuLimit specifies the upper limit of CPU core resource for the builder resources. This value is required.
  cpuLimit: "10"

  # builder.memory specifies the minimum required amount of memory for builder resources. Must be less than or equal to builder.memoryLimit. This value is required.
  memory: "1Gi"

  # builder.memoryLimit specifies the upper limit for memory in bytes for the builder resources. This value is required.
  memoryLimit: "10Gi"

  # builder.persistentStorageClassName specifies a storage class name to dynamically provision the storage for storing toolkits that are not part of base images. If you specify an existing persistent volume claim this value is ignored.
  persistentStorageClassName:

  # builder.persistentVolumeClaim specifies an existing persistent volume claim for storing toolkits that are not part of base images.
  persistentVolumeClaim:

  # builder.persistentVolumeClaimSize specifies a size to dynamically provision the storage for toolkits that are not part of base images. If you specify an existing persistent volume claim this value is ignored.
  persistentVolumeClaimSize: "5Gi"

  # builder.serviceAccount specifies the service account used for builder pod. If specified, it must be granted permissions for required Kubernetes objects.  If not specified, one will be created with necessary role based access control objects.
  serviceAccount:

  # builder.streamsExtPvc specifies the persistent volume claim to be initialized with external libraries (i.e. anaconda).
  streamsExtPvc:

  # builder.streamsExtPvcStorageClass specifies the storage class used to create the persistent volume claim that will be initialized with external libraries (i.e. anaconda). Do not set this property if you wish to specify an existing persistent volume claim.
  streamsExtPvcStorageClass:

image:
  # image.anaconda specifies the image to configure for initializing the external libraries persistent volume claim with anaconda libraries. This value is required.
  anaconda: "streams-anaconda-install-el7"

  # image.anacondaTag specifies the tag portion of the anaconda image name. This value is required.
  anacondaTag: "5.2.0.0"

  # image.build specifies the image to configure for the build service. This value is required.
  build: "streams-build-el7"

  # image.buildTag specifies the tag portion of the build service image. This value is required.
  buildTag: "5.2.0.0"

  # image.builder specifies the image to configure for the builder resources. This value is required.
  builder: "streams-build-compile-el7"

  # image.builderTag specifies the tag portion of the builder image name. This value is required.
  builderTag: "5.2.0.0"

  # image.prefix specifies the repository for the docker images. If specified, this value will be pre-appended to the image names.
  prefix:

  # image.pullPolicy specifies the policy used to pull images from docker registry. Valid values are: Always, IfNotPresent.
  pullPolicy: "Always"

  # image.pullSecrets specifies the secret used to pull images from docker registry.
  pullSecrets:

  # image.spss specifies the image to configure for initializing the external libraries persistent volume claim with spss libraries. This value is required.
  spss: "streams-spss-install-el7"

  # image.spssTag specifies the tag portion of the spss image name. This value is required.
  spssTag: "5.2.0.0"

security:
  # security.ssoRealm specifies the IBM Streams single sign-on security realm. This value is required.
  ssoRealm:

  # security.ssoUrl specifies the URL of the IBM Streams single sign-on service. Format is https://<sso-release>-sso.<sso-namespace>:8446. This value is required.
  ssoUrl:
