# Â© Copyright IBM Corporation 2019
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Check license has been accepted
{{- if eq .Values.license "not accepted"}}
  {{ fail (cat "Configuration error: License has not been accepted ") }}
{{- end }}

# Ensure if a storage class name has been provided that persistence is set to true
{{- if .Values.dataPVC.storageClassName }}
  {{ if not .Values.persistence.enabled }}
    {{ fail (cat "Configuration error: Please ensure persistent storage is enabled, you have specified a storageClassName but not enabled persistence ") }}
  {{- end }}
{{- end }}

# Check contentServerURL is valid
{{- if .Values.contentServerURL }}
  {{- if not (regexMatch (`(?mi)^(http.*\?)`) .Values.contentServerURL) }}
    {{ fail (cat "Configuration error: Please ensure that you supply a valid contentServerURL:" .Values.contentServerURL) }}
  {{- end }}
{{- end }}

# Check that persistence is enabled
{{- if eq .Values.persistence.useDynamicProvisioning true  }}
  {{ if not .Values.persistence.enabled }}
    {{ fail (cat "Configuration error: If dynamic provisioning is enabled please enable persistence") }}
  {{- end }}
{{- end }}

# Check that a configuration secret exists if a keystore name has been provided
{{- if .Values.integrationServer.keystoreKeyNames }}
  {{- if not .Values.integrationServer.configurationSecret }}
    {{ fail (cat "Configuration error: You must supply a configuration secret if you have supplied a keystorename") }}
  {{- end}}
{{- end}}

# Check that a configuration secret exsists if a truststore certname has been provided
{{- if .Values.integrationServer.truststoreCertNames }}
  {{- if not .Values.integrationServer.configurationSecret}}
    {{ fail (cat "Configuration error: You must supply a configuration secret if you have supplied a truststore certname") }}
  {{- end}}
{{- end}}


