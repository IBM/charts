# Configuration relating to the docker image
image:
  repository: ibmcom/aspera-cli
  pullPolicy: Always
  secretName: null
  tag: latest

# CronJon configuration. By default running as a cron job is disabled.
cronjob:
  enabled: false
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid

# Job specific configurations.
job:
  backoffLimit: 2
  restartPolicy: Never

# Configurations relating to the IBM Aspera CLI.
# Required options will depend on which subcommand is used.
#
# Required by all subcommands:
#   - cli.direction
#   - cli.remoteHost
#   - cli.username
#   - cli.localPath
#   - cli.remotePath
#
# Required by non-AoC transfers (cli.subcommand != 'aoc'):
#   - cli.password
#
# Required by AoC transfers (cli.subcommand = 'aoc'):
#  - cli.aoc.org
#  - cli.aoc.workspace
#  - cli.aoc.secret
#  - cli.aoc.secret
#
#   For sending AoC packages, the following are required (in addition to base AoC requirements):
#     - cli.aoc.package.name
#     - cli.aoc.package.recipients
#     - cli.direction = 'send'
#
#   For downloading AoC packages, the following are required (in addition to base AoC requirements):
#     - cli.aoc.package.id
#     - cli.direction = 'get'
cli:
  subcommand: node
  direction: upload
  remoteHost: ''
  remotePort: ''
  username: ''
  passwordSecretName: ''
  localPath: ''
  remotePath: ''
  debugLevel: 2
  additionalOptions: ''
  aoc:
    org: ''
    workspace: ''
    secret: ''
    package:
      id: ''
      name: ''
      recipients: ''

arch:
  amd64: "3 - Most preferred"
  ppc64le: "0 - Do not use"
  s390x: "0 - Do not use"

# Pod resource requests and limits
resources:
  requests:
    memory: '1024Mi'
    cpu: '1'
  limits:
    memory: '2048Mi'
    cpu: '2'

# Specify which PersistentVolume and PersistentVolumeClaim should be used in the transfer
# Requirements:
#   download:
#     - write privileges
#     - free space >= size of data being downloaded
#   upload:
#     - ReadMany if the volume is being used by other pods
#
#  volume.mountPath provides a configurable mount point for the volume.
#  In most cases this won't need to be changed.
volume:
  name: ''
  existingClaimName: ''
  mountPath: /mount


