###############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
# Defines the collector deployment
###############################################################################
{{ if eq .Values.license "accept" -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{ $namePrefix := .sch.chart.components.collector.deployment.name -}}
{{ $name := include "sch.names.fullCompName" (list . $namePrefix ) -}}
{{ $compName := .sch.chart.components.collector.compName -}}
{{ $labels := include "sch.metadata.labels.standard" (list . $compName (dict "serviceSelector" $namePrefix)) -}}
# Service Account
{{ $serviceAccount := .sch.chart.components.collector.serviceAccount.name -}}
{{ $serviceAccountName := include "sch.names.fullCompName" (list . $serviceAccount ) -}}
{{ $serviceNamePrefix := .sch.chart.components.collector.service.name -}}
{{ $serviceName := include "sch.names.fullCompName" (list . $serviceNamePrefix) -}}
# import port definitions
{{- include "sch.config.init" (list . "ports.sch.chart.config.values") | trim -}}
{{ $ports := .sch.config.ports }}
# Default user for security context
{{ $defaultUser := .sch.securityContext.defaultUser -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $name }}"
  labels:
{{ $labels | indent 4 }}
    node: "0"
spec:
  replicas: 1
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      serviceSelector: {{ $namePrefix | quote }}
  template:
    metadata:
      namespace: {{ include "restrict.namespace" (list . .Release.Namespace) }}
      labels:
{{ $labels | indent 8 }}
        node: "0"
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '{{ $ports.prometheus.collector }}'
{{ include "metering" (list . ) | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ $defaultUser }}
      volumes:
      {{- include "license.accept.ref" . | indent 6 }}
      affinity:
{{ include "customNodeaffinity"  (list .) | indent 8 }}
      containers:
        - name: collector
          image: {{ include "eventstreams.image" (list . "eventstreams-collector" .Values.global.image.imageTags.collectorTag "true") | quote }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ $defaultUser }}
            capabilities:
              drop:
              - ALL
          readinessProbe:
            httpGet:
              path: /health
              port: {{ $ports.collector.api }}
              httpHeaders:
                - name: Accept
                  value: '*/*'
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $ports.collector.api }}
              httpHeaders:
                - name: Accept
                  value: '*/*'
            initialDelaySeconds: 20
            periodSeconds: 20
          env:
            {{- include "license.accept.env.ref" . | indent 10 }}
            - name: TRACE_LEVEL
              value: "0"
            - name: API_PORT
              value: {{ $ports.collector.api | quote }}
            - name: METRICS_PORT
              value: {{ $ports.prometheus.collector | quote }}
{{- end -}}
