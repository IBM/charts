# Â© Copyright IBM Corporation 2018
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{- $compName := .sch.chart.components.orderer.compName }}
{{- $labels := include "sch.metadata.labels.standard" (list . $compName) }}

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{.Release.Name}}-orderer-delsecret"
  labels:
{{ $labels | indent 4 }}
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: "{{.Release.Name}}"
      labels:
{{ $labels | indent 8 }}
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.app.arch }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      restartPolicy: Never
      {{- if .Values.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecret }}
      {{- end }}
      containers:
      - name: pre-delete
        {{- if .Values.global.multiarch }}
        image: "{{ .Values.image.initimage }}:{{ .Values.image.inittag }}"
        {{- else }}
        image: "{{ .Values.image.initimage }}-{{ .Values.app.arch }}:{{ .Values.image.inittag }}"
        {{- end }}
        command: ["sh","-c", "kubectl delete secret ${MSP_SECRET_NAME} --ignore-not-found"]
        env:
        - name: MSP_SECRET_NAME
          value: {{ .Release.Name }}-orderer-mspsecret
        securityContext:	
          privileged: false
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:	
            drop:
            - ALL
