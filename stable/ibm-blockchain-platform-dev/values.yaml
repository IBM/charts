# Â© Copyright IBM Corporation 2018
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for ibm-blockchain-platform.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  serviceAccountName: default
  productName: "IBM Blockchain Platform Community Edition"
  productID: "IBMBlockchainPlatformCommunityEdition_100_ilan_00000"
  multiarch: true

ca:
  enabled: false
  name: "SampleOrgCA"
  app:
    arch: "amd64"

  db:
    type: sqlite
    #mysql:
    #  dbServerHostname: ""

  persistence: 
    enabled: true
    useDynamicProvisioning: true

  #storageClassName, selector, volumeName should be passed into
  dataPVC: 
    #storageClassName can be defined and null
    storageClassName: ""
    existingClaimName: ""
    selector: 
      label: ""
      value: "" 
    accessMode: ReadWriteMany
    size: 2Gi

  image:
    repository: "ibmcom/ibp-fabric-ca"
    tag: 1.2.1

  service:
    type: NodePort

  ca: 
    caAdminSecret: ""

  ## Configure resource requests and limits
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi

  tlsca:
    name: tlsca
    cname: tlsca-common

  proxyIP: 127.0.0.1

orderer:
  enabled: false
  app:
    arch: "amd64"
    config: ""
    mspsecret: ""
  persistence:
    enabled: true
    useDynamicProvisioning: true
  image:
    repository: "ibmcom/ibp-fabric-orderer"
    tag: 1.2.1
    initimage: ibmcom/ibp-init
    inittag: 1.2.1
  ord:
    type: "solo"
    orgName: ""
    mspID: ""
  pvc:
    storageClassName: ""
    existingClaimName: ""
    selector: 
      label: ""
      value: "" 
    accessMode: ReadWriteMany
    size: 8Gi
  service:
    # type can be: ClusterIP, NodePort, LoadBalancer, ExternalName
    type: "NodePort"
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2
      memory: 2Gi

peer:
  enabled: false
  app:
    arch: amd64
    image: ibmcom/ibp-fabric-peer
    tag: 1.2.1
    dindimage: ibmcom/ibp-dind
    dindtag: 1.2.1
    initimage: ibmcom/ibp-init
    inittag: 1.2.1
    config: ""
    secret: ""
  env:
    #networkid: ""
    orgMSP: ""
  service:
    type: "NodePort"
  peerinfo:
    stateDb: leveldb
    couchdbImage: ibmcom/ibp-fabric-couchdb
    couchdbTag: 0.4.10
  persistence:
    enabled: true
    useDynamicProvisioning: true

  dataPVC:
    name: "my-data-pvc"
    storageClassName: ""
    existingClaimName: ""
    selector:
      label: ""
      value: ""
    accessMode: "ReadWriteMany"
    size: 8Gi

  statedbPVC:
    name: "statedb-pvc"
    storageClassName: ""
    existingClaimName: ""
    selector:
      label: ""
      value: ""
    accessMode: "ReadWriteMany"
    size: 8Gi
  persistenceDb:
    enabled: true
    useDynamicProvisioning: true

  peerResources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi
      
  couchdbResources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 2
      memory: 4Gi
