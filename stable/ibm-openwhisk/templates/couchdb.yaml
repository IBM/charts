# Licensed to the Apache Software Foundation (ASF) under one or more contributor
# license agreements; and to You under the Apache License, Version 2.0.

{{ if not .Values.db.external }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.name | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ .Values.db.name | quote }}
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: {{ template "fullname" . }}
spec:
  selector:
    name: {{ .Values.db.name | quote }}
  ports:
    - port: {{ .Values.db.port }}
      name: couchdb

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.db.name | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    name: {{ .Values.db.name | quote }}
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}"
    app: {{ template "fullname" . }}
spec:
  replicas: {{ .Values.db.replicaCount }}
  template:
    metadata:
      labels:
        name: {{ .Values.db.name | quote }}
        heritage: {{.Release.Service | quote }}
        release: {{.Release.Name | quote }}
        chart: "{{.Chart.Name}}"
        app: {{ template "fullname" . }}
      annotations:
        productName: OpenWhisk
        productVersion: 9.9.9
        productID: none
    spec:
      restartPolicy: {{ .Values.db.restartPolicy }}

      {{- if .Values.affinity.enabled }}
      affinity:
{{ include "nodeaffinity" . | indent 6 }}
{{ include "affinity.selfAntiAffinity" ( .Values.db.name ) | indent 8 }}
      {{- end }}

      containers:
      - name: {{ .Values.db.name | quote }}
        imagePullPolicy: {{ .Values.db.imagePullPolicy | quote }}
        image: {{ .Values.db.image | quote }}
        ports:
        - name: couchdb
          containerPort: {{ .Values.db.port }}
        env:
        - name: "COUCHDB_USER"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_username
        - name: "COUCHDB_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: db.auth
              key: db_password
        - name: "NODENAME"
          value: "couchdb0"
        readinessProbe:
          tcpSocket:
            port: {{ .Values.db.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.db.port }}
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 10
        {{- if .Values.db.persistence.enabled }}
        volumeMounts:
          - name: database-storage
            mountPath: /opt/couchdb/data
        {{- end }}
      {{- if .Values.db.persistence.enabled }}
      volumes:
        - name: database-storage
          persistentVolumeClaim:
            claimName: {{ .Values.db.persistence.pvcName | quote }}
      {{- end }}

{{- if .Values.db.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.db.persistence.pvcName | quote }}
  namespace: {{ .Release.Namespace | quote }}
spec:
  storageClassName: {{ .Values.db.persistence.storageClass }}
  accessModes:
    - {{ .Values.db.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.db.persistence.size }}
{{- end }}

{{ end }}
