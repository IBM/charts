###############################################################################
{{- include "sch.config.init" (list . "sch.chart.config.values") }}
{{- include "statefulNames.globals" . }}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .statefulNames.globals.statefulSetName | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  selector:
    matchLabels:
      release: "{{ .Release.Name }}"
  serviceName: {{ .statefulNames.globals.statefulSetName | quote }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
      {{ if .Values.rbac.install }}
      serviceAccountName: {{ .statefulNames.globals.statefulSetName | quote }}
      {{ end }}
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{/* Prefer horizontal scaling */}}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ include "sch.names.appName" (list .) }}
                - key: release
                  operator: In
                  values:
                  - {{ .Release.Name | quote }}
              topologyKey: kubernetes.io/hostname
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 5701
        livenessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /hazelcast/health/node-state
            port: 5701
          initialDelaySeconds: 30
          timeoutSeconds: 5
          periodSeconds: 10
        env:
        - name: MIN_HEAP_SIZE
          value: {{ .Values.heap.minHeapSize }}
        - name: MAX_HEAP_SIZE
          value: {{ .Values.heap.maxHeapSize }}
        - name: JAVA_OPTS
          value: "-Dhazelcast.http.healthcheck.enabled=true -Dhazelcast.config=/data/hazelcast/hazelcast.xml -DserviceName={{ .statefulNames.globals.statefulSetName }} -Dnamespace={{ .Release.Namespace }} {{ .Values.javaOpts }}"
        volumeMounts:
          - name: {{ .statefulNames.globals.statefulSetName | quote }}
            mountPath: /data/hazelcast
        resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: {{ .statefulNames.globals.statefulSetName | quote }}
        configMap:
          name: {{ .statefulNames.globals.statefulSetName | quote }}
          defaultMode: 0744
