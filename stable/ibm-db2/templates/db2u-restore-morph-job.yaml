kind: Job
apiVersion: batch/v1
metadata:
  name: "{{ template "fullname" . }}-db2u-restore-morph-job"
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    icpdsupport/serviceInstanceId: "{{ template "zenServiceInstanceId" . }}"
    icpdsupport/app: {{ template "fullname" . }}
  annotations:
    {{- include "db2oltp.annotations" . | indent 4 }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        icpdsupport/serviceInstanceId: "{{ template "zenServiceInstanceId" . }}"
        icpdsupport/app: {{ template "fullname" . }}
      annotations:
        {{- include "db2oltp.annotations" .  | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "tolerations" . | indent 6 }}
      {{- include "nonroot.securityContext" . | indent 6 }}
      initContainers:
      - name: condition-ready
        {{- if .Values.images.tools.image.tag }}
        image: "{{ .Values.images.tools.image.repository }}:{{ .Values.images.tools.image.tag }}{{ template "platform" . }}"
        {{- else }}
        image: "{{ .Values.images.tools.image.repository }}:{{ .Values.images.universalTag }}{{ template "platform" . }}"
        {{- end }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        {{- include "nonroot.containers.securityContext" . | indent 8 }}
        {{- if (eq "x86_64" .Values.arch) }}
        {{- include "jobs.resources" . | indent 8 }}
        {{- else }}
        {{- include "jobs.resources.ppc64le.low" . | indent 8 }}
        {{- end }}
        command: ['/bin/sh']
        args: ['-cx', '/tools/post-install/db2u_ready.sh --replicas {{ .Values.images.db2u.replicas }} --template {{ template "fullname" . }} --namespace {{ .Release.Namespace }} --dbType {{ .Values.global.dbType }}']
      containers:
      - name: restore-morph
        {{- if .Values.images.tools.image.tag }}
        image: "{{ .Values.images.tools.image.repository }}:{{ .Values.images.tools.image.tag }}{{ template "platform" . }}"
        {{- else }}
        image: "{{ .Values.images.tools.image.repository }}:{{ .Values.images.universalTag }}{{ template "platform" . }}"
        {{- end }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        {{- include "nonroot.containers.securityContext" . | indent 8 }}
        command:
          - "/bin/sh"
          - "-ec"
          - |
            DETERMINATION_FILE=/mnt/blumeta0/nodeslist
            CAT_NODE=$(head -1 $DETERMINATION_FILE)
            kubectl exec -it -n {{ .Release.Namespace }} ${CAT_NODE?} -- bash -c "su - db2inst1 -c \"/db2u/db2u_restore_morph.sh\""
            exit $?
        {{- if (eq "x86_64" .Values.arch) }}
        {{- include "jobs.resources" . | indent 8 }}
        {{- else }}
        {{- include "jobs.resources.ppc64le" . | indent 8 }}
        {{- end }}
        volumeMounts:
        - mountPath: /mnt/blumeta0
          {{- if .Values.storage.storageLocation.metaStorage.enabled }}
          name: {{ .Values.storage.storageLocation.metaStorage.volumeName }}
          {{- else }}
          name: {{ template "fullname" . }}-db2u-sqllib-shared
          {{- end }}
        - mountPath: /mnt/blumeta0/configmap/db2u
          name: {{ template "fullname" . }}-db2u-config-volume
      restartPolicy: Never
      serviceAccount: {{ default "default" .Values.global.serviceAccount }}
      volumes:
      {{- if .Values.storage.storageLocation.metaStorage.enabled }}
        {{- include "db2u.container.storage.metaStorage" . | indent 6 }}
      {{- else }}
      - name: {{ template "fullname" . }}-db2u-sqllib-shared
        persistentVolumeClaim:
          {{- if .Values.storage.existingClaimName }}
          claimName: {{ .Values.storage.existingClaimName }}
          {{- else }}
          claimName: {{ template "fullname" . }}-db2u-sqllib-shared
          {{- end }}
      {{- end }}
      - name: {{ template "fullname" . }}-db2u-config-volume
        configMap:
          name: {{ template "fullname" . }}-db2u-config
          items:
          - key: db2u-var
            path: db2u-var
