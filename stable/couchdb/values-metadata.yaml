## clusterSize is the initial size of the CouchDB cluster.

clusterSize:
  __metadata:
    label: "label for clusterSize"
    description: "This field has information about clusterSize"


## If allowAdminParty is enabled the cluster will start up without any database

## administrator account; i.e., all users will be granted administrative

## access. Otherwise, the system will look for a Secret called

## <ReleaseName>-couchdb containing `adminUsername`, `adminPassword` and

## `cookieAuthSecret` keys. See the `createAdminSecret` flag.

## ref: https://kubernetes.io/docs/concepts/configuration/secret/

allowAdminParty:
  __metadata:
    label: "label for allowAdminParty"
    description: "This field has information about allowAdminParty"


## If createAdminSecret is enabled a Secret called <ReleaseName>-couchdb will

## be created containing auto-generated credentials. Users who prefer to set

## these values themselves have a couple of options:

##

## 1) The `adminUsername`, `adminPassword`, and `cookieAuthSecret` can be

##    defined directly in the chart's values. Note that all of a chart's values

##    are currently stored in plaintext in a ConfigMap in the tiller namespace.

##

## 2) This flag can be disabled and a Secret with the required keys can be

##    created ahead of time.

createAdminSecret:
  __metadata:
    label: "label for createAdminSecret"
    description: "This field has information about createAdminSecret"


adminUsername:
  __metadata:
    label: "label for adminUsername"
    description: "This field has information about adminUsername"


# adminPassword: this_is_not_secure

# cookieAuthSecret: neither_is_this

## Use an alternate scheduler, e.g. "stork".

## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/

##

# schedulerName:

## The storage volume used by each Pod in the StatefulSet. If a

## persistentVolume is not enabled, the Pods will use `emptyDir` ephemeral

## local storage. Setting the storageClass attribute to "-" disables dynamic

## provisioning of Persistent Volumes; leaving it unset will invoke the default

## provisioner.

persistentVolume:
  __metadata:
    label: "label for persistentVolume"
    description: "This field has information about persistentVolume"


  enabled:
    __metadata:
      label: "label for enabled"
      description: "This field has information about enabled"


  accessModes:
    __metadata:
      label: "label for accessModes"
      description: "This field has information about accessModes"


  size:
    __metadata:
      label: "label for size"
      description: "This field has information about size"


  # storageClass: "-"

## The CouchDB image

image:
  __metadata:
    label: "label for image"
    description: "This field has information about image"


  repository:
    __metadata:
      label: "label for repository"
      description: "This field has information about repository"


  tag:
    __metadata:
      label: "label for tag"
      description: "This field has information about tag"


  pullPolicy:
    __metadata:
      label: "label for pullPolicy"
      description: "This field has information about pullPolicy"


## Experimental integration with Lucene-powered fulltext search

searchImage:
  __metadata:
    label: "label for searchImage"
    description: "This field has information about searchImage"


  repository:
    __metadata:
      label: "label for repository"
      description: "This field has information about repository"


  tag:
    __metadata:
      label: "label for tag"
      description: "This field has information about tag"


  pullPolicy:
    __metadata:
      label: "label for pullPolicy"
      description: "This field has information about pullPolicy"


## Flip this to flag to include the Search container in each Pod

enableSearch:
  __metadata:
    label: "label for enableSearch"
    description: "This field has information about enableSearch"


initImage:
  __metadata:
    label: "label for initImage"
    description: "This field has information about initImage"


  repository:
    __metadata:
      label: "label for repository"
      description: "This field has information about repository"


  tag:
    __metadata:
      label: "label for tag"
      description: "This field has information about tag"


  pullPolicy:
    __metadata:
      label: "label for pullPolicy"
      description: "This field has information about pullPolicy"


## CouchDB is happy to spin up cluster nodes in parallel, but if you encounter

## problems you can try setting podManagementPolicy to the StatefulSet default

## `OrderedReady`

podManagementPolicy:
  __metadata:
    label: "label for podManagementPolicy"
    description: "This field has information about podManagementPolicy"


## To better tolerate Node failures, we can prevent Kubernetes scheduler from

## assigning more than one Pod of CouchDB StatefulSet per Node using podAntiAffinity.

affinity:
  __metadata:
    label: "label for affinity"
    description: "This field has information about affinity"


  # podAntiAffinity:

  #   requiredDuringSchedulingIgnoredDuringExecution:

  #     - labelSelector:

  #         matchExpressions:

  #           - key: "app"

  #             operator: In

  #             values:

  #             - couchdb

  #       topologyKey: "kubernetes.io/hostname"

## A StatefulSet requires a headless Service to establish the stable network

## identities of the Pods, and that Service is created automatically by this

## chart without any additional configuration. The Service block below refers

## to a second Service that governs how clients connect to the CouchDB cluster.

service:
  __metadata:
    label: "label for service"
    description: "This field has information about service"


  # annotations:

  enabled:
    __metadata:
      label: "label for enabled"
      description: "This field has information about enabled"


  type:
    __metadata:
      label: "label for type"
      description: "This field has information about type"


  externalPort:
    __metadata:
      label: "label for externalPort"
      description: "This field has information about externalPort"


## An Ingress resource can provide name-based virtual hosting and TLS

## termination among other things for CouchDB deployments which are accessed

## from outside the Kubernetes cluster.

## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/

ingress:
  __metadata:
    label: "label for ingress"
    description: "This field has information about ingress"


  enabled:
    __metadata:
      label: "label for enabled"
      description: "This field has information about enabled"


  hosts:
    __metadata:
      label: "label for hosts"
      description: "This field has information about hosts"


  annotations:
    __metadata:
      label: "label for annotations"
      description: "This field has information about annotations"


    # kubernetes.io/ingress.class: nginx

    # kubernetes.io/tls-acme: "true"

  tls:
    __metadata:
      label: "label for tls"
      description: "This field has information about tls"


    # Secrets must be manually created in the namespace.

    # - secretName: chart-example-tls

    #   hosts:

    #     - chart-example.local

## Optional resource requests and limits for the CouchDB container

## ref: http://kubernetes.io/docs/user-guide/compute-resources/

resources:
  __metadata:
    label: "label for resources"
    description: "This field has information about resources"


  # requests:

  #  cpu: 100m

  #  memory: 128Mi

  # limits:

  #  cpu: 56

  #  memory: 256Gi

## erlangFlags is a map that is passed to the Erlang VM as flags using the

## ERL_FLAGS env. `name` and `setcookie` flags are minimally required to

## establish connectivity between cluster nodes.

## ref: http://erlang.org/doc/man/erl.html#init_flags

erlangFlags:
  __metadata:
    label: "label for erlangFlags"
    description: "This field has information about erlangFlags"


  name:
    __metadata:
      label: "label for name"
      description: "This field has information about name"


  setcookie:
    __metadata:
      label: "label for setcookie"
      description: "This field has information about setcookie"


## couchdbConfig will override default CouchDB configuration settings.

## The contents of this map are reformatted into a .ini file laid down

## by a ConfigMap object.

## ref: http://docs.couchdb.org/en/latest/config/index.html

couchdbConfig:
  __metadata:
    label: "label for couchdbConfig"
    description: "This field has information about couchdbConfig"


  # cluster:

  #   q: 8 # Create 8 shards for each database

  chttpd:
    __metadata:
      label: "label for chttpd"
      description: "This field has information about chttpd"


    bind_address:
      __metadata:
        label: "label for bind_address"
        description: "This field has information about bind_address"


    # chttpd.require_valid_user disables all the anonymous requests to the port

    # 5984 when is set to true.

    require_valid_user:
      __metadata:
        label: "label for require_valid_user"
        description: "This field has information about require_valid_user"


# Kubernetes local cluster domain.

# This is used to generate FQDNs for peers when joining the CouchDB cluster.

dns:
  __metadata:
    label: "label for dns"
    description: "This field has information about dns"


  clusterDomainSuffix:
    __metadata:
      label: "label for clusterDomainSuffix"
      description: "This field has information about clusterDomainSuffix"


