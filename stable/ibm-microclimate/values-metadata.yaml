# image parameters
global:
  __metadata:
    label: "Global"
    description: "Global configuration"
  additionalImagePullSecrets:
    __metadata:
      label: "Additional image pull secrets"
      description: "If installing into a non-default namespace, a yaml array of any additional image pull secrets required (other than microclimate-registry-secret)"
      required: false
      type: "string"
  helm:
    tlsSecretName:
      __metadata:
        label: "Helm Secret"
        description: "Name of secret containing Helm certificates - for ICP 2.1.0.2 this field should be left blank"
        type: "string"
        required: false
        immutable: false
  rbac:
    serviceAccountName:
      __metadata:
        label: "Service account name for Portal"
        description: "Name of a service account to use for Microclimate's Portal and File Watcher pods: used when deploying into a non-default namespace. If set to a non-default value, the service account will be created in the specified namespace."
        type: "string"
        required: false
        immutable: false

theia:
  __metadata:
    label: "Theia"
    description: "Configuration for microclimate-editor pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-theia image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-theia image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-theia"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-theia"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-theia"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-theia"
          type: "string"
          required: true

filewatcher:
  __metadata:
    label: "File-Watcher"
    description: "Configuration for microclimate-file-watcher pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-file-watcher image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-file-watcher image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-file-watcher"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-file-watcher"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-file-watcher"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-file-watcher"
          type: "string"
          required: true

portal:
  __metadata:
    label: "Portal"
    description: "Configuration for the main Microclimate pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-portal image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-portal image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-portal"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-portal"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-portal"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-portal"
          type: "string"
          required: true
  clock:
    tolerance: 
      __metadata:
        label: "Clock Tolerance"
        description: "The Open ID Connect clock tolerance"
        type: "string"
        required: true

beacon:
  __metadata:
    label: "Beacon"
    description: "Configuration for microclimate-beacon pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-beacon image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-beacon image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-beacon"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-beacon"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-beacon"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-beacon"
          type: "string"
          required: true

utils:
  __metadata:
    label: "Utils"
    description: "Configuration for Microclimate utils"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-utils image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-utils image tag"
      type: "string"
      required: true
  resources:
    __metadata:
      label: "Resource configuration"
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-utils"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-utils"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-utils"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-utils"
          type: "string"
          required: true

loadrunner:
  __metadata:
    label: "Loadrunner"
    description: "Configuration for loadrunner pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-loadrunner image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-loadrunner image tag"
      type: "string"
      required: true
  resources:
    __metadata:
      label: "Resource configuration"
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-loadrunner"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-loadrunner"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-loadrunner"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-loadrunner"
          type: "string"
          required: true


imagePullPolicy:
  __metadata:
    name: "Image Pull Policy"
    label: "Image Pull Policy"
    description: "Docker image pull policy for Microclimate images"
    type: "string"
    required: true
    options:
    - label: "Always"
      value: "Always"
    - label: "Never"
      value: "Never"
    - label: "IfNotPresent"
      value: "IfNotPresent"

devops:
  __metadata:
    label: "Devops"
    description: "Configuration for the microclimate-devops pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-devops image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-devops image tag"
      type: "string"
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Devops docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to Always"
      type: "string"
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-devops"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-devops"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-devops"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-devops"
          type: "string"
          required: true

hostName:
  __metadata:
    label: "Microclimate hostname"
    description: "Hostname used to access Microclimate via Kubernetes ingress e.g. microclimate.<icp proxy node address>.nip.io"
    type: "string"
    immutable: false
    required: true

persistence:
  __metadata:
    label: "Persistent Storage Configuration"
    description: "Configuration options for using persistent storage with Microclimate"
  enabled:
    __metadata:
      label: "Persistent Storage"
      description: "Enable/disable persistent storage - WARNING: Microclimate requires persistent storage enabled to function correctly. It is recommended to keep this enabled"
      type: "boolean"
      required: true
  existingClaimName:
    __metadata:
      label: "Existing PersistentVolumeClaim Name"
      description: "The name of an existing PersistentVolumeClaim to use for Microclimate - Must be left blank if `Dynamic Provisioning` is enabled "
      type: "string"
      required: false
  useDynamicProvisioning:
    __metadata:
      label: "Dynamic Provisioning"
      description: "Enable/disable dynamic provisioning - 'Existing PersistentVolumeClaim Name' must be left blank to use Dynamic Provisioning"
      type: "boolean"
      required: true
  size:
    __metadata:
      label: "Persistent storage size"
      description: "Size of persistent storage to provision"
      type: "string"
      required: false
  storageClassName:
    __metadata:
      label: "Persistent storage class"
      description: "Class of storage you want to use for dynamic provisioning - leaving this blank will use the default storage class"
      type: "string"
      required: false

ports:
  __metadata:
    label: "Microclimate Ports"
    description: "Configure the pods to be used by Microclimate"
  portal:
    __metadata:
      label: "Portal"
      description: "Port for the microclimate-portal container"
      type: "string"
      immutable: true
      required: true
  theia:
    __metadata:
      label: "Theia"
      description: "Port for the microclimate-theia container"
      type: "string"
      immutable: true
      required: true

arch:
  __metadata:
    label: "Architecture Affinity"
    description: "Configure node affinity for Microclimate - AMD currently only supported"
  amd64:
    __metadata:
      label: "amd64"
      description: "NodeAffinity for AMD64 architectures"
      type: string
      immutable: true
      required: true
  ppc64le:
    __metadata:
      label: "ppc64le"
      description: "NodeAffinity for PowerPC architectures - (Currently not supported, leave as 0)"
      type: string
      immutable: true
      required: true
  s390x:
    __metadata:
      label: "s390x"
      description: "NodeAffinity for IBM Z architectures - (Currently not supported, leave as 0)"
      type: string
      immutable: true
      required: true

jenkins:
  __metadata:
    label: "Jenkins Configuration"
    description: "Configuration options for Jenkins"
  rbac:
    __metadata:
      label: "Configure permissions the Jenkins and DevOps pods run with"
    serviceAccountName:
      __metadata:
        label: "Service account name"
        description: "Use a named service account for Jenkins and DevOps pods, used when deploying into a non-default namespace. If set to a non-default value, the service account will be created in the specified namespace."     
        type: string
        required: false
  Agent:
    Memory:
      __metadata:
        label: "Memory request"
        description: "Memory request for the Jenkins slave"
        type: string
        required: true
  Pipeline:
    Build:
      __metadata:
        label: "Build"
        description: "Build projects in the pipeline"
        type: boolean
        required: true
        immutable: false
    Deploy:
      __metadata:
        label: "Deploy"
        description: "Deploy projects in the pipeline"
        type: boolean
        required: true
        immutable: false
    Test:
      __metadata:
        label: "Test"
        description: "Test projects in the pipeline"
        type: "boolean"
        required: true
        immutable: false
    Debug:
      __metadata:
        label: "Debug"
        description: "Debug projects in the pipeline"
        type: "boolean"
        required: true
        immutable: false
    Registry:
      Url:
        __metadata:
          label: "Docker registry URL"
          description: "URL of Docker registry used for built images (including port)"
          type: "string"
          required: true
          immutable: false
      Secret:
        __metadata:
          label: "Docker registry secret"
          description: "Name of Kubernetes secret containing credentials to access Docker registry"
          type: "string"
          required: true
          immutable: false
    TargetNamespace:
      __metadata:
        label: "Target namespace"
        description: "Kubernetes namespace to which pipeline should deploy applications"
        type: "string"
        required: true
        immutable: false
    Template:
        RepositoryUrl:
          __metadata:
            label: "Jenkins library repository"
            description: "URL of Git repository containing Jenkins pipeline library"
            type: "string"
            required: true
            immutable: false
        Version:
          __metadata:
            label: "Jenkins library version"
            description: "Branch or tag to use in the Jenkins pipeline Git repository"
            type: "string"
            required: true
            immutable: false
  Master:
      JavaOpts:
        __metadata:
          label: "Java options for the Jenkins master"
          description: "Set default Java options for the Jenkins master process (e.g. specifying the heap size and any logging options)"
          type: "string"
          required: false
      CustomConfigMap:
        __metadata:
          label: "Custom configuration map"
          description: "You should leave this to true"
          type: "boolean"
          required: true
      ServiceType:
        __metadata:
          label: "Service type"
          description: "Type of service for Jenkins Kubernetes service"
          options:
          - label: "Cluster IP"
            value: "ClusterIP"
          - label: "Node Port"
            value: "NodePort"
          type: "string"
          immutable: false
          required: true
      HostName:
        __metadata:
          label: "Jenkins hostname"
          description: "Hostname used to access Jenkins via Kubernetes ingress e.g. jenkins.<icp proxy node address>.nip.io"
          type: "string"
          immutable: false
          required: true
      UseSecurity:
        __metadata:
          label: "Enable Jenkins security"
          description: "Set this if you want username/password authenication for Jenkins"
          type: "boolean"
          immutable: false
          required: true
      AdminUser:
        __metadata:
          label: "Jenkins admin username"
          description: "Username used for logging into Jenkins when security is enabled"
          type: "string"
          immutable: false
          required: false
      AdminPassword:
        __metadata:
          label: "Jenkins admin password"
          description: "Password used for logging into Jenkins when security is enabled"
          type: "string"
          immutable: false
          required: false
      HealthProbesLivenessTimeout:
        __metadata:
          label: "Liveness probe timeout"
          description: "Timeout for the liveness probe"
          type: "string"
          immutable: false
          required: false
      HealthProbeLivenessFailureThreshold:
        __metadata:
          label: "Liveness probe failure threshold"
          description: "Failure threshold for the liveness probe"
          type: "string"
          immutable: false
          required: false
      HealthProbesReadinessTimeout:
        __metadata:
          label: "Readiness probe timeout"
          description: "Timeout for the readiness probe"
          type: "string"
          immutable: false
          required: false
      # InstallPlugins:
      #    __metadata:
      #       label: "Jenkins plugin to install"
      #       description: "First option for adding an additional plugin to install"
      #       type: "string"
      #       immutable: false
      #       required: false
      # InstallPlugins.0:
      #   __metadata:
      #     label: "Jenkins plugin to install"
      #     description: "First option for adding an additional plugin to install"
      #     type: "string"
      #     immutable: false
      #     required: false
      # InstallPlugins.1:
      #   __metadata:
      #     label: "Jenkins plugin to install"
      #     description: "Second option for adding an additional plugin to install"
      #     type: "string"
      #     immutable: false
      #     required: false
      # InstallPlugins.2:
      #   __metadata:
      #     label: "Jenkins plugin to install"
      #     description: "Third option for adding an additional plugin to install"
      #     type: "string"
      #     immutable: false
      #     required: false
      # InstallPlugins.3:
      #   __metadata:
      #     label: "Jenkins plugin to install"
      #     description: "Fourth option for adding an additional plugin to install"
      #     type: "string"
      #     immutable: false
      #     required: false
      # InstallPlugins.4:
      #   __metadata:
      #     label: "Jenkins plugin to install"
      #     description: "Fifth option for adding an additional plugin to install"
      #     type: "string"
      #     immutable: false
      #     required: false
  Persistence:
    ExistingClaim:
      __metadata:
        label: "Existing PersistentVolumeClaim Name"
        description: "The name of an existing PersistentVolumeClaim for Jenkins to use - Leave blank to use Dynamic Provisioning"
        type: "string"
        immutable: false
        required: false
    StorageClass:
      __metadata:
        label: "Persistent storage class"
        description: "Class of storage you want to use for dynamic provisioning - leaving this blank will use the default storage class"
        type: "string"
        immutable: false
        required: false
