persistence:
  __metadata:
    label: "Persistent Storage Configuration"
    description: "Configuration options for using persistent storage with Microclimate"
  enabled:
    __metadata:
      label: "-"
      description: "--"
      type: "boolean"
      required: true
      hidden: true
  existingClaimName:
    __metadata:
      label: "Existing PersistentVolumeClaim Name"
      description: "The name of an existing PersistentVolumeClaim to use for Microclimate - Must be left blank if `Dynamic Provisioning` is enabled "
      type: "string"
      required: false
  useDynamicProvisioning:
    __metadata:
      label: "Dynamic Provisioning"
      description: "Enable/disable dynamic provisioning - 'Existing PersistentVolumeClaim Name' must be left blank to use Dynamic Provisioning"
      type: "boolean"
      required: true
  size:
    __metadata:
      label: "Persistent storage size"
      description: "Size of persistent storage to provision"
      type: "string"
      required: false
  storageClassName:
    __metadata:
      label: "Persistent storage class"
      description: "Class of storage you want to use for dynamic provisioning - leaving this blank will use the default storage class"
      type: "string"
      required: false

global:
  __metadata:
    label: "Global"
    description: "Global configuration"
  additionalImagePullSecrets:
    __metadata:
      label: "Additional image pull secrets"
      description: "If installing into a non-default namespace, a yaml array of any additional image pull secrets required (other than microclimate-registry-secret)"
      required: false
      type: "string"
  applyPodSecurityPolicy:
    __metadata:
      label: "Apply Pod Security Policy"
      description: "Automatically apply the ibm-anyuid-hostpath-psp policy when installing Microclimate"
      type: "boolean"
      required: false
      immutable: false
  runAsNonRoot:
    __metadata:
      label: "Enable runAsNonRoot"
      description: "Enforce the runAsNonRoot restriction for the Pods in Microclimate"
      type: "boolean"
      required: true
      hidden: true
      immutable: false
  runAsUser:
    __metadata:
      label: "Run As User"
      description: "Specify the UID to run as"
      type: "string"
      required: true
      hidden: true
      immutable: false
  useSecurityContext:
    __metadata:
      label: "Use Security Context"
      description: "Use the security contexts for Portal and Atrium. Set to false if installing on IBM Cloud Private 3.1.0."
      type: "boolean"
      required: true
      hidden: false
      immutable: false
  icpTarget:
    __metadata:
      label: "Target level of ICP"
      description: "The level of ICP Microclimate is being installed into. Set to 310 for IBM Cloud Private 3.1.0, 320 for IBM Cloud Private 3.2.0"
      type: "number"
      required: false
      hidden: false
      immutable: false
  helmHost:
    __metadata:
      label: "Helm tiller host"
      description: "Specify the Helm tiller hostname and nodeport, if required."
      type: "string"
      required: false
      immutable: false

  helm:
    tlsSecretName:
      __metadata:
        label: "Helm Secret"
        description: "Name of secret containing Helm certificates - for ICP 2.1.0.2 this field should be left blank"
        type: "string"
        required: false
        immutable: false
        hidden: true
  gitOption:
    __metadata:
      label: "Extra Git option"
      description: "Set a Git option to use here, such as --global http.sslVerify false"
      required: false
      type: "string"
  rbac:
    serviceAccountName:
      __metadata:
        label: "Service account name for Portal"
        description: "The name of the service account to be created for Microclimate to use"
        type: "string"
        required: false
        immutable: false
  jenkinsHost:
    __metadata:
      label: "Jenkins hostname"
      description: "Hostname used to access Jenkins via Kubernetes ingress."
      type: "string"
      immutable: false
      required: false
  microclimateHost:
    __metadata:
      label: "Microclimate hostname"
      description: "Hostname used to access Microclimate via Kubernetes ingress."
      type: "string"
      immutable: false
      required: false
  ingressDomain:
    __metadata:
      label: "Microclimate Ingress domain"
      description: "Domain to be added to microclimateHost and jenkinsHost when constructing Ingress entries."
      type: "string"
      immutable: false
      required: true
  arch:
    __metadata:
      label: "Architecture Affinity"
      description: "Configure node affinity for Microclimate - AMD and PowerPC are supported"
    amd64:
      __metadata:
        label: "Node affinity for amd64"
        description: "NodeAffinity for AMD64 architectures"
        type: string
        immutable: true
        required: true
    ppc64le:
      __metadata:
        label: "Node affinity for ppc64le"
        description: "NodeAffinity for PowerPC architectures"
        type: string
        immutable: true
        required: true
    s390x:
      __metadata:
        label: "Node affinity for s390x"
        description: "NodeAffinity for IBM Z architectures - (Currently not supported, leave as 0)"
        type: string
        immutable: true
        required: true

theia:
  __metadata:
    label: "Theia"
    description: "Configuration for microclimate-editor pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-theia image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-theia image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-theia"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-theia"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-theia"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-theia"
          type: "string"
          required: true

filewatcher:
  __metadata:
    label: "File-Watcher"
    description: "Configuration for microclimate-file-watcher pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-file-watcher image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-file-watcher image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-file-watcher"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-file-watcher"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-file-watcher"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-file-watcher"
          type: "string"
          required: true

portal:
  __metadata:
    label: "Portal"
    description: "Configuration for the main Microclimate pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-portal image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-portal image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-portal"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-portal"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-portal"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-portal"
          type: "string"
          required: true
  clock:
    tolerance:
      __metadata:
        label: "Clock Tolerance"
        description: "The Open ID Connect clock tolerance"
        type: "string"
        required: true

beacon:
  __metadata:
    label: "Beacon"
    description: "Configuration for microclimate-beacon pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-beacon image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-beacon image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-beacon"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-beacon"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-beacon"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-beacon"
          type: "string"
          required: true

utils:
  __metadata:
    label: "Utils"
    description: "Configuration for Microclimate utils"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-utils image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-utils image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-utils"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-utils"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-utils"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-utils"
          type: "string"
          required: true

loadrunner:
  __metadata:
    label: "Loadrunner"
    description: "Configuration for loadrunner pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-loadrunner image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-loadrunner image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-loadrunner"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-loadrunner"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-loadrunner"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-loadrunner"
          type: "string"
          required: true

atrium:
  __metadata:
    label: "Atrium"
    description: "Configuration for atrium pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-atrium image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-atrium image tag"
      type: "string"
      required: true
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-atrium"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-atrium"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-atrium"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-atrium"
          type: "string"
          required: true
          
kubectl:
  __metadata:
    label: "Kubectl Image"
    description: "Configuration for kubectl pod"
  repository:
    __metadata:
      label: "-"
      description: "--"
      hidden: true
  tag:
    __metadata:
      label: "-"
      description: "--"
      hidden: true

curl:
  __metadata:
    label: "Curl Image"
    description: "Configuration for curl pod"
  repository:
    __metadata:
      label: "-"
      description: "--"
      hidden: true
  tag:
    __metadata:
      label: "-"
      description: "--"
      hidden: true

imagePullPolicy:
  __metadata:
    name: "Image Pull Policy"
    label: "Image Pull Policy"
    description: "Docker image pull policy for Microclimate images"
    type: "string"
    required: true
    hidden: true
    options:
    - label: "Always"
      value: "Always"
    - label: "Never"
      value: "Never"
    - label: "IfNotPresent"
      value: "IfNotPresent"

devops:
  __metadata:
    label: "Devops"
    description: "Configuration for the microclimate-devops pod"
  repository:
    __metadata:
      label: "Repository"
      description: "microclimate-devops image location"
      type: "string"
      required: true
  tag:
    __metadata:
      label: "Tag"
      description: "microclimate-devops image tag"
      type: "string"
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Devops docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to Always"
      type: "string"
      required: true
      hidden: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  resources:
    requests:
      memory:
        __metadata:
          label: "Memory Request"
          description: "The memory request for microclimate-devops"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Request"
          description: "The CPU request for microclimate-devops"
          type: "string"
          required: true
    limits:
      memory:
        __metadata:
          label: "Memory Limit"
          description: "The Memory limit for microclimate-devops"
          type: "string"
          required: true
      cpu:
        __metadata:
          label: "CPU Limit"
          description: "The CPU limit for microclimate-devops"
          type: "string"
          required: true

jenkins:
  __metadata:
    label: "Jenkins Configuration"
    description: "Configuration options for Jenkins"
  rbac:
    serviceAccountName:
      __metadata:
        label: "Service account name"
        description: "The name of the service account to be created for Microclimate to use"
        type: string
        required: false
    install:
      __metadata:
        label: "-"
        description: "--"
        hidden: true
  dduportal:
    repository:
      __metadata:
        label: "-"
        description: "--"
        hidden: true
    tag:
      __metadata:
        label: "-"
        description: "--"
        hidden: true
  Agent:
    Image:
      __metadata:
        label: "JNLP image"
        description: "The image to use for the JNLP slave used by Jenkins"
        type: string
        required: true
    ImageTag:
      __metadata:
        label: "JNLP tag"
        description: "The tag to use for the JNLP slave used by Jenkins"
        type: string
        required: true
    Memory:
      __metadata:
        label: "Memory request"
        description: "Memory request for the Jenkins slave"
        type: string
        required: true
    JnlpContainer:
      JVM:
        MaxHeapSize:
          __metadata:
            label: "Maximum JVM heap size"
            description: "Maximum JVM heap size for the Jenkins slave"
            type: string
            required: true
  Pipeline:
    Build:
      __metadata:
        label: "Pipeline Build"
        description: "Build projects in the pipeline"
        type: boolean
        required: true
        immutable: false
    Deploy:
      __metadata:
        label: "Pipeline Deploy"
        description: "Deploy projects in the pipeline"
        type: boolean
        required: true
        immutable: false
    Test:
      __metadata:
        label: "Test Projects"
        description: "Test projects in the pipeline"
        type: "boolean"
        required: true
        immutable: false
    Debug:
      __metadata:
        label: "Debug Projects"
        description: "Debug projects in the pipeline"
        type: "boolean"
        required: true
        immutable: false
    Registry:
      Url:
        __metadata:
          label: "Docker registry URL"
          description: "URL of Docker registry used for built images (including port)"
          type: "string"
          required: true
          immutable: false
      Secret:
        __metadata:
          label: "Docker registry secret"
          description: "Name of Kubernetes secret containing credentials to access Docker registry"
          type: "string"
          required: true
          immutable: false
          hidden: true
    TargetNamespace:
      __metadata:
        label: "Target namespace"
        description: "Kubernetes namespace to which pipeline should deploy applications"
        type: "string"
        required: true
        immutable: false
    Template:
        RepositoryUrl:
          __metadata:
            label: "Jenkins library repository"
            description: "URL of Git repository containing Jenkins pipeline library"
            type: "string"
            required: true
            immutable: false
        Version:
          __metadata:
            label: "Jenkins library version"
            description: "Branch or tag to use in the Jenkins pipeline Git repository"
            type: "string"
            required: true
            immutable: false
  Master:
      JavaOpts:
        __metadata:
          label: "Java options for the Jenkins master"
          description: "Set default Java options for the Jenkins master process (e.g. specifying the heap size and any logging options)"
          type: "string"
          required: false
      CustomConfigMap:
        __metadata:
          label: "Custom configuration map"
          description: "You should leave this to true"
          type: "boolean"
          required: true
          hidden: true
      ServiceType:
        __metadata:
          label: "Service type"
          description: "Type of service for Jenkins Kubernetes service"
          options:
          - label: "Cluster IP"
            value: "ClusterIP"
          - label: "Node Port"
            value: "NodePort"
          type: "string"
          immutable: false
          required: true
          hidden: true
      UseSecurity:
        __metadata:
          label: "Enable Jenkins security"
          description: "Set this if you want username/password authenication for Jenkins"
          type: "boolean"
          immutable: false
          required: true
          hidden: true
      AdminUser:
        __metadata:
          label: "Jenkins admin username"
          description: "Username used for logging into Jenkins when security is enabled"
          type: "string"
          immutable: false
          required: false
      Image:
        __metadata:
          label: "Repository"
          description: "microclimate-jenkins image location"
          type: "string"
          required: true
      ImageTag:
        __metadata:
          label: "Tag"
          description: "microclimate-jenkins image tag"
          type: "string"
          required: true
      HealthProbesLivenessTimeout:
        __metadata:
          label: "Liveness probe timeout"
          description: "Timeout for the liveness probe"
          type: "string"
          immutable: false
          required: false
      HealthProbeLivenessFailureThreshold:
        __metadata:
          label: "Liveness probe failure threshold"
          description: "Failure threshold for the liveness probe"
          type: "string"
          immutable: false
          required: false
      HealthProbesReadinessTimeout:
        __metadata:
          label: "Readiness probe timeout"
          description: "Timeout for the readiness probe"
          type: "string"
          immutable: false
          required: false
      Memory:
        __metadata:
          label: "Memory request"
          description: "Memory request for the Jenkins master"
          type: string
          required: true
      InstallPlugins:
        __metadata:
          label: "Additional Jenkins plugins"
          description: "A list of additional Jenkins plugins to be installed"
          type: "string"
          immutable: false
          required: false
      LoginOpenIdConnect:
        __metadata:
          label: "-"
          description: "--"
          hidden: true
  Persistence:
    ExistingClaim:
      __metadata:
        label: "Existing PersistentVolumeClaim Name"
        description: "The name of an existing PersistentVolumeClaim for Jenkins to use - Leave blank to use Dynamic Provisioning"
        type: "string"
        immutable: false
        required: false
    StorageClass:
      __metadata:
        label: "Persistent storage class"
        description: "Class of storage you want to use for dynamic provisioning - leaving this blank will use the default storage class"
        type: "string"
        immutable: false
        required: false
