{{- include "sch.config.init" (list .) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ include "sch.names.fullName" (list .) }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "create-namespace-job"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ include "sch.names.fullName" (list .) }}-create-target-ns
  namespace: {{ .Release.Namespace }}
data:
  create_target_namespace.sh: |
    #!/bin/sh
    target={{ .Values.jenkins.Pipeline.TargetNamespace }}
    kubectl get namespace $target
    if [[ $? = 1 ]]; then 
      # If the namespace does not already exist, create it
      kubectl create namespace $target
    else
      echo "Namespace $target already exists"
    fi
{{- if .Values.global.applyPodSecurityPolicy }}
    rolebinding=$(kubectl get rolebinding -n $target)
    var=$(echo $rolebinding | grep "mc-pipeline-psp")
    if [[ -z  "$var"  ]]; then
      (cat <<EOF
      kind: RoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: mc-pipeline-psp
        namespace: $target
      subjects:
      - kind: Group
        name: system:serviceaccounts:microclimate-pipeline-deployments
        apiGroup: rbac.authorization.k8s.io
      roleRef:
        kind: ClusterRole
        name: ibm-anyuid-hostpath-clusterrole
        apiGroup: rbac.authorization.k8s.io
    EOF
      ) | kubectl create -f -
      exit 0
    else
      echo "mc-pipeline-psp  already exists in $target"
    fi
{{- end }}