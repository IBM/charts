{{- include "sch.config.init" (list .) -}}
#*******************************************************************************
# Licensed Materials - Property of IBM
# "Restricted Materials of IBM"
#
# Copyright IBM Corp. 2018 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#*******************************************************************************

apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: {{ include "sch.names.fullName" (list .) }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "create-cert-job" 
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ include "sch.names.fullName" (list .) }}-create-secret-job
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ include "sch.names.fullName" (list .) }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "create-cert-job"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      {{- if .Values.jenkins.rbac.serviceAccountName }}
      serviceAccountName: {{ .Values.jenkins.rbac.serviceAccountName }}
      {{- end }}
      affinity:
      {{- include "nodeaffinity" . | indent 8 }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
      containers:
      - name: create-mc-ingress-cert
        image: "{{ .Values.utils.repository }}:{{ .Values.utils.tag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        command: [ "/usr/local/bin/create_mc_ingress_cert.sh" ]
        volumeMounts:
        - name: script
          mountPath: /usr/local/bin/create_mc_ingress_cert.sh
          subPath: create_mc_ingress_cert.sh
        resources:
          requests:
            memory: {{ .Values.utils.resources.requests.memory }}
            cpu: {{ .Values.utils.resources.requests.cpu }}
          limits:
            memory: {{ .Values.utils.resources.limits.memory }}
            cpu: {{ .Values.utils.resources.limits.cpu }}
        
      volumes:
      - name: script
        configMap:
          name: {{ include "sch.names.fullName" (list .) }}-create-mc-secret
          items:
          - key: create_mc_ingress_cert.sh
            path: create_mc_ingress_cert.sh
            mode: 0777
      restartPolicy: Never
      
