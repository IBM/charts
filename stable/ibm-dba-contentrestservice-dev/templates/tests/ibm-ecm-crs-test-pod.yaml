apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test"
  annotations:
    "helm.sh/hook": test-success
  labels:
    app: {{ template "ibm-dba-contentrestservice-dev.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  # spec\.template\.spec\.affinity\.nodeAffinity\.requiredDuringSchedulingIgnoredDuringExecution\.nodeSelectorTerms\[[0-9]+\]\.matchExpressions\[[0-9]+\]\.key
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - "amd64"
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
{{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
    runAsUser: {{ .Values.runAsUser }}
{{- end }}
  containers:
  - name: {{ template "ibm-dba-contentrestservice-dev.fullname" . }}-test
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    command: ["sh", "-c", "curl  -X GET -I http://{{ template "ibm-dba-contentrestservice-dev.fullname" . }}:9080/content-services-graphql 2>/dev/null | head -n 1 | cut -d$' ' -f2"]
    resources:
      requests:
        cpu: "500m"
        memory: "512Mi"
      limits:
        cpu: "1"
        memory: "1536Mi"
    securityContext:
{{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
          runAsUser: {{ .Values.runAsUser }}
{{- end }}
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
  restartPolicy: Never
