# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

mode: standard
environment: non-openshift
tls:
  enabled: false
  issuer: icp-ca-issuer
  issuerKind: ClusterIssuer
  ca:
    secretName: cluster-ca-cert
    certFieldName: tls.crt
  server:
    existingSecretName: ""
    certFieldName: tls.crt
    keyFieldName: tls.key
  exporter:
    existingSecretName: ""
    certFieldName: tls.crt
    keyFieldName: tls.key
  client:
    existingSecretName: ""
    certFieldName: tls.crt
    keyFieldName: tls.key
imagePullPolicy: IfNotPresent
imagePullSecrets: ""
clusterAddress: 127.0.0.1
clusterPort: 8443
clusterDomain: cluster.local
clusterName: mycluster

prometheus:
  image:
    repository: ibmcom/prometheus
    tag: v2.3.1
  port: 9090
  scrapeInterval: 1m
  evaluationInterval: 1m
  retention: 24h
  args: {}
  persistentVolume:
    enabled: false
    useDynamicProvisioning: true
    size: 10Gi
    storageClass: ""
    existingClaimName: ""
    selector:
      label: ""
      value: ""
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}
  resources:
    limits:
      cpu: 500m
      memory: 2048Mi
    requests:
      cpu: 100m
      memory: 128Mi
  alertRuleFiles: alertRules
  configFiles: prometheusConfig
  ## if true, will create rbac role and related rolebinding for k8s resource access
  ##
  rbacRoleCreation: true
  ingress:
    enabled: false
    annotations: {}
  service:
    type: NodePort
  etcdTarget:
    enabled: false
    etcdAddress: ["127.0.0.1"]
    etcdPort: "4001"
    secret: etcd-secret
    tlsConfig: {}

alertmanager:
  image:
    repository: ibmcom/alertmanager
    tag: v0.15.0
  port: 9093
  persistentVolume:
    enabled: false
    useDynamicProvisioning: true
    size: 1Gi
    storageClass: ""
    existingClaimName: ""
    selector:
      label: ""
      value: ""
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  configFiles: alermanagerConfig
  ingress:
    enabled: false
    annotations: {}
  service:
    type: NodePort

kubeStateMetrics:
  enabled: false
  image:
    repository: ibmcom/kube-state-metrics
    tag: v1.3.0
  port: 80
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}

nodeExporter:
  enabled: false
  image:
    repository: ibmcom/node-exporter
    tag: v0.16.0
  port: 8445
  serviceAccount:
    name: "default"
    useExistingSA: true
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}

grafana:
  image:
    repository: "ibmcom/grafana"
    tag: "5.2.0"
  port: 3000
  user: "admin"
  password: ""
  persistentVolume:
    enabled: false
    useDynamicProvisioning: true
    size: 1Gi
    storageClass: ""
    existingClaimName: ""
    selector:
      label: ""
      value: ""
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  configFiles: grafanaConfig
  ingress:
    enabled: false
    annotations: {}
  service:
    type: NodePort
  elasticsearchDash: 
    enabled: false

collectdExporter:
  enabled: false
  image:
    repository: ibmcom/collectd-exporter
    tag: v0.4.0
  service:
    serviceMetricsPort: 9103
    serviceCollectorPort: 25826
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}

configmapReload:
  image:
    repository: ibmcom/configmap-reload
    tag: v0.2.2

router:
  image:
    repository: ibmcom/icp-management-ingress
    tag: 2.2.1
  subjectAlt: 127.0.0.1

elasticsearchExporter:
  enabled: false
  image:
    repository: ibmcom/elasticsearch-exporter
    tag: 1.0.2
  esUri: https://elasticsearch:9200
  tls:
    enabled: false
    ca:
      secretName: cluster-ca-cert
      certFieldName: tls.crt
    client:
      existingSecretName: ""
      certFieldName: tls.crt
      keyFieldName: tls.key
  port: 9108
  probe:
    enabled: true
    readiness:
      args: {}
    liveness:
      args: {}

curl:
  image:
    repository: ibmcom/curl
    tag: 4.0.0

certGen:
  image:
    repository: ibmcom/icp-cert-gen
    tag: 1.0.0

init:
  image:
    repository: ibmcom/icp-initcontainer
    tag: 1.0.0