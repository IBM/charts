# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

## Metadata for <PRODUCNAME> configuration
## This metadata is used to augment the value.yaml to drive IPC UI for configuration of the Helm chart installation

---

environment:
  __metadata:
    name: "environment"
    label: "Target deployment environment"
    description: "Target environment of deployment: Openshift or Non-Openshift"
    type: "string"
    immutable: false
    required: true
    options:
    - label: "Openshift"
      value: "openshift"
    - label: "Non-Openshift"
      value: "non-openshift"

mode:
  __metadata:
    name: "mode"
    label: "Mode of the deployment"
    description: "Mode of deployment: Standard or Managed."
    type: "string"
    immutable: false
    required: true
    options:
    - label: "Standard"
      value: "standard"
    - label: "Managed"
      value: "managed"

tls:
  enabled:
    __metadata:
      name: "tls.enabled"
      label: "Enable TLS"
      description: "Specifices whether TLS is enabled."
      type: "boolean"
      immutable: false
      required: true
  issuer:
    __metadata:
      name: "tls.issuer"
      label: "Issuer"
      description: "Name of the issuer."
      type: "string"
      immutable: false
      required: true
  issuerKind:
    __metadata:
      name: "tls.issuerKind"
      label: "Issuer kind"
      description: "Kind of the issuer."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "ClusterIssuer"
        value: "ClusterIssuer"
      - label: "Issuer"
        value: "Issuer"
  ca:
    secretName:
      __metadata:
        name: "tls.ca.secretName"
        label: "ca secret"
        description: "secret for ca cert"
        type: "string"
        immutable: false
        required: true
    certFieldName:
      __metadata:
        name: "tls.ca.certFieldName"
        label: "ca cert field name"
        description: "field name for ca cert in secret"
        type: "string"
        immutable: false
        required: true
  server:
    existingSecretName:
      __metadata:
        name: "tls.server.existingSecretName"
        label: "existing server secret"
        description: "existing secret for server cert"
        type: "string"
        immutable: false
        required: false
    certFieldName:
      __metadata:
        name: "tls.server.certFieldName"
        label: "server cert filed name"
        description: "field name for server cert in secret"
        type: "string"
        immutable: false
        required: true
    keyFieldName:
      __metadata:
        name: "tls.server.keyFieldName"
        label: "server key field name"
        description: "field name for server key in secret"
        type: "string"
        immutable: false
        required: true
  exporter:
    existingSecretName:
      __metadata:
        name: "tls.exporter.existingSecretName"
        label: "existing exporter secret"
        description: "existing secret for exporter cert"
        type: "string"
        immutable: false
        required: false
    certFieldName:
      __metadata:
        name: "tls.exporter.certFieldName"
        label: "exporter cert filed name"
        description: "field name for exporter cert in secret"
        type: "string"
        immutable: false
        required: true
    keyFieldName:
      __metadata:
        name: "tls.exporter.keyFieldName"
        label: "exporter key field name"
        description: "field name for exporter key in secret"
        type: "string"
        immutable: false
        required: true
  client:
    existingSecretName:
      __metadata:
        name: "tls.client.existingSecretName"
        label: "existing client secret"
        description: "existing secret for client cert"
        type: "string"
        immutable: false
        required: false
    certFieldName:
      __metadata:
        name: "tls.client.certFieldName"
        label: "client cert filed name"
        description: "field name for client cert in secret"
        type: "string"
        immutable: false
        required: true
    keyFieldName:
      __metadata:
        name: "tls.client.keyFieldName"
        label: "client key field name"
        description: "field name for client key in secret"
        type: "string"
        immutable: false
        required: true

imagePullPolicy:
  __metadata:
    name: "imagePullPolicy"
    label: "Docker image pull policy"
    description: "Always, Never, or IfNotPresent."
    type: "string"
    immutable: false
    required: true
    options:
    - label: "Always"
      value: "Always"
    - label: "Never"
      value: "Never"
    - label: "IfNotPresent"
      value: "IfNotPresent" 

imagePullSecrets:
  __metadata:
    name: "imagePullSecrets"
    label: "Image Secrete"
    description: "Image Secrete to pull images from private repo."
    type: "string"
    immutable: false
    required: false

clusterAddress:
  __metadata:
    name: "clusterAddress"
    label: "Cluster access address"
    description: "Cluster access address, IP or DNS."
    type: "string"
    immutable: false
    required: true

clusterPort:
  __metadata:
    name: "clusterPort"
    label: "Cluster access port"
    description: "Cluster access port."
    type: "string"
    immutable: false
    required: true

clusterDomain:
  __metadata:
    name: "clusterDomain"
    label: "Cluster domain"
    description: "Cluster domain name."
    type: "string"
    immutable: false
    required: true 

clusterName:
  __metadata:
    name: "clusterName"
    label: "Cluster name"
    description: "Name of the target cluster."
    type: "string"
    immutable: false
    required: true 

prometheus:
  image:
    repository:
      __metadata:
        name: "prometheus.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "prometheus.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  port: 
    __metadata:
      name: "prometheus.port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  scrapeInterval:
    __metadata:
      name: "prometheus.scrapeInterval"
      label: "Scrape Interval"
      description: "How often to get the logs.  Default is every 1 minute"
      type: "string"
      immutable: false
      required: true
  evaluationInterval:
    __metadata:
      name: "prometheus.evaluationInterval"
      label: "Evaluatation Interval"
      description: "How often to evaluate the rules.  Default is every 1 minute"
      type: "string"
      immutable: false
      required: true
  retention:
    __metadata:
      name: "prometheus.retention"
      label: "Retention"
      description: "How long to keep the data.  Default is 24 hours"
      type: "string"
      immutable: false
      required: true
  args:
    __metadata:
      name: "prometheus.args"
      label: "Arguments"
      description: "Arguments to prometheus"
      type: "string"
      immutable: false
      required: false
  persistentVolume:
    enabled:
      __metadata:
        name: "prometheus.persistentVolume.enabled"
        label: "Persistent volume"
        description: "Specifices if the peristent volume for prometheus is enabled or not."
        type: "boolean"
        immutable: false
        required: true
    useDynamicProvisioning:
      __metadata:
        name: "prometheus.persistentVolume.useDynamicProvisioning"
        label: "Use dynamic provisioning for persistent volume"
        description: "If dynamic provisioning is available in the cluster this option will automatically provision the requested volume if set to true."
        type: "boolean"
        immutable: false
        required: true
    size:
      __metadata:
        name: "prometheus.persistentVolume.size"
        label: "Size for the persistent volume"
        description: "Describes the requested disk size."
        type: "string"
        immutable: false
        required: false
    storageClass:
      __metadata:
        name: "prometheus.persistentVolume.storageClass"
        label: "Name of the storageClass for the persistentVolume"
        description: "The storeage class name of the persistent volume."
        type: "string"
        immutable: false
        required: false
    existingClaimName:
      __metadata:
        name: "prometheus.persistentVolume.existingClaimName"
        label: "Name of existing persistentVolumeClaim"
        description: "By default a new persistent volume claim will be created. Specify an existing claim here if one is available."
        type: "string"
        immutable: false
        required: false
    selector:
      label:
        __metadata:
          name: "prometheus.persistentVolume.selector.label"
          label: "Field to select the volume"
          description: "What is the label for the persistent volume"
          type: "string"
          immutable: false
          required: false
      value:
        __metadata:
          name: "prometheus.persistentVolume.selector.value"
          label: "Value of the field to select the volume"
          description: "What is the value for the persistent volume label"
          type: "string"
          immutable: false
          required: false
  probe:
    enabled:
      __metadata:
        name: "prometheus.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "prometheus.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "prometheus.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false
  resources:
    limits:
      cpu:
        __metadata:
          name: "prometheus.resources.limits.cpu"
          label: "Maximum CPU"
          description: "Describes the maximum amount of CPU allowed."
          type: "string"
          immutable: false
          required: false
      memory:
        __metadata:
          name: "prometheus.resources.limits.memory"
          label: "Maximum memory"
          description: "Describes the maximum amount of memory allowed."
          type: "string"
          immutable: false
          required: false
    requests:
      cpu:
        __metadata:
          name: "prometheus.resources.requests.cpu"
          label: "Requested cpu"
          description: "Describes the requested cpu ammount."
          type: "string"
          immutable: false
          required: false
      memory:
        __metadata:
          name: "prometheus.resources.requests.memory"
          label: "Requested memory"
          description: "Describes the requested memory ammount."
          type: "string"
          immutable: false
          required: false
  alertRuleFiles:
    __metadata:
      name: "prometheus.alertRuleFiles"
      label: "Alert rules file"
      description: "The the alert rules file for prometheus"
      type: "string"
      immutable: true
      required: false
  rbacRoleCreation:
    __metadata:
      name: "prometheus.rbacRoleCreation"
      label: "Enable rbac role creation"
      description: "If true, will create rbac role and related rolebinding for k8s resource access"
      type: "boolean"
      immutable: false
      required: true
  ingress:
    enabled:
      __metadata:
        name: "prometheus.ingress.enabled"
        label: "Ingress rules enabled"
        description: "Specifices whether ingress rules for prometheus are enabled."
        type: "boolean"
        immutable: false
        required: true
    annotations:
      __metadata:
        name: "prometheus.ingress.annotations"
        label: "Ingress Annotations"
        description: "The annoation strings to add prometheus into the ingress rules"
        type: "string"
        immutable: false
        required: false
  service:
    type:
      __metadata:
        name: "prometheus.service.type"
        label: "Service Type"
        description: "Type of service"
        type: "string"
        immutable: false
        required: true
        options:
          - label: "Cluster IP"
            value: "ClusterIP"
          - label: "Node Port"
            value: "NodePort"
  etcdTarget:
    enabled:
      __metadata:
        name: "prometheus.etcdTarget.enabled"
        label: "etcdTarget Enabled"
        description: "etcdTarget enabled or not."
        type: "boolean"
        immutable: false
        required: true
    secret:
      __metadata:
        name: "prometheus.etcdTarget.secret"
        label: "etcdTarget secret"
        description: "the name of the etcdTarget secret"
        type: "string"
        immutable: false
        required: false
    etcdAddress:
      __metadata:
        name: "prometheus.etcdTarget.etcdAddress"
        label: "etcd address"
        description: "etcdAddress"
        type: "string"
        immutable: false
        required: false
    etcdPort:
      __metadata:
        name: "prometheus.etcdTarget.etcdPort"
        label: "Port"
        description: "The port used for etcd."
        type: "number"
        immutable: false
        required: true
    tlsConfig:
      __metadata:
        name: "prometheus.etcdTarget.tlsConfig"
        label: "tls configuration for etcd target"
        description: "The tls configurations for etcd target in prometheus configuration"
        type: "string"
        immutable: false
        required: false

alertmanager:
  image:
    repository:
      __metadata:
        name: "alertmanager.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "alertmanager.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  port:
    __metadata:
      name: "alertmanager.port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  persistentVolume:
    enabled:
      __metadata:
        name: "alertmanager.persistentVolume.enabled"
        label: "Persistent volume"
        description: "Specifices if the peristent volume for alertmanager is enabled or not.  Defaults to false."
        type: "boolean"
        immutable: false
        required: true
    useDynamicProvisioning:
      __metadata:
        name: "alertmanager.persistentVolume.useDynamicProvisioning"
        label: "Use dynamic provisioning for persistent volume"
        description: "If dynamic provisioning is available in the cluster this option will automatically provision the requested volume if set to true."
        type: "boolean"
        immutable: false
        required: true
    size:
      __metadata:
        name: "alertmanager.persistentVolume.size"
        label: "Size for the persistent volume"
        description: "Describes the requested disk size."
        type: "string"
        immutable: false
        required: false
    storageClass:
      __metadata:
        name: "alertmanager.persistentVolume.storageClass"
        label: "Name of the storageClass for the persistentVolume"
        description: "The storeage class name of the persistent volume.  Defaults to -"
        type: "string"
        immutable: false
        required: false
    existingClaimName:
      __metadata:
        name: "alertmanager.persistentVolume.existingClaimName"
        label: "Name of existing persistentVolumeClaim"
        description: "By default a new persistent volume claim will be created. Specify an existing claim here if one is available."
        type: "string"
        immutable: false
        required: false
    selector:
      label:
        __metadata:
          name: "alertmanager.persistentVolume.selector.label"
          label: "Field to select the volume"
          description: "What is the label for the persistent volume"
          type: "string"
          immutable: false
          required: false
      value:
        __metadata:
          name: "alertmanager.persistentVolume.selector.value"
          label: "Value of the field to select the volume"
          description: "What is the value for the persistent volume label"
          type: "string"
          immutable: false
          required: false
  probe:
    enabled:
      __metadata:
        name: "alertmanager.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "alertmanager.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "alertmanager.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false
  resources:
    limits:
      cpu:
        __metadata:
          name: "alertmanager.resources.limits.cpu"
          label: "Maximum CPU"
          description: "Describes the maximum amount of CPU allowed."
          type: "string"
          immutable: false
          required: false
      memory:
        __metadata:
          name: "alertmanager.resources.limits.memory"
          label: "Maximum memory"
          description: "Describes the maximum amount of memory allowed."
          type: "string"
          immutable: false
          required: false
    requests:
      cpu:
        __metadata:
          name: "alertmanager.resources.requests.cpu"
          label: "Requested cpu"
          description: "Describes the requested cpu ammount."
          type: "string"
          immutable: false
          required: false
      memory:
        __metadata:
          name: "alertmanager.resources.requests.memory"
          label: "Requested memory"
          description: "Describes the requested memory ammount."
          type: "string"
          immutable: false
          required: false
  configFiles: 
      __metadata:
        name: "alertmanager.configFiles."
        label: "Config files"
        description: "The config filename for alertmanager"
        type: "string"
        immutable: false
        required: false
  ingress:
    enabled:
      __metadata:
        name: "alertmanager.ingress.enabled"
        label: "Alertmanager Ingress rules enabled"
        description: "Specifices whether ingress rules for alertmanager are enabled."
        type: "boolean"
        immutable: false
        required: true
    annotations:
      __metadata:
        name: "alertmanager.ingress.annotations"
        label: "Ingress Annotations"
        description: "The annoation strings to add alertmanager into the ingress rules"
        type: "string"
        immutable: false
        required: false
  service:
    type:
      __metadata:
        name: "alertmanager.service.type"
        label: "Service Type"
        description: "Type of service"
        type: "string"
        immutable: false
        required: true
        options:
          - label: "Cluster IP"
            value: "ClusterIP"
          - label: "Node Port"
            value: "NodePort"

kubeStateMetrics:
  enabled:
    __metadata:
      name: "kubeStateMetrics.enabled"
      label: "kubeStateMetrics enabled"
      description: "Specifices whether kubeStateMetrics is enabled."
      type: "boolean"
      immutable: false
      required: true
  image:
    repository:
      __metadata:
        name: "kubeStateMetrics.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "kubeStateMetrics.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  port: 
    __metadata:
      name: "kubeStateMetrics.port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  probe:
    enabled:
      __metadata:
        name: "kubeStateMetrics.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "kubeStateMetrics.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "kubeStateMetrics.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false

nodeExporter:
  enabled:
    __metadata:
      name: "nodeExporter.enabled"
      label: "kubeStateMetrics enabled"
      description: "Specifices whether nodeExporter is enabled."
      type: "boolean"
      immutable: false
      required: true
  image:
    repository:
      __metadata:
        name: "nodeExporter.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "nodeExporter.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  port: 
    __metadata:
      name: "nodeExporter.port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  probe:
    enabled:
      __metadata:
        name: "nodeExporter.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "nodeExporter.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "nodeExporter.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false

grafana:
  image:
    repository:
      __metadata:
        name: "grafana.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "grafana.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  port: 
    __metadata:
      name: "grafana.port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  user:
    __metadata:
      name: "grafana.user"
      label: "Username"
      description: "The grafana username"
      type: "string"
      immutable: false
      required: false
  password:
    __metadata:
      name: "grafana.password"
      label: "Password"
      description: "The grafana password"
      type: "password"
      immutable: false
      required: false
  persistentVolume:
    enabled:
      __metadata:
        name: "grafana.persistentVolume.enabled"
        label: "Persistent volume"
        description: "Specifices if the peristent volume is enabled or not."
        type: "boolean"
        immutable: false
        required: true
    useDynamicProvisioning:
      __metadata:
        name: "grafana.persistentVolume.useDynamicProvisioning"
        label: "Use dynamic provisioning for persistent volume"
        description: "If dynamic provisioning is available in the cluster this option will automatically provision the requested volume if set to true."
        type: "boolean"
        immutable: false
        required: true
    size:
      __metadata:
        name: "grafana.persistentVolume.size"
        label: "Size for the persistent volume"
        description: "Describes the requested disk size."
        type: "string"
        immutable: false
        required: false
    storageClass:
      __metadata:
        name: "grafana.persistentVolume.storageClass"
        label: "Name of the storageClass for the persistentVolume"
        description: "The storeage class name of the persistent volume."
        type: "string"
        immutable: false
        required: false
    existingClaimName:
      __metadata:
        name: "grafana.persistentVolume.existingClaimName"
        label: "Name of existing persistentVolumeClaim"
        description: "By default a new persistent volume claim will be created. Specify an existing claim here if one is available."
        type: "string"
        immutable: false
        required: false
    selector:
      label:
        __metadata:
          name: "grafana.persistentVolume.selector.label"
          label: "Field to select the volume"
          description: "What is the label for the persistent volume"
          type: "string"
          immutable: false
          required: false
      value:
        __metadata:
          name: "grafana.persistentVolume.selector.value"
          label: "Value of the field to select the volume"
          description: "What is the value for the persistent volume label"
          type: "string"
          immutable: false
          required: false
  probe:
    enabled:
      __metadata:
        name: "grafana.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "grafana.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "grafana.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false
  resources:
    limits:
      cpu:
        __metadata:
          name: "grafana.resources.limits.cpu"
          label: "Maximum CPU"
          description: "Describes the maximum amount of CPU allowed."
          type: "string"
          immutable: false
          required: false
      memory:
        __metadata:
          name: "grafana.resources.limits.memory"
          label: "Maximum memory"
          description: "Describes the maximum amount of memory allowed."
          type: "string"
          immutable: false
          required: false
    requests:
      cpu:
        __metadata:
          name: "grafana.resources.requests.cpu"
          label: "Requested cpu"
          description: "Describes the requested cpu ammount."
          type: "string"
          immutable: false
          required: false
      memory:
        __metadata:
          name: "grafana.resources.requests.memory"
          label: "Requested memory"
          description: "Describes the requested memory ammount."
          type: "string"
          immutable: false
          required: false
  configFiles: 
      __metadata:
        name: "grafana.configFiles."
        label: "Config files"
        description: "The config filename for alertmanager"
        type: "string"
        immutable: false
        required: false
  ingress:
    enabled:
      __metadata:
        name: "grafana.ingress.enabled"
        label: "Grafana Ingress rules enabled"
        description: "Specifices whether ingress rules for grafana are enabled."
        type: "boolean"
        immutable: false
        required: true
    annotations:
      __metadata:
        name: "grafana.ingress.annotations"
        label: "Ingress Annotations"
        description: "The annoation strings to add grafana into the ingress rules"
        type: "string"
        immutable: false
        required: false
  service:
    type:
      __metadata:
        name: "grafana.service.type"
        label: "Service Type"
        description: "Type of service"
        type: "string"
        immutable: false
        required: true
        options:
          - label: "Cluster IP"
            value: "ClusterIP"
          - label: "Node Port"
            value: "NodePort"
  elasticsearchDash: 
    enabled:
      __metadata:
        name: "grafana.elasticsearchDash.enabled"
        label: "Elasticsearch Dash enabled"
        description: "Specifices whether elasticsearchDash is enabled."
        type: "boolean"
        immutable: false
        required: true

collectdExporter:
  enabled:
    __metadata:
      name: "collectdExporter.enabled"
      label: "collectd Exporter enabled"
      description: "Specifices whether collectdExporter is enabled."
      type: "boolean"
      immutable: false
      required: true
  image:
    repository:
      __metadata:
        name: "collectdExporter.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "collectdExporter.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  service:
    serviceMetricsPort:
      __metadata:
        name: "collectdExporter.service.serviceMetricsPort"
        label: "serviceMetricsPort"
        description: "The serviceMetricsPort that the container will expose"
        type: "number"
        immutable: false
        required: true
    serviceCollectorPort:
      __metadata:
        name: "collectdExporter.service.serviceCollectorPort"
        label: "serviceCollectorPort"
        description: "The serviceCollectorPort that the container will expose"
        type: "number"
        immutable: false
        required: true
  probe:
    enabled:
      __metadata:
        name: "collectdExporter.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "collectdExporter.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "collectdExporter.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false

configmapReload:
  image:
    repository:
      __metadata:
        name: "configmapReload.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "configmapReload.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true

router:
  image:
    repository:
      __metadata:
        name: "router.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "router.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  subjectAlt: 
    __metadata:
      name: "router.subjectAlt"
      label: "subjectAlt"
      description: "The subjectAlt IP address"
      type: "string"
      immutable: false
      required: false

elasticsearchExporter:
  enabled:
    __metadata:
      name: "elasticsearchExporter.enabled"
      label: "Elasticsearch Exporter enabled"
      description: "Specifices whether elasticsearchExporter is enabled."
      type: "boolean"
      immutable: false
      required: true
  image:
    repository:
      __metadata:
        name: "elasticsearchExporter.image.repository"
        label: "Repository"
        description: "Docker image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "elasticsearchExporter.image.tag"
        label: "Tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
  esUri:
    __metadata:
      name: "elasticsearchExporter.esUri"
      label: "URI"
      description: "the URI for elasticsearch"
      type: "string"
      immutable: false
      required: true
  tls:
    ca:
      secretName:
        __metadata:
          name: "elasticsearchExporter.tls.ca.secretName"
          label: "ca secret"
          description: "secret for ca cert"
          type: "string"
          immutable: false
          required: true
      certFieldName:
        __metadata:
          name: "elasticsearchExporter.tls.ca.certFieldName"
          label: "ca cert field name"
          description: "field name for ca cert in secret"
          type: "string"
          immutable: false
          required: true
    client:
      existingSecretName:
        __metadata:
          name: "elasticsearchExporter.tls.client.existingSecretName"
          label: "existing client secret"
          description: "existing secret for client cert"
          type: "string"
          immutable: false
          required: false
      certFieldName:
        __metadata:
          name: "elasticsearchExporter.tls.client.certFieldName"
          label: "client cert filed name"
          description: "field name for client cert in secret"
          type: "string"
          immutable: false
          required: true
      keyFieldName:
        __metadata:
          name: "elasticsearchExporter.tls.client.keyFieldName"
          label: "client key field name"
          description: "field name for client key in secret"
          type: "string"
          immutable: false
          required: true
  port:
    __metadata:
      name: "elasticsearchExporter.port"
      label: "Port"
      description: "The port that the container will expose"
      type: "number"
      immutable: false
      required: true
  probe:
    enabled:
      __metadata:
        name: "elasticsearchExporter.probe.enabled"
        label: "Enable readiness and liveness probes"
        description: "Setting to true will turn on the readiness and liveness probes"
        type: "boolean"
        immutable: false
        required: false
    readiness:
      args:
        __metadata:
          name: "elasticsearchExporter.probe.readiness.args"
          label: "Readiness probe Arguments"
          description: "The value to pass to the readiness probe"
          type: "string"
          immutable: false
          required: false
    liveness:
      args:
        __metadata:
          name: "elasticsearchExporter.probe.liveness.args"
          label: "Liveness probe Arguments"
          description: "The value to pass to the liveness probe"
          type: "string"
          immutable: false
          required: false

curl:
  image:
    repository:
      __metadata:
        name: "curl.image.repository"
        label: "Repository"
        description: "Curl image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "curl.image.tag"
        label: "Tag"
        description: "Curl image tag"
        type: "string"
        immutable: false
        required: true

certGen:
  image:
    repository:
      __metadata:
        name: "certGen.image.repository"
        label: "Repository"
        description: "Certificate generation image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "certGen.image.tag"
        label: "Tag"
        description: "Certificate generation image tag"
        type: "string"
        immutable: false
        required: true

init:
  image:
    repository:
      __metadata:
        name: "init.image.repository"
        label: "Repository"
        description: "init image location"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "init.image.tag"
        label: "Tag"
        description: "init image tag"
        type: "string"
        immutable: false
        required: true
