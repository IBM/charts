{{- if or (eq .Values.mode "managed") .Values.kubeStateMetrics.enabled -}}
# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}
    chart: {{ .Chart.Name }}
    component: kubestatemetrics
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "prometheus.fullname" . }}-kubestatemetrics
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "prometheus.fullname" . }}
        chart: {{ .Chart.Name }}
        component: kubestatemetrics
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        productName: kube-state-metrics
        productVersion: v1.3.0
        productID: none
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
    {{- if eq .Values.mode "managed" }}
      tolerations:
      - key: "dedicated"
        operator: "Exists"
        effect: "NoSchedule"
    {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
            {{- if eq .Values.mode "managed" }}
              - key: management
                operator: In
                values:
                - "true"
            {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      containers:
        - name: kubestatemetrics
          image: {{ .Values.kubeStateMetrics.image.repository }}:{{ .Values.kubeStateMetrics.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
        {{- if .Values.kubeStateMetrics.probe.enabled }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: 8080
          {{- if .Values.kubeStateMetrics.probe.readiness.args }}
{{ toYaml .Values.kubeStateMetrics.probe.readiness.args | indent 12 }}
          {{- else }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
          {{- end }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: 8080
          {{- if .Values.kubeStateMetrics.probe.liveness.args }}
{{ toYaml .Values.kubeStateMetrics.probe.liveness.args | indent 12 }}
          {{- else }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
          {{- end }}
        {{- end }}
          resources: {}
      {{- if or (eq .Values.mode "managed") .Values.tls.enabled }}
        - name: router
          image: {{ .Values.router.image.repository }}:{{ .Values.router.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["/opt/ibm/router/entry/entrypoint.sh"]
#          ports:
#          - name: router
#            containerPort: 8080
          volumeMounts:
            - mountPath: "/opt/ibm/router/conf"
              name: router-config
            - mountPath: "/opt/ibm/router/caCerts"
              name: monitoring-ca-certs
            - mountPath: "/opt/ibm/router/certs"
              name: monitoring-certs
            - mountPath: "/opt/ibm/router/entry"
              name: router-entry
      volumes:
        - name: router-config
          configMap:
            name: {{ template "prometheus.fullname" . }}-exporter-router-nginx-config
            items:
              - key: kubestateexporter.nginx.conf
                path: nginx.conf
        - name: monitoring-ca-certs
          secret:
            secretName: {{ .Values.tls.ca.secretName }}
        - name: monitoring-certs
          secret:
          {{- if .Values.tls.exporter.existingSecretName }}
            secretName: {{ .Values.tls.exporter.existingSecretName }}
          {{- else }}
            secretName: {{ template "monitoring.fullname" . }}-exporter-certs
          {{- end }}
        - name: router-entry
          configMap:
            name: {{ template "monitoring.fullname" . }}-router-entry-config
            defaultMode: 0744
      {{- end }}

{{- end -}}
