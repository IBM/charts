{{- if or (eq .Values.mode "managed") .Values.tls.enabled -}}

# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}
    component: prometheus
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "prometheus.fullname" . }}-router-nginx-config
data:
  nginx.conf: |-
    error_log stderr notice;

    events {
        worker_connections 1024;
    }

    http {
        access_log off;

        include mime.types;
        default_type application/octet-stream;
        sendfile on;
        keepalive_timeout 65;

        # Without this, cosocket-based code in worker
        # initialization cannot resolve localhost.

        #upstream prometheus {
        #    server 127.0.0.1:9090/prometheus/;
        #}

        proxy_cache_path /tmp/nginx-mesos-cache levels=1:2 keys_zone=mesos:1m inactive=10m;

    {{- if eq .Values.mode "managed" -}}
        lua_package_path '$prefix/conf/?.lua;;';
        lua_shared_dict mesos_state_cache 100m;
        lua_shared_dict shmlocks 1m;

        init_worker_by_lua '
            local statecache = require "mesosstatecache"
            statecache.periodically_poll_mesos_state()
        ';

        init_by_lua '
            rewrite = require "rewrite"
        ';
      {{- if eq .Values.environment "openshift" -}}
        resolver {OPENSHIFT_RESOLVER};
      {{- else -}}  
        resolver kube-dns;
      {{- end -}}
    {{- end }}

        server {
            listen 8443 ssl default_server;
            ssl_certificate server.crt;
            ssl_certificate_key server.key;
            ssl_client_certificate /opt/ibm/router/caCerts/{{ .Values.tls.ca.certFieldName }};
            ssl_verify_client on;
            ssl_protocols TLSv1.2;
            # Ref: https://github.com/cloudflare/sslconfig/blob/master/conf
            # Modulo ChaCha20 cipher.
            ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:!EECDH+3DES:!RSA+3DES:!MD5;
            ssl_prefer_server_ciphers on;

            server_name dcos.*;
            root /opt/ibm/router/nginx/html;

            location /federate {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $http_host;

              proxy_pass http://127.0.0.1:9090/prometheus/federate;
            }

            location /api/v1/series {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $http_host;
              
              if ($arg_match[] = "helm_release_info") {
                 content_by_lua 'rewrite.write_release_response()';
              } 
            {{- if eq .Values.mode "managed" -}}
              rewrite_by_lua 'rewrite.rewrite_query()';
            {{- end }}
              proxy_pass http://127.0.0.1:9090/prometheus/api/v1/series;                

            }

            location / {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Host $http_host;
              
            {{- if eq .Values.mode "managed" -}}
              rewrite_by_lua 'rewrite.rewrite_query()';
            {{- end }}

              proxy_pass http://127.0.0.1:9090/prometheus/;
            }

        }
    }
{{- end -}}
