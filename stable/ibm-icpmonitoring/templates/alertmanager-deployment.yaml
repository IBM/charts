# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: {{ template "prometheus.fullname" . }}-alertmanager
    chart: {{ .Chart.Name }}
    component: alertmanager
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "prometheus.fullname" . }}-alertmanager
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "prometheus.fullname" . }}-alertmanager
        chart: {{ .Chart.Name }}
        component: alertmanager
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        productName: alertmanager
        productVersion: v0.15.0
        productID: none
        scheduler.alpha.kubernetes.io/critical-pod: ""
    spec:
    {{- if eq .Values.mode "managed" }}
      tolerations:
      - key: "dedicated"
        operator: "Exists"
        effect: "NoSchedule"
    {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
            {{- if eq .Values.mode "managed" }}
              - key: management
                operator: In
                values:
                - "true"
            {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
    {{- end }}
    {{- if eq .Values.environment "openshift" }}
      securityContext:
        fsGroup: 65534  
    {{- end }}
      containers:
        - name: configmap-reload
          image: {{ .Values.configmapReload.image.repository }}:{{ .Values.configmapReload.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9093/-/reload
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
        - name: alertmanager
          image: {{ .Values.alertmanager.image.repository }}:{{ .Values.alertmanager.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/var/lib/alertmanager/data
            - --cluster.listen-address=$(POD_IP):9094
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 9093
        {{- if .Values.alertmanager.probe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/v1/status
              port: 9093
          {{- if .Values.alertmanager.probe.readiness.args }}
{{ toYaml .Values.alertmanager.probe.readiness.args | indent 12 }}
          {{- else }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
          {{- end }}
          livenessProbe:
            httpGet:
              path: /api/v1/status
              port: 9093
          {{- if .Values.alertmanager.probe.liveness.args }}
{{ toYaml .Values.alertmanager.probe.liveness.args | indent 12 }}
          {{- else }}
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 10
          {{- end }}
        {{- end }}
          resources:
{{ toYaml .Values.alertmanager.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "/var/lib/alertmanager/data"
      {{- if or (eq .Values.mode "managed") .Values.tls.enabled }}
        - name: router
          image: {{ .Values.router.image.repository }}:{{ .Values.router.image.tag }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command: ["/opt/ibm/router/entry/entrypoint.sh"]
          ports:
          - name: router
            containerPort: 8080
          volumeMounts:
            - mountPath: "/opt/ibm/router/conf"
              name: router-config
            - mountPath: "/opt/ibm/router/caCerts"
              name: monitoring-ca-certs
            - mountPath: "/opt/ibm/router/certs"
              name: monitoring-certs
            - mountPath: "/opt/ibm/router/entry"
              name: router-entry
      {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "prometheus.fullname" . }}-alertmanager
        - name: storage-volume
        {{- if .Values.alertmanager.persistentVolume.enabled }}
          persistentVolumeClaim:
          {{- if .Values.alertmanager.persistentVolume.existingClaimName }}
            claimName: {{ .Values.alertmanager.persistentVolume.existingClaimName }}
          {{- else }}
            claimName: {{ template "prometheus.fullname" . }}-alertmanager
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- if or (eq .Values.mode "managed") .Values.tls.enabled }}
        - name: router-config
          configMap:
            name: {{ template "prometheus.fullname" . }}-alertmanager-router-nginx-config
        - name: monitoring-ca-certs
          secret:
            secretName: {{ .Values.tls.ca.secretName }}
        - name: monitoring-certs
          secret:
          {{- if .Values.tls.server.existingSecretName }}
            secretName: {{ .Values.tls.server.existingSecretName }}
          {{- else }}
            secretName: {{ template "monitoring.fullname" . }}-certs
          {{- end }}
        - name: router-entry
          configMap:
            name: {{ template "monitoring.fullname" . }}-router-entry-config
            defaultMode: 0744
      {{- end }}
