apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "istio.name" . }}-{{ .Release.Name }}-test"
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "istio.name" . }}-test
    chart: {{ template "istio.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    seccomp.security.alpha.kubernetes.io/pod: docker/default
    sidecar.istio.io/inject: "false"
    helm.sh/hook: "test-success"
    helm.sh/hook-delete-policy: "hook-succeeded"
spec:
  serviceAccountName: istio-test-service-account-{{ .Release.Name }}
{{- if .Values.global.priorityClassName }}
  priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
  containers:
    - name: "{{ template "istio.name" . }}-test"
      image: "{{ .Values.global.kubectl.repository }}:{{ .Values.global.kubectl.tag }}"
      imagePullPolicy: "{{ .Values.global.imagePullPolicy }}"
      command:
        - kubectl
        - -n
        - {{ .Release.Namespace }}
        - get
        - pods
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
          weight: 2
        - preference:
            matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - ppc64le
          weight: 2
        - preference:
            matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - s390x
          weight: 2
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
                  - ppc64le
                  - s390x
  restartPolicy: Never
