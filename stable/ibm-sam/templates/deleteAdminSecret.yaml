{{- include "sch.config.init" (list . "isam.sch.chart.config.values") -}}

{{- if not .Values.global.container.adminSecret -}}

{{- $secretName := .sch.chart.components.common.secretGeneratorName -}}
{{- $compName := printf "%s-%s" $secretName "delete" -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compName) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
  annotations:
    # This needs to run just before a Helm delete, as the secrets
    # are created by pre-install hooks and are therefore not automatically
    # deleted by a `helm delete`.
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
    "helm.sh/hook-weight":        "3"

spec:
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}

    spec:
      serviceAccountName: {{ include "sch.names.fullCompName" (list . $secretName ) | quote }}

      hostNetwork: false
      hostPID:     false
      hostIPC:     false

      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
      restartPolicy: Never

      imagePullSecrets:
        - name: {{ template "docker.credentials.secret" . }}

      containers: 
      - name: {{ $compName | quote }}
        image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.global.image.pullPolicy | quote }}

        securityContext:
          privileged:               false
          readOnlyRootFilesystem:   false
          allowPrivilegeEscalation: true
          runAsNonRoot:             true
          runAsUser:                5001
          capabilities:
            add:
            - SETUID
            - SETGID

        command:
          - sh
          - -c
          - 'curl -s https://kubernetes.default.svc.cluster.local/api/v1/namespaces/{{ .Release.Namespace }}/secrets/{{ template "admin.secret" . }}  --header "Authorization: Bearer `cat /var/run/secrets/kubernetes.io/serviceaccount/token`" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --request DELETE && echo Done'

  backoffLimit: 5

{{- end }}

