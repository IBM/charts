###############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2018, 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
# Runs a job to copy secrets from the releases namespace into kube-system
###############################################################################
{{ if eq .Values.license "accept" -}}
{{ if .Values.global.image.pullSecret -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{ $namePrefix := .sch.chart.components.essential.secretCopierJob.name -}}
{{ $name := include "sch.names.fullCompName" (list . $namePrefix ) -}}
# Component is 'essential'
{{ $compName := .sch.chart.components.essential.compName -}}
{{ $labels := include "sch.metadata.labels.standard" (list . $compName (dict "function" "setup-secrets")) -}}
# Name of the new temporary service account
{{ $serviceAccount := .sch.chart.components.essential.preInstallSA.name -}}
{{ $serviceAccountName := include "sch.names.fullCompName" (list . $serviceAccount) -}}
# Name of the new image pull secret in kube-system
{{ $imagePullSecret := .sch.chart.components.essential.imagePullSecret.name -}}
{{ $imagePullSecretName := include "sch.names.fullCompName" (list . $imagePullSecret) -}}
# Default user for security context
{{ $defaultUser := .sch.securityContext.defaultUser -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name | quote }}
  labels:
{{ $labels | indent 4 }}
  annotations:
    # This needs to run before we deploy, as UI component installs
    # depend on the secrets existing already, and will fail to start
    # otherwise.
    "helm.sh/hook": pre-install
    # We don't delete this if it fails, as the logs may be useful to
    # diagnose a failed install
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
    # This needs to happen before all other jobs as they will need access to this
    # image pull secret
    "helm.sh/hook-weight": "3"
spec:
  activeDeadlineSeconds: 100
  template:
    metadata:
      name: {{ $name | quote }}
      labels:
{{ $labels | indent 8 }}
        job: "pre-install-ips"
    spec:
      serviceAccountName: {{ $serviceAccountName | quote }}
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ $defaultUser }}
      affinity:
{{ include "customNodeaffinity" (list .) | indent 8 }}
      restartPolicy: Never
      containers:
        - name: "ips-copier"
          image: {{ include "eventstreams.image" (list . "eventstreams-kubectl" .Values.global.image.imageTags.kubectlTag) | quote }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            {{- include "license.accept.env.ref" . | indent 12 }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ $defaultUser }}
            capabilities:
              drop:
              - ALL
          command:
            - sh
            - -c
            - "kubectl get secret {{ .Values.global.image.pullSecret }} -n {{ .Release.Namespace }} -o yaml | \
sed 's/namespace: {{ .Release.Namespace }}/namespace: kube-system/' | \
sed 's/name: {{ .Values.global.image.pullSecret }}/name: {{ $imagePullSecretName }}/' | \
kubectl create --namespace=kube-system -f - && \
kubectl label secret {{ $imagePullSecretName }} -n kube-system release={{ .Release.Name }} --overwrite && \
echo Done"
{{ end -}}
{{ end -}}
