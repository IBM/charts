#*******************************************************************************
# Licensed Materials - Property of IBM
#
#
# OpenPages GRC Platform (PID: 5725-D51)
#
#  Â© Copyright IBM Corporation 2020. All Rights Reserved.
#
# US Government Users Restricted Rights- Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
#*******************************************************************************
# Generates random passwords and stores as kubernetes secrets
#
# Platform Secret:
# - opsystem-pw: OPSystem account password
# - keystore-pw: Default WLP keystore (key.p12) password
# - ldap-search-pw: (optional) password for LDAP integration search user
#
# Initial Password Secret:
# - OpenPagesAdministrator and other out-of-the-box application user accounts
#
# DB Secret:
# - db2inst1-pw: db2inst1 account password
# - openpage-pw: openpage database accoutn password
#
{{- include "sch.config.init" (list . "op.sch.chart.config.values") -}}
{{ $compName := .sch.chart.components.opapp.name }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.name }}-op-secret-gen"
  namespace: {{ .Release.Namespace | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
    icpdsupport/serviceInstanceId: "{{ .Values.zenServiceInstanceId | int64 }}"
    icpd-addon/status: "{{ .Values.zenServiceInstanceId | int64 }}"
    icpdsupport/app : {{ include "sch.names.appName" (list .) }}
    app : {{ include "sch.names.appName" (list .) }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        icpdsupport/addOnId: {{ .Values.zenServiceInstanceType | quote}}
        icpdsupport/app : {{ include "sch.names.appName" (list .) }}
        icpdsupport/serviceInstanceId: {{ .Values.zenServiceInstanceId | int64 | quote }}
        app : {{ include "sch.names.appName" (list .) }}
      annotations:
          {{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
{{- include "sch.security.securityContext" (list . .sch.chart.securityContextRestricted) | indent 6 }}
      serviceAccountName: {{ .Values.global.serviceAccountName }}
      containers:
      - name: op-secret-gen
        image: "{{ .Values.docker_registry_prefix }}/{{ .Values.commonUtils.image.dockerImage }}:{{ .Values.commonUtils.image.imageTag }}"
        imagePullPolicy: IfNotPresent
        env:
{{- with .Values.smallContainer.resources }}
        resources:
{{ toYaml . | indent 10 }}
{{- end }}
        command:
        - /bin/bash
        - -c
        - |
          set -e

          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: {{ .Values.name }}-platform-secret
            labels:
              {{- include "sch.metadata.labels.standard" (list . $compName) | nindent 14 }}
            annotations:
          data:
            opsystem-pw: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            keystore-pw: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            ldap-search-pw: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            encryption-key-pw: $(openssl rand -base64 32 | head -c24 | tr -d '\n' | base64 | tr -d '\n' | base64)
          EOF

          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: {{ .Values.name }}-initialpw-secret
            labels:
              {{- include "sch.metadata.labels.standard" (list . $compName) | nindent 14 }}
            annotations:
          data:
            OpenPagesAdministrator: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            bcm: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            fcm: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            iam: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            itg: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            mrg: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            orm: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            pcm: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            rcm: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            vrm: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_FR_FR: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_DE_DE: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_IT_IT: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_JA_JP: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_PT_BR: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_ZH_CN: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_ES_ES: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_ZH_TW: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_EN_GB: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            LEE_EN_US: $(openssl rand -base64 32 | head -c20 | tr -d '\n' | base64 | tr -d '\n')
          EOF

          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: {{ .Values.name }}-db-secret
            labels:
              {{- include "sch.metadata.labels.standard" (list . $compName) | nindent 14 }}
            annotations:
          data:
            openpage-pw: $(openssl rand -base64 32 | tr -d '/' | head -c20 | tr -d '\n' | base64 | tr -d '\n')
            db2inst1-pw: $(openssl rand -base64 32 | tr -d '/' | head -c20 | tr -d '\n' | base64 | tr -d '\n')
          EOF
      restartPolicy: Never
  backoffLimit: 3