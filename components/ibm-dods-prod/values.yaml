global:
  # the name of the user-home PVC we mount in our pods
  userHomePVC:
    persistence:
      existingClaimName: 'user-home-pvc'
  # architecture to run on: this allows to pick the right images
  architecture: "amd64"
  # the service account to install our pods: by default use CP4D viewer account
  serviceAccount: cpd-viewer-sa
  # specifies the Docker repository for the image, this will be pre-appended to the image.repository name.
  dockerRegistryPrefix: docker-registry.default.svc:5000/zen
  # current product, either 'zen' (CP4D) or 'ws' (WSL)
  ibmProduct: zen

image:
  pullPolicy: IfNotPresent      

ddInit:
  image:
    repository: "dd-init"
    tag: "2.1.31"
            
ddScenarioApi:
  image:
    repository: "dd-scenario-api"
    tag: "2.1.201"
  resources:
    requests:
      cpu: "200m"
      memory: "512Mi"
    limits:
      cpu: "1000m"
      memory: "1024Mi"
  replicas: 1

ddScenarioUi:
  image:
    repository: "dd-scenario-ui"
    tag: "2.1.275"
  resources:
    requests:
      cpu: "200m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"
  replicas: 1
  # used in unit tests to disable REDIS to be able to run standalone
  noRedis: false

ddCognitive:
  image:
    repository: "dd-cognitive"
    tag: "2.1.64"
  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "1000m"
      memory: "2048Mi"
  replicas: 1

