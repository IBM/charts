{{- include "sch.config.init" (list . "ibm-dods-prod.sch.chart.config.values") -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.ddCognitive.compName ) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.ddCognitive.compName (dict "icpdsupport/addOnId" "do" "icpdsupport/app" .sch.chart.components.ddCognitive.compName "app" .sch.chart.components.ddCognitive.compName)) | indent 4 }}
spec:
  replicas: {{ .Values.ddCognitive.replicas }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.ddCognitive.compName) | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . .sch.chart.components.ddCognitive.compName (dict "icpdsupport/addOnId" "do" "icpdsupport/app" .sch.chart.components.ddCognitive.compName "app" .sch.chart.components.ddCognitive.compName)) | indent 8 }}
      annotations:
        {{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
        hook.deactivate.cpd.ibm.com/command: "[]"
        hook.activate.cpd.ibm.com/command: "[]"
    spec:
      terminationGracePeriodSeconds: 0
      affinity:
        {{- include "sch.affinity.nodeAffinity" (list . .sch.chart.nodeAffinity) | indent 8 }}
      {{- if .Values.global.serviceAccount }}
      serviceAccountName: {{ .Values.global.serviceAccount }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      {{- include "sch.security.securityContext" (list . .sch.chart.securityContextPodWAS) | indent 6 }}
      containers:
      - name: {{ .sch.chart.components.ddCognitive.compName }}-container
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.ddCognitive.image.repository }}:{{ .Values.ddCognitive.image.tag }}-{{ .Values.global.architecture }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
        {{- include "sch.security.securityContext" (list . .sch.chart.securityContextContainerNoRoot) | indent 8 }}     
        env:
          - name: PROPERTY_PREFIX
            value: "k8s_local_"
          - name: INTERNAL_NGINX_CERTIFICATE
            valueFrom:
              secretKeyRef:
                key: certificate.pem
                name: internal-nginx-svc-tls
        resources:
{{ toYaml .Values.ddCognitive.resources | indent 10 }}
        ports:
        - containerPort: 9443
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /v1/cognitive/buildInfo
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 180
          periodSeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /v1/cognitive/buildInfo
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 2
