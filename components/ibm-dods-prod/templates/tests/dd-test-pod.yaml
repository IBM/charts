{{- include "sch.config.init" (list . "ibm-dods-prod.sch.chart.config.values") -}}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "sch.names.fullCompName" (list . "test") }}"
  annotations:
    "helm.sh/hook": test-success
  labels:
{{ include "sch.metadata.labels.standard" (list . "test") | indent 4 }}
spec:
  affinity:
    {{- include "sch.affinity.nodeAffinity" (list . .sch.chart.nodeAffinity) | indent 4 }}
  hostNetwork: false
  hostPID: false
  hostIPC: false       
  {{- if .Values.global.serviceAccount }}
  serviceAccountName: {{ .Values.global.serviceAccount }}
  {{- end }}  
  {{- include "sch.security.securityContext" (list . .sch.chart.securityContextPodSetup) | indent 2 }}    
  restartPolicy: Never
  containers:
  - name: "test-container"
    image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.ddInit.image.repository }}:{{ .Values.ddInit.image.tag }}-{{ .Values.global.architecture }}
    imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
    {{- include "sch.security.securityContext" (list . .sch.chart.securityContextContainerNoRoot) | indent 4 }}     
    resources:
      requests:
        cpu: "200m"
        memory: "256Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"       
    command:
    - /bin/bash
    - -c
    - 'echo "Checking DODS is accessible"; 
      set -ex; 
      OK=0;
      SCENARIO_UI_HTTPS_PORT=8449; 
      COGNITIVE_HTTPS_PORT=8451; 
      for (( TRIES=0; TRIES<=80; TRIES++ ))
      do    
        if curl --insecure https://{{ .sch.chart.components.ddScenarioUi.compName }}-svc:$SCENARIO_UI_HTTPS_PORT/decision-optimization/ping &&
           curl --insecure https://{{ .sch.chart.components.ddCognitive.compName }}-svc:$COGNITIVE_HTTPS_PORT/v1/cognitive/buildInfo; then
          OK=1;
          break;
        fi;
        sleep 5;
      done;
      if [ $OK -eq 0 ]; then
        echo "FAIL: some pods are not running"
        exit -1;
      else
        echo "Test complete";
        exit 0;
      fi; '
