{{/*
#+------------------------------------------------------------------------+
#| Licensed Materials - Property of IBM
#| IBM Cognos Products: Cognos Dashboard Embedded
#| (C) Copyright IBM Corp. 2019
#|
#| US Government Users Restricted Rights - Use, duplication or disclosure
#| restricted by GSA ADP Schedule Contract with IBM Corp.
#+------------------------------------------------------------------------+
*/}}
{{- include "sch.config.init" (list . "dde.sch.chart.config.values") -}}
{{/*- include "ibmCde.licenseValidate" . | required "License must be accepted by setting license key to true" */}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ibmCde.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ibmCde.release_labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
{{- include "ibmCde.release_labels" . | indent 6 }}
      app: {{ template "ibmCde.name" . }}-redis
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        hook.activate.cpd.ibm.com/command: '[]'
        hook.deactivate.cpd.ibm.com/command: '[]'
        checksum/config_proxy: {{ include (print $.Template.BasePath "/confmap-proxy.yaml") . | sha256sum }}
        checksum/config_server: {{ include (print $.Template.BasePath "/confmap-server.yaml") . | sha256sum }}
        {{- include "ibmCde.metering.annotations" . | indent 8 }}
        {{- include "ibmCde.serviceability.annotations" . | indent 8 }}
      labels:
        {{- include "ibmCde.release_labels" . | indent 8 }}
        app: {{ template "ibmCde.name" . }}-redis
        icpdata_addon_version: {{ .Chart.AppVersion | quote }}
        icpdsupport/addOnId: cde
        icpdsupport/app: api
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsUser: {{ .Values.runAsUser }}
{{- if .Values.cde.securityContext.fsGroup  }}
        fsGroup: {{ .Values.cde.securityContext.fsGroup  }}
{{- end }}
        runAsNonRoot: true
      affinity:
      {{/* nodeaffinity for PPA charts, remove this comment and use the following nodeAffinity for PPA charts, can be removed if github.ibm charts */}}
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          #If you specify multiple nodeSelectorTerms associated with nodeAffinity types,
          #then the pod can be scheduled onto a node if one of the nodeSelectorTerms is satisfied.
          #
          #If you specify multiple matchExpressions associated with nodeSelectorTerms,
          #then the pod can be scheduled onto a node only if all matchExpressions can be satisfied.
          #
          #valid operators: In, NotIn, Exists, DoesNotExist, Gt, Lt
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- if .Values.arch }}
                  - {{ .Values.arch }}
                {{- else }}
                  - {{ template "ibmCde.arch" . }}
                {{- end }}
      restartPolicy: Always
      containers:
      - name: daas-sb-proxy
        image: "{{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.redisInit.image }}:{{ .Values.image.redisInit.tag | default "latest" }}-{{ .Values.arch }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["redis-server", "--save", "''", "--appendonly", "no"]
        securityContext:
{{- if (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
          runAsUser: {{ .Values.runAsUser }}
{{- end }}
{{- if .Values.cde.securityContext.fsGroup  }}
          fsGroup: {{ .Values.cde.securityContext.fsGroup  }}
{{- end }}
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        ports:
          - containerPort: {{ .Values.image.redisInit.port }}
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: "125m"
            memory: 128Mi
