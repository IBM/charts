apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: wml-os-envoy
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}"
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  name: wml-os-envoy
spec:
  revisionHistoryLimit: 3 #keep last 3 rs
  replicas: 1
  selector:
    matchLabels:
      app: wml-os-envoy
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: wml-os-envoy
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: "{{ .Release.Name }}"
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
      annotations:
        cloudpakName: IBM Cloud Pak for Data
        cloudpakId: eb9998dcc5d24e3eb5b6fb488f750fe2
        cloudpakVersion: 3.0.1
        productName: IBM Watson Machine Learning for IBM Cloud Pak for Data
        productID: ICP4D-Watson-Machine-Learning-3-0-1
        productVersion: 3.0.1
        productMetric: VIRTUAL_PROCESSOR_CORE
        productChargedContainers: All       
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - ppc64le
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      initContainers:
      - name: init-container
        image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlEtcd.image.repository }}:{{ .Values.wmlEtcd.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsUser: {{ .Values.global.user.id }}
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'while true; do status_code=`curl -s --connect-timeout 30 -o /dev/null -w "%{http_code}"  http://wml-etcd:2379/v2/keys/etcd-init -X PUT -d "value=etcd is up"`; if [ $status_code -eq 200 ]; then TIMESTAMP=`date "+%Y-%m-%d %H:%M:%S"`;echo "$TIMESTAMP ETCD service is reachable"; exit 0; fi; done; exit 1']
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            cpu: 250m
            memory: 512M
          requests:
            cpu: 200m
            memory: 256M
      containers:
      - env:
        - name: WMLENV
          value: fvt
        - name: DATACENTRE
          value: $datacentre
        - name: AZ
          value: $az
        - name: MANAGER_SERVICE
          value: ml-runtime-manager
        - name: CLUSTER_MODEL_ENDPOINT
          value: /v3/scoring/online/
        - name: CLUSTER_MODEL_V4_ENDPOINT
          value: /v4/deployments/
        - name: RUNTIME_DISCOVERY
          value: services/wml-online-scoring/routes/runtime
        - name: RUNTIME_V4_DISCOVERY
          value: services/wml-online-scoring/routes/runtime/v4
        - name: RUNTIME_MANAGER_DISCOVERY
          value: services/wml-online-scoring/routes/manager
        - name: SERVICE_ID
          value: wml-online-scoring
        - name: AGT_SERVICE_NAME
          value: wml-online-scoring
        - name: MODEL_URL_PARAM
          value: path
        - name: UPSTREAM_CONNECTION_TIMEOUT
          value: "15000"
        - name: UPSTREAM_REFRESH_DELAY
          value: "1000"
        - name: AGT_ETCD_TLS
          value: "0"
        - name: AGT_ETCD_CLUSTER
          valueFrom:
            secretKeyRef:
              name: etcd-secret
              key: etcd_cluster
        - name: AGT_ETCD_USERNAME
          valueFrom:
            secretKeyRef:
              name: etcd-secret
              key: etcd_username
        - name: AGT_ETCD_PASSWORD
          valueFrom:
            secretKeyRef:
              name: etcd-secret
              key: etcd_password
        - name: DEPLOYMENT_PLATFORM
          value: "private"
        image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlEnvoy.image.repository }}:{{ .Values.wmlEnvoy.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsUser: {{ .Values.global.user.id }}
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "5"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /v3/scoring/online/envoy/heartbeat
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 10
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /v3/scoring/online/envoy/heartbeat
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 30
          successThreshold: 2
          timeoutSeconds: 10
        name: wml-os-envoy
        resources:
          limits:
            cpu: 4
            memory: 2Gi
          requests:
            cpu: "250m"
            memory: 2Gi

