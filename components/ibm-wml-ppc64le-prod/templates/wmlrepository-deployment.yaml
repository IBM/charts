apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}"
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: wmlrepository
  name: wmlrepository
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: wmlrepository
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: wmlrepository
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: "{{ .Release.Name }}"
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
      annotations:
        cloudpakName: IBM Cloud Pak for Data
        cloudpakId: eb9998dcc5d24e3eb5b6fb488f750fe2
        cloudpakVersion: 3.0.1
        productName: IBM Watson Machine Learning for IBM Cloud Pak for Data
        productID: ICP4D-Watson-Machine-Learning-3-0-1
        productVersion: 3.0.1
        productMetric: VIRTUAL_PROCESSOR_CORE
        productChargedContainers: All       
        checksum.helm.kubernetes.io/configmap: {{ include (print $.Template.BasePath "/wmlrepository-configmap.yaml") . | sha256sum }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - ppc64le
      securityContext:
      {{- if .Values.securityContext.fsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
        runAsUser: {{ .Values.global.user.id }}
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - env:
        - name: INTERNAL_NGINX_CERT
          valueFrom:
            secretKeyRef:
              key: certificate.pem
              name: internal-nginx-svc-tls
        - name: WDP_BASE_URL
          valueFrom:
            configMapKeyRef:
              key: host-url
              name: wdp-config
        - name: WDP_CLOUDANT_CERT
          valueFrom:
            secretKeyRef:
              key: ca.crt.pem
              name: wdp-cloudant-cert
        - name: CLOUDANT_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: wdp-cloudant-creds
        - name: CLOUDANT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: wdp-cloudant-creds
        - name: WML_GLUSTERFS_PATH
          valueFrom:
            secretKeyRef:
              key: glusterfs_path
              name: repo-secrets
        - name: WML_SSL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ssl_password_icp
              name: repo-secrets
        - name: WML_SSL_PATH
          valueFrom:
            secretKeyRef:
              key: ssl_path_icp
              name: repo-secrets
        - name: TRAINING_FS_PATH
          valueFrom:
            secretKeyRef:
              key: training_data_path
              name: repo-secrets
        - name: WML_PREDEFINED_RUNTIME_KEY
          valueFrom:
            secretKeyRef:
              key: predefined_runtime
              name: repo-secrets
        - name: WML_RMQ_URL_ICD
          valueFrom:
            secretKeyRef:
              key: rabbitmq-url.txt
              name: rabbitmq-url
        - name: WML_RMQ_CERT_ICD
          valueFrom:
            secretKeyRef:
              key: cacert.pem
              name: rabbitmq-ha-cert
        - name: DEPLOYMENT_PLATFORM
          value: private
        - name: DEPLOYMENT_PRIVATE
          value: local
        - name: WMLENV
          value: fvt
        - name: CAMS_APIS
          value: camstrue
        - name: DATACENTRE
          value: Dallas
        - name: AZ
          value: dal10
        image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRepository.image.repository }}:{{ .Values.wmlRepository.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsUser: {{ .Values.global.user.id }}
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
        envFrom:
        - secretRef:
            name: wdp-service-id
        livenessProbe:
          httpGet:
            path: /v3/ml_assets/heartbeat
            port: 8080
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 20
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /v3/ml_assets/heartbeat
            port: 8080
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 180
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "120"
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - sleep
              - "120"
        name: wmlrepositoryservice
        ports:
        - containerPort: 32191
          protocol: TCP
        resources:
          limits:
            cpu: "2"
            memory: 2Gi
          requests:
            cpu: "1"
            memory: 2Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /user-home
          name: user-home-mount
          readOnly: true
          subPath: _global_/config/jwt/
        - mountPath: /wml-assets
          name: wml-repo-mount
        - mountPath: /opt/ibm/repository/conf
          name: config-volume
        - mountPath: /wml-training-data
          name: wml-training-data
        - mountPath: /opt/ibm/repository/keys
          name: config-volume-keystore
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 120
      volumes:
      - name: wml-repo-mount
        persistentVolumeClaim:
          claimName: wml-repo-pvc
      - name: user-home-mount
        persistentVolumeClaim:
          claimName: user-home-pvc
      - name: wml-training-data
        persistentVolumeClaim:
          claimName: file-api-claim
      - name: config-volume
        configMap:
          name: wmlrepositoryconfigmap
      - configMap:
          defaultMode: 420
          name: wmlsslcertsconfigmap
        name: config-volume-keystore
