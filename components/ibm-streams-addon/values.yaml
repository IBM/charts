# begin_generated_IBM_copyright_prolog                             
#                                                                  
# This is an automatically generated copyright prolog.             
# After initializing,  DO NOT MODIFY OR MOVE                       
# **************************************************************** 
# Licensed Materials - Property of IBM                             
# 5724-Y95                                                         
# (C) Copyright IBM Corp.  2018, 2020    All Rights Reserved.      
# US Government Users Restricted Rights - Use, duplication or      
# disclosure restricted by GSA ADP Schedule Contract with          
# IBM Corp.                                                        
#                                                                  
# end_generated_IBM_copyright_prolog                               

global:
  
  # global.cloudpakInstanceId specifies the cloud pak instance id where the Streams service is installed
  cloudpakInstanceId: 
  
  # global.dockerPullPolicy specifies the Docker repository for the image, this will be pre-appended to the image.repository name. 
  dockerPullPolicy: "Always"
  
  # global.dockerPullSecrets specifies the Docker secret used to pull images from docker registry. 
  dockerPullSecrets:

   # global.dockerRegistryPrefix specifies the Docker repository for the image, this will be pre-appended to the image.repository name. 
  dockerRegistryPrefix:
  
 # global.serviceAccount specifies the service account for the Streams addon pods. 
  serviceAccount: cpd-editor-sa

  # global.storageClassName specifies if the name of the storage class to use for dynamically provisioning all storage. You must specify this value or an existing volume claim values. If you specify existing persistent volume claims this value is ignored.
  storageClassName: ""

addOn:
  image: 
    # addon.image.repository specifies the name of the addon Docker image.
    repository: streams-addon
    
    # addon.image.tag specifies the name of the addon Docker image tag.
    tag: "5.5.0.0"
    
  resources:
    limits:
      # addon.resources.limits.cpu specifies the CPU limits for the addon content pod.
      cpu: "250m"
      
      # addon.resources.limits.memory specifies the memory limits for the addon content pod.
      memory: "1Gi"
    requests:
      # addon.resources.requests.cpu specifies the CPU request for the addon content pod.
      cpu: "250m"
      
      # addon.resources.requests.memory specifies the memory request for the addon content pod.
      memory: "1Gi"
 
serviceProvider:
  image:
    # serviceProvider.image.repository specifies the name of the service provider Docker image.
    repository: streams-service-provider
    
    # serviceProvider.image.tag specifies the name of the service provider Docker image tag.
    tag: "5.5.0.0"
  
  resources:
    limits:
      # serviceProvider.resources.limits.cpu specifies the CPU limit for the service provider pod.
      cpu: "250m"
      
      # serviceProvider.resources.limits.memory specifies the memory limit for the service provider pod.
      memory: "2Gi"
      
    requests:
      # serviceProvider.resources.requests.cpu specifies the CPU request for the service provider pod.
      cpu: "250m"
      
      # serviceProvider.resources.requests.memory specifies the memory request for the service provider pod.
      memory: "1Gi"
      
  # serviceProvider.persistence is required. You must either specify an existingClaimName or specify a storage class name.
  persistence:
    
    # serviceProvider.persistence.existingClaimName specifies an existing claim name. If this is specified global.storageClassName and all other persistence values are ignored.
    existingClaimName: ""

    # serviceProvider.size specifies the size to request for the persistent volume claim. This is only used if global.storageClassName is specified.
    # is not specified.
    size: 100Mi
  
notebookTemplate:
  image:
    # notebookTemplate.image.repository specifies the name of the service provider Docker image.
    repository: streams-notebook-template 
    
    # notebookTemplate.image.tag specifies the name of the service provider Docker image tag.
    tag: "5.5.0.0"
    
  resources:
    limits:
      # addon.resources.limits.cpu specifies the CPU limits for the notebook pre-install helm hook content pod.
      cpu: "250m"
      
      # addon.resources.limits.memory specifies the memory limits for the notebook pre-install helm hook content pod.
      memory: "1Gi"
      
    requests:
      # addon.resources.requests.cpu specifies the CPU request for the notebook pre-install helm hook content pod.
      cpu: "250m"
      
       # addon.resources.requests.memory specifies the memory request for the notebook pre-install helm hook content pod.
      memory: "1Gi"
    
   # notebookTemplate.startupSleep specifies to sleep (in seconds) the pre-install hook job. Only used for debugging.
  startupSleep:
      
zenCoreApi:
  # serviceProvider.zenCoreApi.tillerNamespace specifies namespace for Tiller. 
  tillerNamespace: 
    
  # serviceProvider.zenCoreApi.noTls specifies if Helm is TLS enabled. 
  noTls: false
   
  # serviceProvider.zenCoreApi.helmSecrets specifies name of the helm secret containing the certificates. This is only used if serviceProvider.zenCoreApi.noTls is set to true.
  helmSecrets: 

tags:
  # tags - DO NOT UPDATE 
  buildserviceAnacondaTag: "5.5.0.0"
  buildserviceBuildTag: "5.5.0.0"
  buildserviceBuilderTag: "5.5.0.0"
  buildserviceImageBuilderTag: "5.5.0.0"
  buildserviceSpssTag: "5.5.0.0"
  instanceApplicationTag: "5.5.0.0"
  instanceConsoleTag: "5.5.0.0"
  instanceManagementTag: "5.5.0.0"
  instanceOperationsTag: "5.5.0.0"
  instanceRestTag: "5.5.0.0"
  instanceSecurityTag: "5.5.0.0"
  
