{{- if .Values.secret }}
{{- $files := $.Files }}
{{- $imagesList := $files.Get "imagesList.yaml" }}
{{- $imageDetails := fromYaml $imagesList }}
kind: Job
apiVersion: batch/v1
metadata:
  name: "create-watson-studio-secrets"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: {{.Chart.Name}}
    helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
    app: create-watson-studio-secrets
    chart: {{ template "watson-studio.chart" $ }}
    release: {{ $.Chart.Name }}
    run: "create-watson-studio-secrets"
    heritage: {{ $.Release.Service }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
{{- if and ($.Values.global.annotations) (eq $.Values.microservice.deployment.env "icp4d") }}
{{ toYaml $.Values.global.annotations | trim | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: notebooks
        helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
        icpdsupport/addOnId: ws
        icpdsupport/app: create-watson-studio-secrets
        app: create-watson-studio-secrets
        chart: create-watson-studio-secrets
        component: create-watson-studio-secrets
        release: {{ $.Chart.Name }}
        heritage: {{ .Release.Service }}
{{- if and ($.Values.global.annotations) (eq $.Values.microservice.deployment.env "icp4d") }}
      annotations:
        hook.deactivate.cpd.ibm.com/command: "[]"
        hook.activate.cpd.ibm.com/command: "[]"
{{- if ($.Values.global.cloudpakInstanceId) }}
        cloudpakInstanceId: {{ $.Values.global.cloudpakInstanceId }}
{{- end }}
{{ toYaml $.Values.global.annotations | trim | indent 8 }}
{{- end }}
    spec:
      serviceAccount: "cpd-editor-sa"
      serviceAccountName: "cpd-editor-sa"
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
      containers:
        - name: "create-watson-studio-secrets"
          image: "{{ $.Values.global.dockerRegistryPrefix }}/{{ (index $imageDetails "dap-base-job").image.repository }}:{{ $.Values.global.imageTag }}"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "500m"
              memory: "4Gi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000320999
            capabilities:
              drop:
              - ALL
          command:
            ["/home/node/scripts/generate-ws-secrets.sh", "--isInstall={{ .Release.IsInstall }}"]
{{- end }}
