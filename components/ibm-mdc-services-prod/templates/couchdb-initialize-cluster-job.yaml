apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.couchdb.name }}-initialize-cluster
  labels:
    app.kubernetes.io/name: {{ .Values.global.productLabelName }}
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    icpdsupport/app : {{ .Values.global.productLabelName }}
    icpdsupport/serviceInstanceId: "{{ .Values.zenServiceInstanceId | int64 }}"
    app.kubernetes.io/component: {{ .Values.couchdb.name }}-initialize-cluster
    app.kubernetes.io/part-of: {{ .Values.couchdb.name }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "7"
spec:
  template:
    metadata:
      annotations:
        productName: IBM Master Data Management
        productID: MDM1000200300
        productVersion: 1.0.0
        productMetric: VIRTUAL_PROCESSOR_CORE
        productChargedContainers: All
        cloudpakName: "IBM Cloud Pak for Data"
        cloudpakId: "eb9998dcc5d24e3eb5b6fb488f750fe2"
        cloudpakVersion: 3.0.1
      labels:
        app: {{ .Values.global.productLabelName }}
        app.kubernetes.io/name: {{ .Values.global.productLabelName }}
        helm.sh/chart: {{ .Chart.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        release: {{ .Release.Name }}
        icpdsupport/app : {{ .Values.global.productLabelName }}
        icpdsupport/serviceInstanceId: "{{ .Values.zenServiceInstanceId | int64 }}"
        icpdsupport/addOnName: "{{ .Values.zenServiceInstanceType }}"
        app.kubernetes.io/component: {{ .Values.couchdb.name }}-initialize-cluster
        app.kubernetes.io/part-of: {{ .Values.couchdb.name }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccount: {{ .Values.sa.viewer }}
      serviceAccountName: {{ .Values.sa.viewer }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      {{ if eq .Values.global.remoteDockerRepo true }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecretName }}
      {{ end }}
      containers:
      - name: {{ .Values.couchdb.name }}-initialize-cluster
        image: {{ if .Values.global.docker_registry_prefix }}{{ trimSuffix "/" .Values.global.docker_registry_prefix }}/{{ end }}{{ .Values.couchdb.image }}:{{ .Values.couchdb.tag }}
        imagePullPolicy: {{ .Values.couchdb.imagePullPolicy }}
        securityContext:
          runAsUser: 1000321000
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        command: ["sh", "-c", "curl --cacert /etc/couchdb/cert/metadata.crt https://{{ .Values.couchdb.name }}:6984/_cluster_setup -X POST -H \"Content-Type: application/json\" -d '{\"action\": \"finish_cluster\"}' -u ${ADMIN_USERNAME}:${ADMIN_PASSWORD}; if [ $? -eq 0 ]; then echo 'CouchDB cluster initialized successfully!'; exit 0; else echo 'CouchDB cluster initialization failed!'; exit 1; fi"]
        env:
          - name: ADMIN_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.couchdb.name }}-secret
                key: cloudant.username
          - name: ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.couchdb.name }}-secret
                key: cloudant.password
        volumeMounts:
        - name: couchdb-secret
          mountPath: /etc/couchdb/cert
        resources:
          limits:
            cpu: {{ .Values.couchdb.job.requests.cpu }}
            memory: {{ .Values.couchdb.job.requests.memory }}
          requests:
            cpu: {{ .Values.couchdb.job.limits.cpu }}
            memory: {{ .Values.couchdb.job.limits.memory }}
      volumes:
        - name: couchdb-secret
          secret:
            secretName: {{ .Values.couchdb.name }}-secret
            items:
              - key: cloudant.crt
                path: metadata.crt
      restartPolicy: Never
  backoffLimit: {{ .Values.couchdb.job.backoffLimit }}
