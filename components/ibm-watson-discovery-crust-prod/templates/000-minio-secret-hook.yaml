{{- include "sch.config.init" (list . "discovery.crust.sch.chart.config.values") -}}
{{- $secretName := include "minio.secret" . -}}
{{- $jobName := (include "sch.names.fullCompName" (list . .sch.chart.components.minioSecretJob.name)) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  labels:
{{ include "sch.metadata.labels.standard" (list . ) | indent 4 }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . ) | indent 8 }}
      name: secret-gen
    spec:
      serviceAccountName: {{ .Values.global.privilegedServiceAccount.name }}
      affinity:
{{- include "sch.affinity.nodeAffinity" (list . ) | indent 8 }}

      hostNetwork: false
      hostPID: false
      hostIPC: false
{{ include "sch.security.securityContext" (list . .sch.chart.restrictedPodSecurityContext) | indent 6 }}
      imagePullSecrets:
      - name:  {{ .Values.global.image.pullSecret }}
      containers:
      - name: cred-gen
        resources:
          requests:
            memory: {{ .Values.minio.secretGen.resources.requests.memory }}
            cpu: {{ .Values.minio.secretGen.resources.requests.cpu }}
          limits:
            memory: {{ .Values.minio.secretGen.resources.limits.memory }}
            cpu: {{ .Values.minio.secretGen.resources.limits.cpu }}
        image: {{ .Values.global.dockerRegistryPrefix }}/
          {{- .Values.minio.secretGen.image.name }}:
          {{- .Values.minio.secretGen.image.tag }}
{{ include "sch.security.securityContext" (list . .sch.chart.restrictedSecurityContext) | indent 8 }}
        command:
        - "/bin/bash"
        - -c
        - |
          masterKey="$(LC_ALL=C tr -dc 'a-f0-9' < /dev/urandom | head -c64 | tr -d '\n')"
          cat <<EOF | kubectl apply -n {{ .Release.Namespace }} -f -
          ---
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            labels:
{{ include "sch.metadata.labels.standard" (list . ) | indent 14 }}
            name: {{ $secretName }}
          data:
            accesskey: $(openssl rand -hex 10 | tr -d '\n' | base64 | tr -d '\n')
            secretkey: $(openssl rand -hex 10 | tr -d '\n' | base64 | tr -d '\n')
            sseMasterKey: $(echo -n "wire-master-key:${masterKey}" | base64 | tr -d '\n')
          EOF

      restartPolicy: Never
