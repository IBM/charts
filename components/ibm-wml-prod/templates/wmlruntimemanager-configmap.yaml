apiVersion: v1
data:
  py-script-runtime-config-fvt.json: |-
    {
      "py-script": {
        "deprecated_versions": {
          "1.0": {
            "reference": "Software specification ai-function_0.2-py3.6 is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated software specifications are supported for deployment. Use default_py3.7 software specification instead when saving a Python script. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/wmls/wmls-deploy-python-types.html."
          },
          "1.0.py36": {
            "reference": "Software specification default_py3.6 is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are supported for deployment. Use default_py3.7 software specification instead when saving a Python script. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/wmls/wmls-deploy-python-types.html."
          }
        },
        "1.0": {
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py368_g2_rt.image.tag }}",
          "os_min_pods": "0",
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py368_g2_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringpyscript10",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "1.0.py36": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringpyscript10",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "1.0.py37": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringpyscript10",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "py-script_1.0": {
            "default_py3.6": "1.0.py36",
            "default_py3.7": "1.0.py37"
          }
        },
        "policy": {
          "cold": {
            "lite": {
              "retention_period": "0"
            },
            "standard": {
              "retention_period": "0"
            },
            "professional": {
              "retention_period": "0"
            },
            "enterprise": {
              "retention_period": "0"
            }
          }
        }
      },
      "status": "SUCCESS",
      "os_default_size": "204800"
    }
  r-script-runtime-config-fvt.json: |-
      {
        "r-script": {
          "1.0": {
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_r36_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_r36_py379_g1_rt.image.tag }}",
            "os_min_pods": "0",
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_r36_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_r36_py379_g1_rt.image.tag }}",
            "pythoncommon": "/opt/ibm/scoring/python/conf-common",
            "configvolume": "/opt/ibm/scoring/python/conf-rt",
            "configvolumemap": "wmlscoringrscript10",
            "pythoncommonmap": "wmlscoringpythoncommon",
            "keystore": "/opt/ibm/scoring/keys/private_ssl",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "size": {
            "small": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "medium": {
              "memory": "4Gi",
              "cpu": "2"
            },
            "large": {
              "memory": "6Gi",
              "cpu": "2"
            },
            "xlarge": {
              "memory": "8Gi",
              "cpu": "2"
            },
            "batch_small": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "batch_medium": {
              "memory": "4Gi",
              "cpu": "2"
            },
            "batch_large": {
              "memory": "6Gi",
              "cpu": "2"
            }
          },
          "runtime_mapping": {
            "r-script_1.0": {
              "default_r3.6": "1.0"
            }
          },
          "policy": {
            "cold": {
              "lite": {
                "retention_period": "0"
              },
              "standard": {
                "retention_period": "0"
              },
              "professional": {
                "retention_period": "0"
              },
              "enterprise": {
                "retention_period": "0"
              }
            }
          }
        },
        "status": "SUCCESS",
        "os_default_size": "204800"
      }
  autoai-kb-runtime-config-fvt.json: |-
    {
      "autoai-kb": {
        "deprecated_versions": {
          "3.0": {
            "reference": "Support for AutoAI models with Python 3.6 is deprecated and will be removed in future release. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Retrain the model and deploy. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/analyze-data/pm_service_supported_frameworks.html."
            }
        },
        "3.0": {
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_autoai_kb_30_py3612_g1_rt.image.repository }}:{{ .Values.wml_runtime_autoai_kb_30_py3612_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_autoai_kb_30_py3612_g1_rt.image.repository }}:{{ .Values.wml_runtime_autoai_kb_30_py3612_g1_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "none",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "3.1": {
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_autoai_kb_31_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_autoai_kb_31_py379_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_autoai_kb_31_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_autoai_kb_31_py379_g1_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "none",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },

        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "autoai-kb_X.X": {
            "autoai-kb_3.0-py3.6": "3.0",
            "autoai-kb_3.1-py3.7": "3.1"
          }
        },
        "policy": {
          "cold": {
            "lite": {
              "retention_period": "0"
            },
            "standard": {
              "retention_period": "0"
            },
            "professional": {
              "retention_period": "0"
            },
            "enterprise": {
              "retention_period": "0"
            }
          }
        }
      },
      "status": "SUCCESS",
      "os_default_size": "204800"
    }
  autoai-obm-runtime-config-fvt.json: |-
    {
      "autoai-obm": {
        "2.0": {
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlAutoML_OBM.image.repository }}:{{ .Values.wmlAutoML_OBM.image.tag }}",
          "os_min_pods": "0",
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlAutoML_OBM.image.repository }}:{{ .Values.wmlAutoML_OBM.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "none",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "autoai-obm_X.X": {
            "autoai-obm_2.0": "2.0"
          }
        },
        "policy": {
          "cold": {
            "lite": {
              "retention_period": "0"
            },
            "standard": {
              "retention_period": "0"
            },
            "professional": {
              "retention_period": "0"
            },
            "enterprise": {
              "retention_period": "0"
            }
          }
        }
      },
      "status": "SUCCESS",
      "os_default_size": "204800"
    }
  ai-function-runtime-config-fvt.json: |-
    {
      "ai-function": {
        "deprecated_versions": {
          "0.1.368.tf15": {
            "reference": "Software specification ai-function_0.2-py3.6 is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated software specifactions are allowed for deployment. Use default_py3.7 software specification instead when saving a Python function. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/wmls/wmls-deploy-python-types.html."
          },
          "0.1.368.skl.0.22": {
            "reference": "Software specification default_py3.6 is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated software specifactions are allowed for deployment. Use default_py3.7 software specification instead when saving a Python function. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/wmls/wmls-deploy-python-types.html."
          }
        },
        "0.1.368": {
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py368_g2_rt.image.tag }}",
          "os_min_pods": "0",
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py368_g2_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringaifunc",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "0.1.368.tf15": {
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py368_g2_rt.image.tag }}",
          "os_min_pods": "0",
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py368_g2_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringaifunc",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "0.1.368.skl.0.22": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "os_min_pods": "0",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringaifunc",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "0.1.392": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringaifunc",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "0.1.379": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "configvolumemap": "wmlscoringaifunc",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "ai-function_0.1": {
          "ai-function_0.2-py3.6": "0.1.368.tf15",
          "default_py3.6": "0.1.368.skl.0.22",
          "default_py3.7": "0.1.379"
          }
        },
        "policy": {
          "cold": {
            "lite": {
              "retention_period": "0"
            },
            "standard": {
              "retention_period": "0"
            },
            "professional": {
              "retention_period": "0"
            },
            "enterprise": {
              "retention_period": "0"
            }
          }
        }
      },
      "status": "SUCCESS",
      "os_default_size": "204800"
    }
  caffe-runtime-config-fvt.json: |-
    {
      "caffe": {
        "1.0": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringcaffe10",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "caffe_1.0": {
            "caffe_1.0-py3": "1.0",
            "caffe_1.0-py3.6": "1.0"
          }
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        }
      },
      "status":"NORMAL",
      "os_default_size": "83886080"
    }
  deployment-fvt.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: wml-scoring-d1
      namespace: {{ .Release.Namespace }}
    spec:
      revisionHistoryLimit: 3 #keep last 3 rs
      replicas: 1
      selector:
        matchLabels:
          app: wml-scoring
          isDynamic: true
      template:
        metadata:
          labels:
            app: wml-scoring
            chart: "{{ .Chart.Name }}"
            release: "{{ .Release.Name }}"
            heritage: "{{ .Release.Service }}"
            app.kubernetes.io/managed-by: {{.Release.Service | quote }}
            app.kubernetes.io/instance: {{.Release.Name | quote }}
            app.kubernetes.io/name: "{{ .Release.Name }}"
            helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
            icpdsupport/addOnId: wml
            icpdsupport/app: api
          annotations:
            cloudpakName: "IBM Cloud Pak for Data"
            cloudpakId: "eb9998dcc5d24e3eb5b6fb488f750fe2"
            productCloudpakRatio: "1:1"
            productID: "eb9998dcc5d24e3eb5b6fb488f750fe2"
            cloudpakInstanceId: "{{ .Values.global.cloudpakInstanceId }}"
            productName: "IBM Watson Machine Learning"
            productVersion: "3.5.0"
            productMetric: "VIRTUAL_PROCESSOR_CORE"
            productChargedContainers: All
            hook.deactivate.cpd.ibm.com/command: "['date']"
            hook.activate.cpd.ibm.com/command: "['date']"
            hook.quiesce.cpd.ibm.com/command: "[]"
            hook.unquiesce.cpd.ibm.com/command: "[]"
        spec:
          initContainers:
          - name: install
            image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_rt_init_dep_service_py.image.repository }}:{{ .Values.wml_rt_init_dep_service_py.image.tag }}"
            command:
            - sh
            - copy_wml_files.sh
            - /py-scoring-base-dir
            - /bin-dir
            - /fenced-bin-dir
            volumeMounts:
            - name: py-scoring-base-dir
              mountPath: /py-scoring-base-dir
            - name: bin-dir
              mountPath: /bin-dir
            - name: fenced-bin-dir
              mountPath: /fenced-bin-dir
          containers:
          - name: runtime-container
            image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}"
            command:
            - sh
            - /opt/ibm/scoring/bin/run_py_scoring_service_ubi_fen.sh
            envFrom:
            - secretRef:
                name: wml-scoring-svc-secret
            - secretRef:
                name: wdp-service-id
            livenessProbe:
              exec:
                command:
                - /bin/sh
                - /opt/ibm/scoring/bin/liveness_check.sh
                - "16500"
                - /ml/v4/deployments/heartbeat
                - "5"
                - "180"
                - /opt/ibm/scoring/python/logs/server_api.log
              httpGet:
                path: /ml/v4/deployments/heartbeat
                port: 16500
                scheme: HTTPS
              failureThreshold: 10
              initialDelaySeconds: 185
              periodSeconds: 60
              timeoutSeconds: 5
              successThreshold: 1
            readinessProbe:
              httpGet:
                path: /ml/v4/deployments/heartbeat
                port: 16500
                scheme: HTTPS
              failureThreshold: 10
              initialDelaySeconds: 180
              periodSeconds: 60
              timeoutSeconds: 5
              successThreshold: 1
            volumeMounts:
            - name: configvolume
              mountPath: "/opt/ibm/scoring/python/conf-rt"
            - name: pythoncommon
              mountPath: "/opt/ibm/scoring/python/conf-common"
            - name: user-home-mount
              mountPath: "/user-home/_global_/config/jwt/"
              readOnly: true
              subPath: "_global_/config/jwt/"
            - name: wmlkafka
              mountPath: "/opt/ibm/wml-kafka"
            - name: service-token
              mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
            - name: internalpubkey
              mountPath: "/etc/pki/ca-trust/source/anchors"
            - name: keystore
              mountPath: "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/keys/private"
            - name: py-scoring-base-dir
              mountPath: /opt/ibm/scoring/python/py_scoring_base
            - name: bin-dir
              mountPath: /opt/ibm/scoring/bin
            - name: fenced-bin-dir
              mountPath: /opt/ibm/scoring/fenced/bin
            resources:
              limits:
                cpu: 1
                memory: 256Mi
              requests:
                cpu: 1
                memory: 256Mi
            env:
             - name: WMLENV
               value: fvt
             - name: WML_STARTUP_MODE
               value: standalone
             - name: DATACENTRE
               value: $datacentre
             - name: INSTANCE_ID
               value: instanceid
             - name: INSTANCE_PREFIX
               value: services/wml-deployment/instances
             - name: RUNTIME
               value: Spark
             - name: POD_TYPE
               value: INITIAL_POD
             - name: NODE_NUM
               value: 1
             - name: MEMORY
               value: 256Mi
             - name: CPU
               value: 1
             - name: MEMORY_THRESHOLD
               value: "60"
             - name: AGT_SERVICE_GRPC_HOST
               value: localhost:16501
             - name: DEPLOYMENT_TYPE
               value: online_scoring
             - name: WMLNEWRELIC
               value: "DISABLED"
             - name: DEPLOYMENT_PLATFORM
               value: "private"
             - name: DEPLOYMENT_PRIVATE
               value: "local"
             - name: SSL_KEYSTORE_PASSWORD
               value: DUMMY_VALUE
             - name: SSL_TRUSTSTORE_PASSWORD
               value: DUMMY_VALUE
             - name: GRPC_SERVER_KEY
               value: DUMMY_VALUE
             - name: OS_KEY_HEADER_NAME
               value: dummy
             - name: OS_KEY_HEADER_VALUE
               value: dummy
             - name: WML_DEPLOYMENT_REQUEST_ID
               value: "dummy"
             - name: WML_DEPLOYMENT_SPACE_ID
               value: "dummy"
             - name: WML_DEPLOYMENT_ID
               value: "dummy"
             - name: WML_DEPLOYMENT_USER_ID
               value: "dummy"
             - name: RUNTIME_SCHEDULER
               value: "ENABLED"
             - name: RUNTIME_SCHEDULER_INTERVAL
               value: "900"
             - name: WS_SERVICE_ID
               value: dummy
             - name: WS_SERVICE_ID_CREDENTIALS
               value: dummy
            ports:
              containerPort: 16500
          volumes:
          - name: configvolume
            configMap:
              name: wmlscoringtf113
          - name: pythoncommon
            configMap:
              name: wmlscoringpythoncommon
          - name: wmlkafka
            configMap:
              name: wmlkafkaconfigmap
          - name: service-token
            configMap:
              name: wmlscoringserviceaccount
          - name: internalpubkey
            secret:
              secretName: internal-nginx-svc-tls
          - name: keystore
            configMap:
              name: keystoreconfig
          - name: py-scoring-base-dir
            emptyDir: {}
          - name: fenced-bin-dir
            emptyDir: {}
          - name: bin-dir
            emptyDir: {}
          securityContext:
            runAsUser: 1000320999
          serviceAccountName: {{ .Values.global.editor.sa }}
  hybrid-runtime-config-fvt.json: |-
    {
      "hybrid": {
        "0.1": {
          "current_version":  "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeHybrid.image.repository }}:{{ .Values.wmlRuntimeHybrid.image.tag }}",
          "next_version":  "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeHybrid.image.repository }}:{{ .Values.wmlRuntimeHybrid.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/wml-online-scoring/runtimes/hybrid/conf",
          "configvolumemap": "wmlscoringmllib",
          "keystore": "/opt/ibm/wml-online-scoring/runtimes/hybrid/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "0.2": {
          "current_version":  "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeHybrid.image.repository }}:{{ .Values.wmlRuntimeHybrid.image.tag }}",
          "next_version":  "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeHybrid.image.repository }}:{{ .Values.wmlRuntimeHybrid.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/wml-online-scoring/runtimes/hybrid/conf",
          "configvolumemap": "wmlscoringmllib",
          "keystore": "/opt/ibm/wml-online-scoring/runtimes/hybrid/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        },
        "runtime_mapping": {
          "wml-hybrid_0.1": {
            "hybrid_0.1": "0.1"
          }
        }
      },
      "status":"NORMAL",
      "os_default_size": "83886080"
    }
  rshiny-runtime-config-fvt.json: |-
        {
          "r-shiny": {
            "0.1": {
              "current_version":  "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeRShiny.image.repository }}:{{ .Values.wmlRuntimeRShiny.image.tag }}",
              "next_version":  "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeRShiny.image.repository }}:{{ .Values.wmlRuntimeRShiny.image.tag }}",
              "os_min_pods": "0",
              "configvolume": "/opt/ibm/wml-apps/runtimes/rshiny/conf",
              "configvolumemap": "wmlrshiny",
              "keystore": "/opt/ibm/wml-apps/runtimes/rshiny/keys/private",
              "keystoremap": "wmlsslcertsconfigmap"
            },

            "size": {
              "small": {
                "memory": "2Gi",
                "cpu": "2"
              },
              "medium": {
                "memory": "4Gi",
                "cpu": "2"
              },
              "large": {
                "memory": "6Gi",
                "cpu": "2"
              },
              "xlarge": {
                "memory": "8Gi",
                "cpu": "2"
              },
              "batch_small": {
                "memory": "2Gi",
                "cpu": "2"
              },
              "batch_medium": {
                "memory": "4Gi",
                "cpu": "2"
              },
              "batch_large": {
                "memory": "6Gi",
                "cpu": "2"
              }
            },
            "policy": {
              "cold":
              {
                "lite":
                {
                  "retention_period": "0"
                },
                "standard":
                {
                  "retention_period": "0"
                },
                "professional":
                {
                  "retention_period": "0"
                },
                "enterprise":
                {
                  "retention_period": "0"
                }

              }
            },
            "runtime_mapping": {
            }
          },
          "status":"NORMAL",
          "os_default_size": "83886080"
        }
  keras-runtime-config-fvt.json: |-
    {
      "keras": {
        "deprecated_versions": {
          "2.2.5": {
            "reference": "Keras 2.2.5 framework for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use tf.keras APIs in Tensorflow 2.1 with default_py3.7 software specification instead. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/analyze-data/pm_service_supported_frameworks.html"
          }
        },
        "2.2.5": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringtf115",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "eol_versions": {
          "2.1.6": {
            "reference": "Keras 2.1.6 is not supported in CPD 3.0 release"
          },
          "2.2.4-tf": {
            "reference": "Keras 2.2.4-tf is not supported in CPD 3.0 release"
          },
          "2.2.4": {
            "reference": "Keras 2.2.4 is not supported in CPD 3.0 release"
          }
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "keras_2.2.5": {
            "tensorflow_1.15-py3": "2.2.5",
            "tensorflow_1.15-py3.6": "2.2.5",
            "default_py3.6": "2.2.5"
          }
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        }
      },
      "status":"NORMAL",
      "os_default_size": "83886080"
    }
  log4j.properties: |
    log4j.rootLogger=INFO,all,STDOUT
    log4j.logger.cluster=INFO
    log4j.logger.security=INFO,securityAppender,STDOUT
    log4j.additivity.security=false
    log4j.logger.org.apache.kafka=ERROR,all
    log4j.logger.org.apache.spark=ERROR,all

    log4j.appender.all=org.apache.log4j.RollingFileAppender
    log4j.appender.all.File=/opt/ibm/wml-online-scoring/runtime-manager/logs/wml-online-scoring-runtime-manager.log
    log4j.appender.all.DatePattern=.yyyy-MM-dd
    log4j.appender.all.layout=org.apache.log4j.PatternLayout
    log4j.appender.all.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss,SSS}|%t|%-5p|%l|%X{Request-ID}|%m%n
    log4j.logger.com.ibm.ml.scoring.online.ScoringServer=TRACE
    log4j.appender.all.MaxFileSize=100MB
    log4j.appender.all.MaxBackupIndex=10
    log4j.logger.akka=INFO

    log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
    log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
    log4j.appender.STDOUT.Target=System.out
    log4j.appender.STDOUT.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss,SSS}|%t|%-5p|%l|%X{Request-ID}|%m%n


    log4j.appender.securityAppender=org.apache.log4j.RollingFileAppender
    log4j.appender.securityAppender.File=/opt/ibm/wml-online-scoring/runtime-manager/logs/security-online-scoring-service.log
    log4j.appender.all.DatePattern=.yyyy-MM-dd
    log4j.appender.securityAppender.layout=org.apache.log4j.PatternLayout
    log4j.appender.securityAppender.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss,SSS}|%t|%-5p|%l|%X{Request-ID}|%m%n
    log4j.appender.securityAppender.MaxFileSize=5MB
    log4j.appender.securityAppender.MaxBackupIndex=2

    #log4j.appender.cluster-events-appender=org.apache.log4j.DailyRollingFileAppender
    #log4j.appender.cluster-events-appender.File=/temp/scoring-cluster-events.log
    #log4j.appender.cluster-events-appender.DatePattern=.yyyy-MM-dd
    #log4j.appender.cluster-events-appender.layout=org.apache.log4j.PatternLayout
    #log4j.appender.cluster-events-appender.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss,SSS}|%-5p|%l|%X{Request-ID}|%m%n
  logback.xml: |-
    <?xml version="1.0" encoding="UTF-8" ?>
    <configuration>
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>

        <root level="INFO">
            <appender-ref ref="STDOUT"/>
        </root>

        <logger name="com.ning.http.client" level="WARN"/>
    </configuration>
  mllib-runtime-config-fvt.json: |
    {
      "mllib": {
        "2.3": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_3.image.repository }}:{{ .Values.wmlRuntimeMllib2_3.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_3.image.repository }}:{{ .Values.wmlRuntimeMllib2_3.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/conf",
          "configvolumemap": "wmlscoringmllib",
          "keystore": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "2.4": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/conf",
          "configvolumemap": "wmlscoringmllib",
          "keystore": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "eol_versions": {
          "2.2": {
            "reference": "Spark 2.2 is not supported in CPD 3.0 release"
          }
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
          "mllib_2.4": {
            "spark-mllib_2.4": "2.4"
          }
        },
        "policy": {
          "cold": {
            "lite": {
              "retention_period": "0"
            },
            "standard": {
              "retention_period": "0"
            },
            "professional": {
              "retention_period": "0"
            },
            "enterprise": {
              "retention_period": "0"
            }
          }
        }
      },
      "status": "NORMAL",
      "os_default_size": "204800"
    }
  runtimeManager.conf: |
    akka {
      loggers = ["akka.event.slf4j.Slf4jLogger"]
      loglevel = "INFO"

      log-dead-letters = 10
      log-dead-letters-during-shutdown = on
      # log-config-on-start = on
      http.server.request-timeout = 120 s
      http.server.idle-timeout = 121 s
      http.server.parsing.max-content-length = 100m

      ssl-config {

                  enabledProtocols = [
                      "TLSv1.2"
                  ]

                  enabledCipherSuites = [
                      "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256",
                      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
                      "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
                      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
                  ]

      }

      actor {
        default-dispatcher {
          default-executor {
            fallback: "fork-join-executor"
          }
          executor = "fork-join-executor"
          fork-join-executor {
            parallelism-min = 4
            parallelism-factor = 64
            parallelism-max = 128
            throughput = 1
          }
        }
      }

      scoring-main-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
          parallelism-min = 8
          parallelism-factor = 64
          parallelism-max = 128
          throughput = 1
        }
      }

      scoring-jobs-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
          parallelism-min = 8
          parallelism-factor = 64
          parallelism-max = 128
          throughput = 1
        }
      }

      scoring-deployments-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
          parallelism-min = 8
          parallelism-factor = 64
          parallelism-max = 128
          throughput = 1
        }
      }

      consumption-manager-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
          parallelism-min = 8
          parallelism-factor = 64
          parallelism-max = 128
          throughput = 1
        }
      }

      scoring-events-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
          parallelism-min = 8
          parallelism-factor = 64
          parallelism-max = 128
          throughput = 1
        }
      }

      http.host-connection-pool {
        # The maximum number of open requests accepted into the pool across all
        # materializations of any of its client flows.
        # Protects against (accidentally) overloading a single pool with too many client flow materializations.
        # Note that with N concurrent materializations the max number of open request in the pool
        # will never exceed N * max-connections * pipelining-limit.
        # Must be a power of 2 and > 0!
        max-open-requests = 256
        max-connections = 64
      }
    }

    service {

      async_version = 2020-07-15

      # Runtime configuration and runtime deployment template
      runtime_config = "/opt/ibm/wml-online-scoring/runtime-manager/conf"
      runtime_template = "/opt/ibm/wml-online-scoring/runtime-manager/conf/deployment-fvt.yaml"
      runtime_environment = "fvt"
      kube_cluster_timeout = 120
      kube_cluster_creation_timeout = 1200

      # Config for Validate Token connection
      validateTokenService {
        // public key may be provided via file or url
        ml.pubkey.path = "/opt/ibm/wml-online-scoring/runtime-manager/keys/mltoken.pub"
        icp.pubkey.path = "/user-home/_global_/config/jwt/public.pem"
      }

      ml_repository {
        url = "https://internal-nginx-svc:12443"
        spacesGetLimit = 50
      }

      wmlService {
        url = "https://internal-nginx-svc:12443"
        timeout = 60
        icpport = "31843"
      }

      wmlServicePrivate {
        url = "https://private.wml-fvt.ml.test.cloud.ibm.com"
        timeout = 60
      }

      platform {
        host = "https://internal-nginx-svc"
        port = 12443
      }

      envoy {
        url = "https://wml-os-envoy:32006"
      }

      replication.factor = 2
      //  http.service.interface = "localhost"
      http.service.port = 16500

      enable-ssl = true

      ssl {
        port = 16500
        keystore {
          path = "/opt/ibm/wml-online-scoring/runtime-manager/keys/private/keystore.jks"
          type = "JKS"
        }
      }

      runtime_manager {
        deployment {
          lock_delay = 15 //Minutes
        }
      }

      resiliency {
        delay = 500   // In millisecodns
        retries = 3
      }

      iam {
        url = "dummy"
        pdp {
          serviceName = "pm-20-dev"
          apiKey = ""
        }
      }

      kube-config {
        job.activeDeadlineSeconds = 900
      }

      wml_instances {
        url = "https://internal-nginx-svc:12443/v3/wml_instances"
      }

      features {
        list = ["SPACES"]
      }

      space_access {
          post = "Editor"
          get = "Viewer"
          patch = "Editor"
          delete = "Editor"
          put = "Editor"
          hibernate_score = "Viewer"
      }

      ml-event-client {
        topicSpace = "misc"
        messageProcessParallelism = 20
        v4TopicSpace = "deployments"
      }

      batchapp.jar {
        name2_3 = "/opt/ibm/third-party/libs/batch/wml-online-scoring-runner-hummingbird.jar"
        mainclass = "com.ibm.analytics.wml.batch_deploy.runner.application.BatchApp"
      }

      hummingbird {
        url_base = "https://internal-nginx-svc"
        url_suffix = "/v2/jobs"
        port = 12443
      }

      rolling-update {
        maxThreadsRollingUpdate = 10
        maxWaitSingleTenant = 1000
        maxWaitMultiTenant = 2000
      }

      async_persistant_storage.base_dir = "/manager-pvc"

      virtual_deployment {
        images {
          scikit_learn_0_20 = "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}"
          scikit_learn_0_22 = "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}"
          xgboost_0_82 = "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}"
          xgboost_0_90 = "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}"
        }
      }

      rabbitmq {
        subscriber.timeout.seconds = 10
        exchange = "scoring-fvt"
        queue_expiration_hours = 24
        threadpool.size = 50
        queues = ["non-do-job-queue", "do-job-queue"]
        do_queue_name = "do-job-queue"
        non_do_queue_name = "non-do-job-queue"
        routing_keys = ["non_do_routing_key", "do_routing_key"]
        do_queue_routing_key = "do_routing_key"
        non_do_queue_routing_key = "non_do_routing_key"
      }

      jobs_thread {
        post_factor = 50
      }

      aios {
          skip_list = []
      }

      pod_spawn {
        memory_factor = 0.7
        deploy_by_number = true
      }

      etcd_fetch_limit = 1200
      etcd_max_inbound_message_size = 10485760

      node_limits {
        lite = 1
        standard = 5
        professional = 10
        private = 2 
      }

      one_node {
        pod_cleanup {
          delay_interval = 900
          interval = 1200
        }
      }

      autoai {
         kb {
           default_sw_spec = "autoai-kb_3.0-py3.6"
           image_tag = "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlAutoaiKB.image.repository }}:"
           image_version = "{{ .Values.wmlAutoaiKB.image.tag}}"
         }
      }


    }

    grpc {
      service {
        agent_interface = "wml-deployment-agent"
        agent_port = 17502
      }
    }
    schema_validation {
          string = ["string"]
          real =  ["real", "double", "float*"]
          integer = ["byte", "short","int*","long"]
          uint = ["uint*"]
          date = ["date","datetime","timestamp"]
          boolean = ["bool","boolean"]
        }
  scikit-runtime-config-fvt.json: |
    {
        "scikit-learn": {
        "deprecated_versions": {
          "0.20": {
            "reference": "Scikit-learn 0.20/XGBoost 0.82 framework for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use Scikit-learn 0.23/XGBoost 0.90 with default_py3.7 software specification instead. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/analyze-data/pm_service_supported_frameworks.html"
          },
          "0.20-0.8-369": {
            "reference": "Scikit-learn 0.20/XGBoost 0.80 framework for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use Scikit-learn 0.23/XGBoost 0.90 with default_py3.7 software specification instead. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/analyze-data/pm_service_supported_frameworks.html"
          },
          "0.22": {
            "reference": "Scikit-learn 0.22/XGBoost 0.90 framework with Python 3.6 for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use Scikit-learn 0.23/XGBoost 0.90 with default_py3.7 software specification instead. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/analyze-data/pm_service_supported_frameworks.html"
          }
        },
          "0.20": {
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
            "os_min_pods": "0",
            "configvolume": "/opt/ibm/scoring/python/conf-rt",
            "pythoncommon": "/opt/ibm/scoring/python/conf-common",
            "configvolumemap": "wmlscoringsklearn20",
            "pythoncommonmap": "wmlscoringpythoncommon",
            "keystore": "/opt/ibm/scoring/keys/private_ssl",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "0.22": {
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
            "os_min_pods": "0",
            "configvolume": "/opt/ibm/scoring/python/conf-rt",
            "pythoncommon": "/opt/ibm/scoring/python/conf-common",
            "configvolumemap": "wmlscoringsklearn22",
            "pythoncommonmap": "wmlscoringpythoncommon",
            "keystore": "/opt/ibm/scoring/keys/private_ssl",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "0.23": {
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
            "os_min_pods": "0",
            "configvolume": "/opt/ibm/scoring/python/conf-rt",
            "pythoncommon": "/opt/ibm/scoring/python/conf-common",
            "configvolumemap": "wmlscoringsklearn23",
            "pythoncommonmap": "wmlscoringpythoncommon",
            "keystore": "/opt/ibm/scoring/keys/private_ssl",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "size": {
            "xsmall": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "small": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "medium": {
              "memory": "4Gi",
              "cpu": "2"
            },
            "large": {
              "memory": "6Gi",
              "cpu": "2"
            },
            "xlarge": {
              "memory": "8Gi",
              "cpu": "2"
            },
            "batch_small": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "batch_medium": {
              "memory": "4Gi",
              "cpu": "2"
            },
            "batch_large": {
              "memory": "6Gi",
              "cpu": "2"
            }
          },
          "runtime_mapping": {
            "scikit-learn_0.20": {
              "scikit-learn_0.20-py3": "0.20",
              "scikit-learn_0.20-py3.6": "0.20",
              "xgboost_0.82-py3": "0.20",
              "xgboost_0.82-py3.6": "0.20"
            },
            "xgboost_0.82": {
              "xgboost_0.82-py3": "0.20",
              "xgboost_0.82-py3.6": "0.20"
            },
            "xgboost_0.90": {
              "xgboost_0.90-py3": "0.22",
              "xgboost_0.90-py3.6": "0.22",
              "default_py3.6": "0.22",
              "default_py3.7": "0.23"
            },
            "scikit-learn_0.23": {
              "default_py3.7": "0.23"
            },
            "scikit-learn_0.22": {
              "scikit-learn_0.22-py3": "0.22",
              "scikit-learn_0.22-py3.6": "0.22",
              "xgboost_0.90-py3": "0.22",
              "xgboost_0.90-py3.6": "0.22",
              "default_py3.6": "0.22"
            }
          },
          "policy": {
            "cold":
            {
              "lite":
              {
                "retention_period": "0"
              },
              "standard":
              {
                "retention_period": "0"
              },
              "professional":
              {
                "retention_period": "0"
              },
              "enterprise":
              {
                "retention_period": "0"
              }

            }
          }
        },
      "status":"NORMAL",
      "os_default_size": "204800"
    }
  spss-modeler-runtime-config-fvt.json: |
    {
      "spss-modeler": {
        "18.1": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeSpss.image.repository }}:{{ .Values.wmlRuntimeSpss.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeSpss.image.repository }}:{{ .Values.wmlRuntimeSpss.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/mlonlinespss/conf",
          "configvolumemap": "wmlscoringspss",
          "keystore": "/opt/ibm/mlonlinespss/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "17.1": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeSpss.image.repository }}:{{ .Values.wmlRuntimeSpss.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeSpss.image.repository }}:{{ .Values.wmlRuntimeSpss.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/mlonlinespss/conf",
          "configvolumemap": "wmlscoringspss",
          "keystore": "/opt/ibm/mlonlinespss/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "batch": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeSpssBatch.image.repository }}:{{ .Values.wmlRuntimeSpssBatch.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeSpssBatch.image.repository }}:{{ .Values.wmlRuntimeSpssBatch.image.tag }}",
          "configvolume":"/opt/ibm/mlonlinespss/conf",
          "os_min_pods":"0",
          "configvolumemap":"wmlscoringspss",
          "keystore": "/opt/ibm/mlonlinespss/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        }
      },
      "status": "NORMAL",
      "os_default_size": "0"
    }
  do-runtime-config-fvt.json: |
    {
      "do": {
        "12.9": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeDO.image.repository }}:{{ .Values.wmlRuntimeDO.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeDO.image.repository }}:{{ .Values.wmlRuntimeDO.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/wml-online-scoring/runtimes/do/conf",
          "configvolumemap": "wmlscoringdo",
          "keystore": "/opt/ibm/do/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },        
        "12.10": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeDO.image.repository }}:{{ .Values.wmlRuntimeDO.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeDO.image.repository }}:{{ .Values.wmlRuntimeDO.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/wml-online-scoring/runtimes/do/conf",
          "configvolumemap": "wmlscoringdo",
          "keystore": "/opt/ibm/do/keys/private",
          "keystoremap": "wmlsslcertsconfigmap"
        },        
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        }
      },
      "status": "NORMAL",
      "os_default_size": "0"
    }    
  tensorflow-runtime-config-fvt.json: |-
    {
      "tensorflow": {
        "deprecated_versions": {
          "1.15": {
            "reference": "Tensorflow 1.15 framework for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use Tensorflow 2.1 with default_py3.7 software specification instead. For details, see https://www.ibm.com/support/knowledgecenter/SSQNUZ_current/wsj/analyze-data/pm_service_supported_frameworks.html"
          }
        },
        "1.15": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringtf115",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "2.1": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringtf21",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "eol_versions": {
          "1.13": {
            "reference": "Tensorflow 1.13 is not supported in CPD 3.0 release"
          },
          "1.14": {
            "reference": "Tensorflow 1.14 is not supported in CPD 3.0 release"
          }
        },
        "size": {
          "xsmall": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
            "tensorflow_1.15": {
              "tensorflow_1.15-py3": "1.15",
              "tensorflow_1.15-py3.6": "1.15",
              "default_py3.6": "1.15"
            },
            "tensorflow_2.1": {
              "default_py3.7": "2.1",
              "tensorflow_2.1-py3.7": "2.1"
            }
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        }
      },
      "status":"NORMAL",
      "os_default_size": "83886080"
    }
  pytorch-onnx-runtime-config-fvt.json: |-
    {
      "pytorch-onnx": {
        "deprecated_versions": {
          "1.2": {
            "reference": "Pytorch 1.2 framework for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use Pytorch 1.3 with default_py3.7 software specification instead. For details, see https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/pm_service_supported_frameworks.html"
          },
          "1.1": {
            "reference": "Pytorch 1.1 framework for Watson Machine Learning is deprecated and will be removed in the future. With new installations of Cloud Pak for Data, only non-deprecated frameworks are allowed. Use Pytorch 1.3 with default_py3.7 software specification instead. For details, see https://dataplatform.cloud.ibm.com/docs/content/wsj/analyze-data/pm_service_supported_frameworks.html"
          }
        },
        "1.1": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g2_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g2_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g2_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringpytorchonnx11",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "1.2": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringpytorchonnx12",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "1.3": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_mc3_py379_g1_rt.image.repository }}:{{ .Values.wml_runtime_mc3_py379_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringpytorchonnx13",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "eol_versions": {
          "1.0": {
            "reference": "Pytorch 1.0 is not supported in CPD 3.0 release"
          }
        },
        "size": {
          "xsmall": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        },
        "runtime_mapping": {
          "pytorch-onnx_1.0": {
            "pytorch-onnx_1.0-py3": "1.0",
            "pytorch-onnx_1.0-py3.6": "1.0",
            "pytorch_1.0-py3": "1.0",
            "pytorch_1.0-py3-edt": "1.0"
          },
          "pytorch-onnx_1.1": {
              "pytorch-onnx_1.1-py3.6": "1.1",
              "pytorch-onnx_1.1-py3.6-edt": "1.1"
          },
          "pytorch-onnx_1.2": {
              "pytorch-onnx_1.2-py3.6": "1.2",
              "pytorch-onnx_1.2-py3.6-edt": "1.2",
              "default_py3.6": "1.2"
          },
          "pytorch-onnx_1.3": {
              "default_py3.7": "1.3",
              "pytorch-onnx_1.3-py3.7": "1.3",
              "pytorch-onnx_1.3-py3.7-edt": "1.3"
          }
        }
      },
      "status":"NORMAL",
      "os_default_size": "83886080"
    }
  wml-runtime-config-fvt.json: |
    {
        "wml": {
          "1.6": {
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
            "os_min_pods": "0",
            "configvolume": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/conf",
            "configvolumemap": "wmlscoringmllib",
            "keystore": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/keys/private",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "2.0": {
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
            "os_min_pods": "0",
            "configvolume": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/conf",
            "configvolumemap": "wmlscoringmllib",
            "keystore": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/keys/private",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "2.1": {
            "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
            "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wmlRuntimeMllib2_4.image.repository }}:{{ .Values.wmlRuntimeMllib2_4.image.tag }}",
            "os_min_pods": "0",
            "configvolume": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/conf",
            "configvolumemap": "wmlscoringmllib",
            "keystore": "/opt/ibm/wml-online-scoring/runtimes/spark-2.1/keys/private",
            "keystoremap": "wmlsslcertsconfigmap"
          },
          "size": {
            "small": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "medium": {
              "memory": "4Gi",
              "cpu": "2"
            },
            "large": {
              "memory": "6Gi",
              "cpu": "2"
            },
            "xlarge": {
              "memory": "8Gi",
              "cpu": "2"
            },
            "batch_small": {
              "memory": "2Gi",
              "cpu": "2"
            },
            "batch_medium": {
              "memory": "4Gi",
              "cpu": "2"
            },
            "batch_large": {
              "memory": "6Gi",
              "cpu": "2"
            }
          },
          "runtime_mapping": {
          },
          "policy": {
            "cold":
            {
              "lite":
              {
                "retention_period": "0"
              },
              "standard":
              {
                "retention_period": "0"
              },
              "professional":
              {
                "retention_period": "0"
              },
              "enterprise":
              {
                "retention_period": "0"
              }

            }
          }
        },
      "status":"NORMAL",
      "os_default_size": "0"
    }
  t-shirt-size-config-fvt.json: |-
    {
      "XS" :{
        "vCPU": "1",
        "RAM": "1"
      },
      "S" :{
        "vCPU": "2",
        "RAM": "2"
      },
      "M" :{
        "vCPU": "2",
        "RAM": "4"
      },
      "L" :{
        "vCPU": "2",
        "RAM": "6"
      },
      "XL" :{
        "vCPU": "2",
        "RAM": "8"
      }
    }
  xgboost-runtime-config-fvt.json: |-
    {
      "xgboost": {
        "0.82": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g1_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringsklearn20",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "0.90": {
          "current_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "next_version": "{{ .Values.global.docker_registry_prefix }}/{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.repository }}:{{ .Values.wml_runtime_ac201903_py368_g3_rt.image.tag }}",
          "os_min_pods": "0",
          "configvolume": "/opt/ibm/scoring/python/conf-rt",
          "pythoncommon": "/opt/ibm/scoring/python/conf-common",
          "configvolumemap": "wmlscoringsklearn22",
          "pythoncommonmap": "wmlscoringpythoncommon",
          "keystore": "/opt/ibm/scoring/keys/private_ssl",
          "keystoremap": "wmlsslcertsconfigmap"
        },
        "size": {
          "small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "large": {
            "memory": "6Gi",
            "cpu": "2"
          },
          "xlarge": {
            "memory": "8Gi",
            "cpu": "2"
          },
          "batch_small": {
            "memory": "2Gi",
            "cpu": "2"
          },
          "batch_medium": {
            "memory": "4Gi",
            "cpu": "2"
          },
          "batch_large": {
            "memory": "6Gi",
            "cpu": "2"
          }
        },
        "runtime_mapping": {
        },
        "policy": {
          "cold":
          {
            "lite":
            {
              "retention_period": "0"
            },
            "standard":
            {
              "retention_period": "0"
            },
            "professional":
            {
              "retention_period": "0"
            },
            "enterprise":
            {
              "retention_period": "0"
            }

          }
        }
      },
      "status":"NORMAL",
      "os_default_size": "0"
    }
kind: ConfigMap
metadata:
  name: wmlruntimemanager
  labels:
    app: wml-os-manager
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}"
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"

