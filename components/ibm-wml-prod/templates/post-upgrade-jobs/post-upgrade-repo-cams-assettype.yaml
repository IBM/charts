apiVersion: batch/v1
kind: Job
metadata:
  name: post-upgrade-repo-cams-asssettype
  labels:
    app: post-upgrade-repo-cams-asssettype
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}"
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      name: post-upgrade-repo-cams-assettype
      labels:
        app: post-upgrade-repo-cams-assettype
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: "{{ .Release.Name }}"
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      containers:
      - name: post-upgrade-repo-cams-assettype-job
        image: "{{ .Values.global.docker_registry_prefix}}/{{ .Values.wmlAssetTypes.image.repository }}:{{ .Values.wmlAssetTypes.image.tag }}"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          runAsUser: {{ .Values.global.user.id }}
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
        command: ["/bin/sh","-c"]
        args: ["/assetType/run.sh"]
        envFrom:
            - secretRef:
                name: wdp-service-id
        env:
          - name: WDP_BASE_URL
            valueFrom:
              configMapKeyRef:
                key: host-url
                name: wdp-config
        resources:
          limits:
            cpu: 1
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 1Gi
      restartPolicy: OnFailure
