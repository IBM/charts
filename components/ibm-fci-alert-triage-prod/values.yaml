# Default values for ibm-fci-alert-triage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# This file determines the Kubernetes deployment of fci-alerts-insight.


global:
  # The fully qualified domain name of the kubernetes manager node.
  managerFQDN: ""

  # Set to true if deploying on IBM Cloud Pak for Data
  deployOnCP4D: true

  # If this chart is not part of the core, and needs to make references
  # to services provided by the core, use the coreReleaseName as the prefix
  # for the services.
  coreReleaseName: fci
  # The docker repository that holds the images to be deployed.
  dockerRegistryPrefix: ""
  # When set to true, the installer will create the PVs.  When set to
  # false, the PVs must be created ahead of time by the kubernetes admin
  # using the correct names, and then the install script run.
  createPv: false
  # The NFS server that maintains the PVs.  When createPv is set to true,
  # this must contain the name of the NFS server.  When createPv is set to
  # false, this value can be left blank.
  nfsServer: ""

  # generateInternalPasswords determines whether passwords for internal services are randomly generated
  # Set to false to use a pre-existing secret instead of randomly generated passwords
  generateInternalPasswords: true

  # hostAliases provides a way to manage /etc/hosts in all Kubernetes
  # pods that will be installed in the Kubernetes cluster.
  # This is useful in situations where DNS may not work properly,
  # or DNS entries are not used at all.  Most often, this is used
  # to add the Hadoop (HDP) servers into the /etc/hosts of each pod to
  # ensure that pods can resolve the HDP servers to the correct IP
  # addresses.

  # In addition if you are using this because of DNS issues
  # you most likely would need to create /etc/hosts entries on the
  # nodes (hosts) that are running Kubernetes (the Kubernetes Master
  # and Kubernetes Worker nodes) to contain the hostnames and ip
  # addresses of the Hadoop servers (nodes).
  #
  # Below are examples with hostnames of hdp1, hdp2, hdp3
  # and the dns of the servers end in .yourcompany.com
  # If you have 6 HDP servers then follow the pattern below
  # and enter ip and hostnames for 6 servers
  #
  # Also uncomment all the lines below for this to take affect
  #
  # hostAliases:
  # - ip: "10.187.45.4"
  #   hostnames:
  #   - "hdp1.yourcompany.com"
  # - ip: "10.187.45.38"
  #   hostnames:
  #   - "hdp2.yourcompany.com"
  # - ip: "10.187.45.37"
  #   hostnames:
  #   - "hdp3.yourcompany.com"

  swidtag:
    # Indicate license used for this installation.
    # For FCAI use, set file to: ibm.com_IBM_Financial_Crimes_Insight_for_Anti-Money_Laundering_Software-6.5.1.swidtag
    # For TLS use, set file to: ibm.com_IBM_Financial_Crimes_Insight_for_Alert_Triage_for_Software_-_Transaction_List_Screening-6.5.1.swidtag
    # For AML Transaction Monitoring use, set file to: ibm.com_IBM_FCI_for_Alert_Triage_Software_-_AML_Transaction_Monitoring-6.5.1.swidtag
    # For Customer List Screening use, set file to: ibm.com_IBM_Financial_Crimes_Insight_for_Alert_Triage_Software_-_Customer_List_Screening-6.5.1.swidtag
    file: 'ibm.com_IBM_Financial_Crimes_Insight_for_Anti-Money_Laundering_Software-6.5.1.swidtag'


  # In some cases, when persistent volumes are created, the filesystem is
  # in a state where the pods will not have permission to write files to the
  # filesystem because they do not have permission.  This is often (but not
  # always) the case with auto-provisioners.
  # Setting this to true will create an initContainer that will run with
  # root-level priviledges in order to mount the volume, fix the filesystem
  # permissions, and then terminate.  If the PVs that are allocated already
  # have appropriate permissions, this field may be set to false.
  pvRequiresPermissionsFix: false

  persistence:
    storageClassName: null
    useDynamicProvisioning: true

  commonScripts:
    image:
      repository: ibmcom/fci-common-scripts
      tag: <BUILD_TAG>
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "16Mi"
        cpu: "0.1"
      limits:
        memory: "256Mi"
        cpu: "0.2"

  #For Non Cloud-Pak deployments, set the userid for non-root containers to run
  runAsUser: 1000

  #Set the Additional Group ID settings that the containers should run as
  #This depends on the GID of the shared storage like NFS
  fsGroupConfig:
    supplementalGroups:
    - 0

# This includes init-svc-depend containers
sideCarContainers:
  resources:
    limits:
      memory: "64Mi"
      cpu: ".2"
    requests:
      memory: "16Mi"


fcai_alert_review:

  # Whether or not to enable the containers for the FCAI Alerts Insight offering
  # The enabled value must be true for both Customer Risk Rating (CRR) and Transaction List Screening (TLS)
  enabled: true


  alertReview:
    livenessProbe:
      initialDelaySeconds: 300
      periodSeconds: 60
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 2
    image:
      repository: ibmcom/fci-alert-review
      tag: <BUILD_TAG>
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: ".5"
      requests:
        memory: "128Mi"
        cpu: ".5"

    alertReviewConfig:
      NODE_ENV: "production"
      LOG_FILE_LEVEL: "info"
      HTTPS_KEY: "alert-review.pem"
      HTTPS_CERT: "alert-review.crt"
      DATABASE_NAME: "FCIDB"
      DATABASE_PORT: "56000"
      DATABASE_USERNAME: "fciauthid"
      CEDM_API_PORT: "9443"
      JWT_ISSUER: "fci.ibm.com"
      AUDIT_API_PORT: "9443"
      AUDIT_ACTIVE: "1"
      AUDIT_TIMEOUT: "100"
      CEDM_CERT_SELF_SIGNED: "true"
      PLATFORM_API_PORT: "9443"
      DB2CODEPAGE: "1208"

  tmTriage:
    livenessProbe:
      initialDelaySeconds: 300
      periodSeconds: 60
      timeoutSeconds: 30
      successThreshold: 1
      failureThreshold: 2
    image:
      repository: ibmcom/fcai-tm-triage-ui
      tag: <BUILD_TAG>
      pullPolicy: IfNotPresent
    resources:
      limits:
        memory: "512Mi"
        cpu: ".5"
      requests:
        memory: "128Mi"
        cpu: ".1"

    tmTriageConfig:
      NODE_ENV: "production"
      LOG_FILE_LEVEL: "info"
      HTTPS_KEY: "alert-review.pem"
      HTTPS_CERT: "alert-review.crt"
      JWT_ISSUER: "fci.ibm.com"
      AUDIT_API_PORT: "9443"
      AUDIT_ACTIVE: "1"
      AUDIT_TIMEOUT: "100"

  dbclient:
    image:
      repository: ibmcom/fci-alert-review-db
      tag: <BUILD_TAG>
      pullPolicy: IfNotPresent
    databaseConfig:
      FLYWAY_USER: db2inst1
      FLYWAY_BASELINE_ON_MIGRATE: 'true'
      FLYWAY_BASELINE_VERSION: '01.01.01.00.003'
      DB2_SERVICE: 'db2-datastore-0'
    resources:
      limits:
        memory: "128Mi"
        cpu: ".1"
      requests:
        memory: "32Mi"

fcai_transaction_list_screening:
  # Whether or not to enable the containers for the FCAI Transaction List Screening (TLS) offering
  # If TLS is not being used, specify enabled: false
  enabled: true

  tlsAnalytics:
    image:
      repository: ibmcom/fcai-tls-analytics
      tag: <BUILD_TAG>
      pullPolicy: IfNotPresent

    resources:
      limits:
        memory: "32768Mi"
        cpu: "8"
      requests:
        memory: "8192Mi"
        cpu: "2"
    # runAsUser is the user id that containers requiring updates to file system permissions
    # run as if pvRequiresPermissionsFix is set to true
    runAsUser: 1000

    # Extra configuration properties for FCAI Transaction List Screening
    tlsConfig:
      TLS_ssl_ks_paths: "/opt/ibm/fcai/sslCerts"
      TLS_ssl_ks_names: "fci_universal_ks.crt.pem"
      TLS_ssl_ks_key_names: "fci_universal_ks.pvtk.pem"
      GNM_NONSSL_PORT: "14500"
      GNM_SSL_PORT: "14501"
      MONGODB_TLS_DB: "fcai_tls"
      MONGODB_TLS_PORT: "27017"
      MONGODB_TLS_USER: "fcai_tls_user"
      MONGODB_ROOT_USER: "root"
      JWT_ISSUER: "fci.ibm.com"

      # If Auditing is enabled, leave a "true". If Auditing was disabled as part of the
      # FCI install for FCAI Transaction List Screening, set to "false"
      AUDITING_ENABLED: "true"

      # Kafka properties
      # BOOTSTRAP_SERVERS: defined in tls-cm.yaml
      KAFKA_SECURITY_PROTOCOL: SSL
      SSL_KEY_LOCATION: /opt/ibm/fcai/sslCerts/fci_universal_ks.pvtk.pem
      #SSL_KEY_PASSWORD:  defined in tls-deploy.yaml
      SSL_CERTIFICATE_LOCATION: /opt/ibm/fcai/sslCerts/fci_universal_ks.crt.pem
      SSL_CA_LOCATION: /opt/ibm/fcai/sslCerts/fci_universal_ks.crt.pem
      FCI_KAFKA_MSG_KS_PATH: /etc/kafka/conf/fci_kafka_msg.p12
      #FCI_KAFKA_MSG_KS_PASSWORD: defined in tls-deploy.yaml
      #FCI_KAFKA_MSG_KS_ALIASNAME:  defined in tls-deploy.yaml

      # Kafka Topics
      FCI_AUDIT_TOPIC: FCI_SEC_AuditRecords

  tlsUI:
    image:
      repository: ibmcom/fcai-tls-ui
      tag: <BUILD_TAG>
      pullPolicy: IfNotPresent

    resources:
      limits:
        memory: "256Mi"
        cpu: ".2"
      requests:
        memory: "16Mi"
        cpu: ".2"

    config:
      JWT_ISSUER: "fci.ibm.com"

tlsPvNfsPath: /fcai-tls

tlsPvcSpec:
  accessModes:
    - ReadWriteMany
  storageClassName: null
  size: 30Gi

arch: amd64
