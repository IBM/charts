{{- $coreReleaseName := include "ibm-fci-alert-triage.core-release-name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ibm-fci-alert-triage.fullname" . }}-tm-triage
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-alert-triage.name" .) "tm-triage") (include "ibm-fci-alert-triage.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  {{ if .Values.fcai_alert_review.enabled }}
  replicas: 1
  {{ else }}
  replicas: 0
  {{ end }}
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "ibm-fci-alert-triage.name" .) "tm-triage") .Release.Name ) | indent 6 }}
  template:
    metadata:
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-alert-triage.name" .) "tm-triage") (include "ibm-fci-alert-triage.chart" .) .Release.Name .Release.Service ) | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      serviceAccountName: fci-common-scripts
      volumes:
        - name: file-secrets
          secret:
            secretName: {{ template "ibm-fci-alert-triage.core-release-name" . }}-platform-secret-files
{{- if hasKey .Values "global" }}
{{-   if hasKey .Values.global "swidtag" }}
{{-     if hasKey .Values.global.swidtag "file" }}
        - name: swidtags
          configMap:
            name: {{ .Release.Name }}-swidtag-files
{{-     end }}
{{-   end }}
{{- end }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 6 }}
      {{- end }}
      initContainers:
      - name: init-svc-depend-alert-review
        image: "{{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
        command: [ "/common-scripts/init-container-svc-depend.sh" ]
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
        args: [ "{{ .Release.Namespace }}/{{ template "ibm-fci-alert-triage.fullname" . }}-ar" ]
        {{- with .Values.sideCarContainers.resources }}
        resources:
{{    toYaml . | indent 12 }}
        {{- end }}
      containers:
      - name: nodejs
        image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.fcai_alert_review.tmTriage.image.repository }}:{{ .Values.fcai_alert_review.tmTriage.image.tag }}
        imagePullPolicy: {{ .Values.fcai_alert_review.tmTriage.image.pullPolicy }}
        {{- with .Values.fcai_alert_review.tmTriage.resources }}
        resources:
{{    toYaml . | indent 12 }}
        {{- end }}
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "if [ -e /opt/ibm/tm-triage/bin/healthcheck.sh ]; then /opt/ibm/tm-triage/bin/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 30
          successThreshold: 1
          failureThreshold: 2
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "/opt/ibm/tm-triage/bin/healthcheck.sh"
          initialDelaySeconds: {{ .Values.fcai_alert_review.tmTriage.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fcai_alert_review.tmTriage.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.fcai_alert_review.tmTriage.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.fcai_alert_review.tmTriage.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.fcai_alert_review.tmTriage.livenessProbe.failureThreshold }}
        volumeMounts:
        - name: file-secrets
          mountPath: /opt/ibm/alert-review/certs/alert-review.pem
          subPath: fci_universal_ks.pvtk.pem
        - name: file-secrets
          mountPath: /opt/ibm/alert-review/certs/alert-review.crt
          subPath: fci_universal_ks.crt.pem
{{- if hasKey .Values "global" }}
{{-   if hasKey .Values.global "swidtag" }}
{{-     if hasKey .Values.global.swidtag "file" }}
        - name: swidtags
          mountPath: /opt/ibm/fci/swidtag/{{ .Values.global.swidtag.file }}
          subPath: {{ .Values.global.swidtag.file }}
{{-     end }}
{{-   end }}
{{- end }}
        envFrom:
        - configMapRef:
            name: {{ template "ibm-fci-alert-triage.fullname" . }}-tm-triage
        env:
        - name: JWT_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "ibm-fci-alert-triage.core-release-name" . }}-platform-secrets-env
              key: JWT_KEY
        ports:
        - containerPort: 4201
      restartPolicy: Always
