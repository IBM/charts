{{- $compName := "metastoredb-init-job" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.zenCoreMetaDb.Name | trunc 56 }}-init"
  labels:
    {{- include "zenhelper.labels" (list . $compName ) | indent 4 }}
spec:
  template:
    metadata:
      labels:
        {{- include "zenhelper.labels" (list . $compName) | indent 8 }}
      annotations:
        {{- include "zenhelper.annotations" . | indent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
      affinity:
        {{- include "zenhelper.nodeArchAffinity" . | indent 8 }}
        {{- include "zenhelper.podAntiAffinity" (list . $compName) | indent 8 }}
      serviceAccountName: {{ .Values.zenCoreMetaDb.sa }}
      automountServiceAccountToken: false
      containers:  
      - name: cluster-init
        securityContext:
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL          
        image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.zenCoreMetaDb.image.repository }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.zenCoreMetaDb.Resources | indent 10 }}
        command:
        - "/cockroach/metastore-utils"
        - "init"
        volumeMounts:
        - mountPath: /certs
          name: metastore-secret
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: HOST
          value: "{{ .Values.zenCoreMetaDb.Name | trunc 56 }}"
        - name: PORT
          value: "{{ .Values.zenCoreMetaDb.InternalGrpcPort }}"
        - name: COCKROACH_SKIP_KEY_PERMISSION_CHECK
          value: "true"  
      restartPolicy: OnFailure
      volumes:
      - name: metastore-secret
        secret:
          secretName: metastore-secret   
          defaultMode: 484 
