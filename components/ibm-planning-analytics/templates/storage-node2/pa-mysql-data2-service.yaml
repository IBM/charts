apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: paw
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    name: mysql-data2
    release: {{ .Release.Name }}
  name: mysql-data2
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mysql-data2
  template:
    metadata:
      annotations:
        productName: IBM Planning Analytics Workspace
        productID: com.ibm.ba.paw.{{ .Release.Name }}
        productVersion: {{ .Release.Name }}
        productMetric: "VIRTUAL_PROCESSOR_CORE"
        productChargedContainers: "All"
        cloudpakName: {{ .Values.cloudpakAnnotations.cloudpakName }}
        cloudpakId: {{ .Values.cloudpakAnnotations.cloudpakId }}
        cloudpakVersion: "{{ .Values.cloudpakAnnotations.cloudpakVersion }}"
      labels:
        app.kubernetes.io/name: paw
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        name: mysql-data2
        release: {{ .Release.Name }}
        version: {{ .Values.mysqlCluster.imageversion }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - mysql-data1
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: shared-storage
          persistentVolumeClaim:
            claimName: shared-storage
        - name: readiness-root
          emptyDir:
            medium: "{{ .Values.mysqlCluster.emptyDirMedium }}"
            sizeLimit: "{{ .Values.mysqlCluster.emptyDirSizeLimit }}"
      containers:
        - name: wait-for-pods
          image: {{.Values.docker_registry_prefix}}/pa-mysql-cluster:{{ .Values.mysqlCluster.imageversion }}
          command: ["/bin/bash", "-c", "/tools/wait-for-pods.sh" ]
          ports:
            - containerPort: 31001
              protocol: TCP
          resources:
            limits:
              cpu: "200m"
              memory: "13M"
            requests:
              cpu: "100m"
              memory: "5M"
          env:
            - name: SERVICENAMES
              value: "mysql-data1 mysql-data2 mysql-mgmt"
            - name: READINESS_PORT
              value: "31001"
            - name: READINESS_ROOT
              value: "/run/readiness"
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
            runAsUser: 27
            {{- end }}
          volumeMounts:
            - name: readiness-root
              mountPath: /run/readiness
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - date
            initialDelaySeconds: 0
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
                - date
            initialDelaySeconds: 0
            periodSeconds: 60
        - name: mysql-data2
          image: {{.Values.docker_registry_prefix}}/pa-mysql-cluster:{{ .Values.mysqlCluster.imageversion }}
          command: ["/bin/bash", "-c", "while [ ! -f /run/readiness/true ]; do sleep 2; done; exec /paw-entrypoint.sh ndbd"]
          ports:
            - containerPort: 2202
              protocol: TCP
          resources:
            limits:
              cpu: "{{ .Values.mysqlData.cpuLimit }}"
              memory: "{{ .Values.mysqlData.memoryLimit }}"
            requests:
              cpu: "{{ .Values.mysqlData.cpuRequest }}"
              memory: "{{ .Values.mysqlData.memoryRequest }}"
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
            runAsUser: 27
            {{- end }}
          volumeMounts:
            - name: shared-storage
              mountPath: /var/lib/mysql
              subPath: mysql-data2
            - name: readiness-root
              mountPath: /run/readiness
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - date
          readinessProbe:
            exec:
              command:
                - date
      hostNetwork: false
      hostIPC: false
      hostPID: false
      restartPolicy: Always
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: {{ .Values.persistence.podScheduler }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
