###############################################################################
######################## IBM DSM ##############################################
###############################################################################

###############################################################################
## Common image variables
###############################################################################
## Architecture - e.g. amd64, s390x, ppc64le. Specific worker node architecture
## to deploy to.
## You can use kubectl version command to determine the architecture on the
## desired worker node.

# Specify architecture (amd64, ppc64le, s390x) and weight to be  used for scheduling as follows :
#   0 - Do not use
#   1 - Least preferred
#   2 - No preference
#   3 - Most preferred
arch:
  amd64: "2 - No preference"
  ppc64le: "2 - No preference"
  s390x: "2 - No preference"

customLabels: ""

customNodeSelectorTerms: ""
customPodAffinity: ""
customPodAntiAffinity: ""

customTolerations: ""

docker_registry_prefix: "mycluster.icp:8500/zen"

image:
  repository: "ibm-unified-console"
  docker_image: ""
  tag: "1.4.0.0"
  arch: ""
  pullPolicy: Always
#initImage:
#  repository: "busybox"
#  tag: "latest"

global:
  image:
    secretName: ""
serviceAccountName: ""
###############################################################################
## product env setting
###############################################################################
dataServer:
  ldap:
    host: ""
    port: ""
    rootPwd: ""
    rootPwdSecretName: ""
    baseDn: ""
    rootDn: ""
    adminGroup: ""
    userGroup: ""
    sslMethod: ""
  metadb:
    host: ""
    port: ""
    nonSSLPort: ""
    sslPort: ""
    alternateHost: ""
    alternatePort: ""
    user: ""
    pwd: ""
    pwdSecretName: ""
    dbName: ""
    ssl: ""
    sslCertFileName: ""
    securityMechanism: ""
    dsExtType: ""
    db2iadm1GroupId: ""
  createCustomerDBProfile: ""
  customerDBProfileName: ""
  db2zAgent:
    host: ""
    port: ""
  sharedPVC:
    enabled: false 
    name: ""
    mountRootPath: "/mnt/pv/uc_dsserver_shared"
    onlyForShare: false
    subPath:
      downloads: "downloads"
      config: "config"
      userHome: "user-home"
  userHome: ""
runNginx: "1"
logToStdoutStderr: true
platformCode: ""
disableHostCheck: "true"
serviceName: ""
platform: ""
product: ""
zenNamespace: ""
zenServiceInstanceId: ""
useConfigMap: false
configMapName: ""
productName: "IBM Unified Console"
productID: "ICP4D-IBMUnifiedConsole_Prod_00000"
productVersion: ""
###############################################################################
## Persistent Storage
###############################################################################

## Global persistence settings
persistence:
  enabled: true
  useDynamicProvisioning: false


## Persistence enabled by default
dataVolume:
  name: "datavolume"

  ## Specify the name of the Existing Claim to be used by your application
  existingClaimName: ""

  mountPath: "/mnt/pv/unified_console_data"

 
  ## Specify the name of the StorageClass
  ## empty string means don't use a StorageClass
  storageClassName: ""

  ## Required minimum Persistence Storage volume size 
  size: 4Gi

service:
  httpsPort: 443
  httpsPort2: 8443
  type: ClusterIP
  name: console 

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 4Gi
    cpu: 2
  limits:
    memory: 16Gi
    cpu: 4


# DB2 repository for DSM
#repository:
## Architecture
#  enabled: false
#  arch:
#    amd64: "2 - No preference"
#    ppc64le: "2 - No preference"
#    s390x: "2 - No preference"

#  image:
#    repository: "store/ibmcorp/db2_developer_c"
#    tag: "11.1.2.2b"
#    pullPolicy: IfNotPresent
#    arch: ""
  ## global persistence settings
#  persistence:
#    useDynamicProvisioning: false
  ## Persistence parameters for /database
#  dataVolume:

    ## Specify the name of the StorageClass
    ## empty string means don't use a StorageClass
#    storageClassName: ""
#    size: 20Gi

  ## Configure resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
#  resources:
#    requests:
#      memory: 2Gi
#      cpu: 2000m
#    limits:
#      memory: 16Gi
#      cpu: 4000m

