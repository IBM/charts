kind: Job
apiVersion: batch/v1
metadata:
  name: "{{ .Values.servicename }}-delete-replicajob"
  labels:
    {{- include "metadata_info" . | indent 4 }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        {{- include "metadata_info" . | indent 8 }}
        icpdsupport/app: database
        icpdsupport/addOnId: "{{ .Values.dbType }}"
        icpdsupport/createdBy: "{{ .Values.zenServiceInstanceUID | int64 }}"
        icpdsupport/serviceInstanceId: "{{ .Values.zenServiceInstanceId | int64 }}"
      annotations:
        {{- include "mongo.annotations" .  | indent 8 }}
    spec:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "tolerations" . | indent 6 }}
      {{- include "mongo.Podsecurity" .  | indent 6 }}
      serviceAccount: {{ .Values.global.serviceAccount }}
      containers:
      - name: mongodb-startreplicaset
        image: {{ .Values.opsmanagerConfigs.image.repository }}:{{ .Values.opsmanagerConfigs.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/sh']
        args: ['-cx', '/var/mongodb_setup/replica-set/manage-replica-set.sh --delete --namespace {{ .Release.Namespace }} --service-name {{ .Values.servicename }}
        --managed-by {{ .Release.Service }} --instance {{ .Release.Name }} --chart {{ .Chart.Name }}-{{ .Chart.Version }} --name {{ template "fullname" . }}']
        {{- include "mongo.Containersecurity" . | indent 8 }}
      restartPolicy: Never
