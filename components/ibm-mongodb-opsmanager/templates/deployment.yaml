apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.servicename }}-ops-manager
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      release: "{{ .Release.Name }}"
  serviceName: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        api-external-console: "{{ .Values.servicename }}-ops-manager-svc"
      annotations:
        {{- include "mongo.annotations" .  | indent 8 }}
    spec:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "tolerations" . | indent 6 }}
      {{- include "mongodbSecurityContext" . | indent 6 }}
      serviceAccount: {{ .Values.global.serviceAccount }}
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.opsmanager.image.repository }}:{{ .Values.opsmanager.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        env:
        - name: NAMESPACE
          value: {{ .Release.Namespace }}
        - name: CENTRALURL
          value: "http://{{ .Values.servicename }}-ops-manager-svc:8080"
        - name: MONGOURI
          value: "{{ .Values.initialconfig.mongoUri }}"
        - name: ADMINEMAILADDR
          value: "{{ .Values.initialconfig.adminEmailAddr }}"
        - name: FROMEMAILADDR
          value: "{{ .Values.initialconfig.fromEmailAddr }}"
        - name: REPLYTOEMAILADDR
          value: "{{ .Values.initialconfig.replyToEmailAddr }}"
        - name: TRANSPORT
          value: "{{ .Values.initialconfig.transport }}"
        - name: HOSTNAME
          value: "{{ .Values.initialconfig.hostname }}"
        - name: PORT
          value: "{{ .Values.initialconfig.port }}"
        - name: POD_IP
          valueFrom: { fieldRef: { fieldPath: status.podIP } }
        readinessProbe:
          exec:
            command:
            - cat
            - /opt/mongodb/mms/healthy
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 240
        ports:
        - name: opsmanager
          containerPort: 8080
        volumeMounts:
        - mountPath: /data
          name: "{{ .Values.servicename }}-meta-data"
      volumes:
      - name: "{{ .Values.servicename }}-meta-data"
      {{- if .Values.persistence.enabled }}
         ## checking if storage location is enabled to handle upgrade scenarios
        {{- if .Values.storage.storageLocation.metaStorage.enabled }}
        persistentVolumeClaim:
          {{- if .Values.storage.storageLocation.metaStorage.pvc.existingClaim.name }}
          claimName: {{ .Values.storage.storageLocation.metaStorage.pvc.existingClaim.name }}
          {{- else }}
          claimName: "{{ .Values.servicename }}-meta-data"
          {{- end }}
        {{- else }}
        persistentVolumeClaim:
          {{- if .Values.pvcSettings.existingClaimName }}
          claimName: {{ .Values.servicename }}-{{ .Values.pvcSettings.existingClaimName }}
          {{- else }}
          claimName: "{{ .Values.servicename }}-meta-data"
          {{- end }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{ if eq .Values.runtime "ICP4Data" -}}
      resources:
        limits:
          memory: {{ .Values.limit.memory }}
          cpu: {{ .Values.limit.cpu }}
      {{- end }}
