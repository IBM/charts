apiVersion: batch/v1
kind: Job
metadata:
  name: post-delete-secret-jobs
  labels:
    app: post-delete-secret-jobs
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}"
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded, hook-failed
spec:
  activeDeadlineSeconds: 300
  template:
    metadata:
      name: post-delete-secret-jobs
      labels:
        app: post-delete-secret-jobs
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: "{{ .Release.Name }}"
        helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
        icpdsupport/addOnId: ccs 
        icpdsupport/app: spaces         
      annotations:
        hook.deactivate.cpd.ibm.com/command: "[]"
        hook.activate.cpd.ibm.com/command: "[]"
        cloudpakName: {{ .Values.global.annotations.cloudpakName }}
        cloudpakId: {{ .Values.global.annotations.cloudpakId }}
        productCloudpakRatio: {{ .Values.global.annotations.productCloudpakRatio }}
        productID: {{ .Values.global.annotations.productID }}
        productName: {{ .Values.global.annotations.productName }}
        productMetric: {{ .Values.global.annotations.productMetric }}
        productChargedContainers: {{ .Values.global.annotations.productChargedContainers }}
        productVersion: {{ .Values.global.annotations.productVersion }}
        cloudpakInstanceId: {{ .Values.global.cloudpakInstanceId }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - {{ .Values.global.architecture }}
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      restartPolicy: Never
      containers:
        - name: "spaces-wml-kubectl"
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.wmlPreinstall.image.repository }}:{{ .Values.wmlPreinstall.image.tag }}"
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.user.id }}
            capabilities:
              drop:
              - ALL
          resources:
            limits:
              cpu: 250m
              memory: "512Mi"
            requests:
              cpu: 200m
              memory: "256Mi"
          command:
          - "/bin/bash"
          - -c
          - |
            
            secret_exists() {
                  set +e
                  kubectl -n {{ .Release.Namespace }} get secret $1 > /dev/null 2>&1
                  echo $?
                  set -e
            } 
            nginxCertFound=$(secret_exists 'spaces-nginx-secrets')
            if [ $nginxCertFound -eq 0 ]
            then
               kubectl -n {{ .Release.Namespace }} delete secret spaces-nginx-secrets ;
            fi
