{{- include "sch.config.init" (list . "discovery.sch.chart.config.values") -}}
{{- $compName := .sch.chart.components.appConfig.name -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compName ) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName (dict "service" "discovery" "app" $compName "tenant" .Values.global.tenant)) | indent 4 }}
data:
  app_config.yaml: |

    ############
    ## Shared ##
    ############
    # based on global.yaml (https://github.ibm.com/watson-deploy-configs/discovery-icp/blob/d93037f7c67fa654c27d7ff740e2d184d2e22c02/case.d/stable/ibm-watson-discovery-case-bundle/charts/global.yaml)

    cluster_domain: {{ .Values.appConfig.clusterDomain }}
    app_name: {{ .Values.global.appName }}
    image_pull_policy: {{ .Values.appConfig.imagePullPolicy }}

    # true for CP4D, false for Public
    private: {{ .Values.appConfig.private }}
    # true if running on OpenShift
    openshift: {{ .Capabilities.APIVersions.Has "security.openshift.io/v1" }}
    env: dev
    activity_tracker:
      enabled: {{ .Values.appConfig.activityTracker.enabled }}
      configName: "at-logger-config"
      path: /var/log/at
    tls:
      enabled: true
      # TLS configuration for core components
      nginx:
        enabled: true
      wlp:
        enabled: true
    metricsCollection:
      enabled: false
    segment:
      enabled: {{ .Values.appConfig.segment.enabled }}
      secretName: {{ .Values.appConfig.segment.secretName}}
    cp4d:
      nginx:
        service: ibm-nginx-svc

    # kubernetes API capabilities
    capabilities:
      # autoscaling/v2beta2 is not available for Kubernetes 1.11
      has_autoscaling_v2beta2: {{ .Capabilities.APIVersions.Has "autoscaling/v2beta2" }}

    #############
    ## Etcd    ##
    #############

    etcd:
      auth:
        username: "root"
      port:
        client: 2379
      maxThreads: 2
      autoCompaction:
        mode: "revision"
        retention: "1"

    #############
    ## CoreAPI ##
    #############
    coreapi:
      ingestionApi:
        port: 9463
      management:
        port: 9443

    #############
    ##Ingestion##
    #############
    ingestion:
      crawler:
        crawlerPublisherType: "datastore"
      converter:
        metrics:
          prometheusPort: 9102

    ##################
    ## Orchestrator ##
    ##################
    orchestrator:
      port: 9544

    ##############
    ## wexCore ##
    ##############
    wexCore:
      name: wex-core
      # TODO: remove this gateway config
      # Use app_config.api instead
      gateway:
        init:
          name: gateway-init
        nginx:
          port: 60443
        port: 10443
      management:
        name: management
        port: 10443
      ingestion:
        name: ingestion-api
        port: 10443
      cnm:
        name: cnm-api
        port: 9443
      minerapp:
        name: minerapp
        port: 4000
        adminapp:
          port: 9473

    notices:
      port: 50051
      timeoutMs: 3000

    dfs:
      induction:
        name: dfs-induction
        port: 50058
      modelmesh:
        name: dfs-modelmesh
        port: 8033
      temp:
        tenantid: default
        disableEtcdCreate: true
        disableEtcdDelete: true

    ##############
    ## SDU      ##
    ##############
    sdu:
      sduApi:
        name: sdu-api
        port: 8080

    ##############
    ## CNM      ##
    ##############
    cnm:
      cnmApi:
        port: 9443

    ##############
    ## Postgres ##
    ##############

    postgres:
      clusterSize:
        development: 1
        production: 3
      databasePort: 5432
      noRedwoodCompat: false
      postgresType: "PG"
      postgresVersion: 12
      primaryConfig:
        max_connections:
          development: "200"
          production: "300"
      customLabels:
        environment: sandbox
        developer: oscar
      customAnnotations:
        maker: omh
        operator_vendor: edb
      highAvailability:
        podDebug: 'false'
        haClusterSettings:
          synchronousReplication: true
          minSynchronousStandbys: 1
          maxSynchronousStandbys: 2
          usePgrewind: true


    ##############
    ## RabbitMQ ##
    ##############

    rabbitmq:
      amqpsNodePort: 5671
      rabbitmqManagerPort: 15671
      rabbitmqVhost: "/"
      auth:
        rabbitmqUsername: "admin"
        managementUsername: "management"
      livenessProbe:
        initialDelaySeconds: 120
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 6
      readinessProbe:
        failureThreshold: 6
        initialDelaySeconds: 60
        timeoutSeconds: 3
        periodSeconds: 5
      nameOverride: "discovery"
      persistentVolume:
        useDynamicProvisioning: true
        accessModes: ReadWriteOnce

    ###########
    ## Query ##
    ###########
    query:
      rapi:
        port: 9453

    ###########
    ## MinIO ##
    ###########

    minio:
      imagePullPolicy: "IfNotPresent"
      nameOverride: "discovery"

    ###################
    ## Elasticsearch ##
    ###################

    elasticsearch:
      # start: elasticsearch operator configs
      proxy_http_port: 9200
      proxy_transport_port: 9300
      update_strategy: "RollingUpdate"
      livenessProbe:
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 30
        failureThreshold: 3
        successThreshold: 1
      readinessProbe:
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 10
        failureThreshold: 3
        successThreshold: 3
      # end: elasticsearch operator configs
      headlessSvcPort: 9300
      svcPort: 9100
      auth:
        username: dadmin
      prodReplicas:
        master: 3
        data: 2
        client: 2
      nginx:
        port: 9200
      maxAllowedNestedFields: 400
      reRankingLocallyEnabled: false
      noticesv2ArchChangeEnabled: false
      enableHttpLog: true
      cluster:
        name: "es-cluster"
      peerTransport:
        port: 19300
      network:
        publishHost: "127.0.0.1"
      http:
        log:
          frontend: true
        port: 19200


    ####################
    ## Watson Gateway ##
    ####################

    watsonGateway:
      addonService:
        port: 5000
      service:
        accountId: "02a92df0-657c-43c9-94fc-2280450b1e0b"
        instanceId: "default"
        planId: "cec95e99-75b8-4e2f-a176-8687f31597fd"
        displayName: "Watson Discovery"
        productImages: 4
        shortDescription: "Find answers and uncover insights in your complex business content."
        longDescription: "The IBM Watson Discovery add-on is an AI-powered search and content analytics engine that enables you to find answers and uncover insights that hide in your complex business content. With the Smart Document Understanding training interface, Watson Discovery can learn where answers live in your content based on a visual understanding of your documents.<br><br>Want to do more? These Watson add-ons can help:<br><br><ul><li>Enhance Watson Discovery's ability to understand domain-specific language with Watson Knowledge Studio.</li><li>Surface answers to users through a conversational dialog driven by Watson Assistant.</li></ul>"
        deployDocs: https://docs-icpdata.mybluemix.net/docs/content/SSQNUZ_current/com.ibm.icpdata.doc/watson/discovery-install.html
        productDocs: https://docs-icpdata.mybluemix.net/docs/content/SSQNUZ_current/com.ibm.icpdata.doc/watson/discovery.html
        apiReferenceDocs: https://cloud.ibm.com/apidocs/discovery-data
        gettingStartedDocs: https://cloud.ibm.com/docs/services/discovery-data
        label: "discovery"
        maxInstances: 1

    ##############
    ##  Hadoop  ##
    ##############
    hdp:
      name: hdp
      preferIpv4: true
      rm:
        name: hdp-rm
        service:
          headlessName: hdp-rm-svc-headless
      worker:
        name: hdp-worker
        update_strategy: RollingUpdate
        pod_management_policy: Parallel
      test:
        name: hdp-test
      logger:
        port: 19931
      cleaner:
        successfulJobsHistoryLimit: 0
        failedJobsHistoryLimit: 0
        schedule: "@daily"
        daysToKeep:
        objectstore:
          region:

    #############
    ##Foundation##
    #############
    foundation:
      #############
      ## PO Box ##
      #############
      poBox:
        javaOpts: " -Xmx512m -Xms128m "
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 120
          timeoutSeconds: 120
          failureThreshold: 12
        livenessProbe:
          initialDelaySeconds: 210
          periodSeconds: 120
          timeoutSeconds: 120
          failureThreshold: 20
        consumers:
          dfsCollection:
            enabled: true


      #############
      ## Indexer ##
      #############
      indexer:
        javaOpts: " -Xmx512m -Xms128m "
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 120
          timeoutSeconds: 120
          failureThreshold: 12
        livenessProbe:
          initialDelaySeconds: 210
          periodSeconds: 120
          timeoutSeconds: 120
          failureThreshold: 20

      #############
      ## ResourceConsumption Manager ##
      #############
      rcm:
        javaOpts: " -Xmx512m -Xms128m "
        grpcPort: 50400
        prometheusPort: 9102
        rateLimiting:
          configsPath: ""
          enabled: false
          storageType: memory
        ssl:
          enabled: true
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 120
          timeoutSeconds: 120
          failureThreshold: 12
        livenessProbe:
          initialDelaySeconds: 210
          periodSeconds: 120
          timeoutSeconds: 120
          failureThreshold: 20

    ###########
    ## WKSML ##
    ###########
    wksml:
      name: wksml
      port: 5194

    ##################
    ## StatelessAPI ##
    ##################

    statelessapi:
      secret:
        name: statelss-api-etcd-conn
      runtime:
        name: stateless-api-model-runtime
        port: 8033
      proxy:
        name: stateless-api-rest-proxy
        port: 8394
      credGen:
        name: stateless-api-cred-gen

    ##################
    ## Tooling      ##
    ##################

    tooling:
      port: 4000

    #########################
    ## API sub-system      ##
    #########################
    api:
      prometheusPort: 10080
      segment:
        ignoredUrlPatterns: "/v1/test/.*"
      api:
        port: 10443
      nginx:
        port: 60443
