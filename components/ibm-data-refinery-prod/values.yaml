global:
  architecture: amd64
  annotations:
    cloudpakName: "IBM Cloud Pak for Data"
    cloudpakId: "eb9998dcc5d24e3eb5b6fb488f750fe2"
    cloudpakVersion: "3.0.1"
    productMetric: "VIRTUAL_PROCESSOR_CORE"
    productChargedContainers: "All"
    productID: "ICP4D-Data-Refinery-3-0-1"
    productName: "IBM Data Refinery Service for IBM Cloud Pak for Data"
    productVersion: "3.0.1"
  runAsUser: "1000320999" 
  viewer:
    sa: "cpd-viewer-sa"
runtimes:
  workerNodes: 40
  preloadRuntimes: true
image:
  pullPolicy: IfNotPresent
replicas: 1
shaperServer:
  image:
    name: shaper-server
    tag: 3.0.561-amd64
wdpDataprep:
  image:
    name: wdp-dataprep
    tag: 3.0.9-amd64
resources:
  limits:
    cpu: 1000m
    memory: 4Gi
  requests:
    cpu: 500m
    memory: 2Gi
ports:
  targetPort: 8443
  externalPort: 443
livenessProbe:
  initialDelaySeconds: 180
  timeoutSeconds: 15
  periodSeconds: 120
  successThreshold: 1
  failureThreshold: 10
readinessProbe:
  initialDelaySeconds: 120
  timeoutSeconds: 15
  periodSeconds: 60
  successThreshold: 1
  failureThreshold: 10
environment:
  wdpDataprep:
    bmAppName: "wdp-dataprep"
    bmAppHost: "wdp-dataprep"
    bmAppVersionEndPoint: "refinery/version"
    serviceInstanceGuid: "wdp-dataprep"
    jvmArgs: "-Djava.security.properties=/opt/ibm/wlp/usr/servers/defaultServer/apps/expanded/wdp-dataprep.war/resources/keystore.properties"
    componentId: "wdp-dataprep"
    entry: "wdp-dataprep"
  bmDomain: "ng.bluemix.net"
  wdpHostDomain:
    name: WDP_HOST_DOMAIN
    configMapName: wdp-config
    hostKey: host
    icp4dHostKey: icp4d-host
  icp4dUrl: "https://$(ICP4D_HOST)"
  gatewayUrl: "https://$(GATEWAY_HOST)"
  iamUrl: "https://$(ICP4D_HOST)"
  dataCenter: "dallas"
  productName: "zen"
  containerMemory: "2Gi"
  enableSudo: "true"
  enableNewRelic: "false"
  environmentName: "ypprod"
  environmentType: "yp"
  deployTarget: "icp4data"
  deploymentTarget: "icp4data"
  domain: "ng.bluemix.net"
  cfDomain: "ng.bluemix.net"
  stage: "prod"
  nodeEnv: "production"
  nodeModulesCache: false
  enableMonitoring: false
  configEntitlements: true
  cfStagingTimeout: 30
  production: "true"
  wdpDataprepUrl: "$(GATEWAY_HOST)"
  hbSparkUrl: "https://$(GATEWAY_HOST)"
  envApiUrl: "https://$(GATEWAY_HOST)"
  notificationApiUrl: "https://$(GATEWAY_HOST)"
  usageApiUrl: "https://$(GATEWAY_HOST)"
  authIamIdClientId:
    name: auth__iamId__clientId
    secret: secret-wdp-shaper
    key: SHAPER_CLIENT_KEY
  authIamIdClientSecret:
    name: auth__iamId__clientSecret
    secret: secret-wdp-shaper
    key: SHAPER_CLIENT_SECRET                                      
  configSessionKey:
    name: config__session__key
    secret: secret-wdp-shaper
    key: SHAPER_SESSION_KEY
  configSessionSecret:
    name: config__session__secret
    secret: secret-wdp-shaper
    key: SHAPER_SESSION_SECRET
  configComposeRedisUrl:
    name: config__composeRedis__url
    secret: redis-url
    key: redis-url.txt    
  configComposeRedisEncryptionKey:
    name: config__composeRedis__encryptionKey
    secret: secret-wdp-shaper
    key: SHAPER_REDIS_ENCRYPTION_KEY
  configSegmentWriteKey:
    name: config__segmentWriteKey
    secret: secret-wdp-shaper
    key: REFINERY_SEGMENT_WRITE_KEY
  configDataprepServiceId:
    name: config__dataprep__serviceid
    secret: secret-wdp-shaper
    key: DATAPREP_SERVICE_ID
  configDataprepApiKey:
    name: config__dataprep__apikey
    secret: secret-wdp-shaper
    key: DATAPREP_SERVICE_APIKEY
  wdpServiceIdCredential:
    name: WDP_SERVICE_ID_CREDENTIAL
    secret: wdp-service-id
    key: service-id-credentials
