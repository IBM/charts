{{- $compName := "pre-install-shaper-secret" -}}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{$compName}}
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}-{{$compName}}"
    helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
    {{- include "zenhelper.labels" (list . $compName) | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install{{ if (.Values.updateSecrets) }},pre-upgrade{{ end }}
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- include "zenhelper.annotations" . | indent 4 }}
spec:
  template:
    metadata:
      annotations:
        {{- include "zenhelper.annotations" . | indent 8 }}
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: "{{ .Release.Name }}-{{$compName}}"
        helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
        {{- include "zenhelper.labels" (list . $compName) | indent 8 }}
        run: {{$compName}}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true         
        runAsUser: {{ .Values.global.runAsUser }}
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      {{- if .Values.global.baseInstaller }}
      nodeSelector:
        is_compute: "true"
      {{- end }}
      affinity:
        {{- include "zenhelper.nodeArchAffinity" . | indent 8 }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: run
                  operator: In
                  values:
                  - {{$compName}}
            topologyKey: kubernetes.io/hostname
      restartPolicy: Never
      containers:
        - name: {{$compName}}-container
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.shaperPreinstall.image.name }}:{{ .Values.shaperPreinstall.image.tag }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
            requests:
              cpu: "0.5"
              memory: "512Mi"
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true             
            runAsUser: {{ .Values.global.runAsUser }}
            capabilities:
              drop:
              - ALL
          command:
          - "/bin/bash"
          - -c
          - |
            if [[ `kubectl get secret secret-wdp-shaper | grep secret-wdp-shaper | wc -l` -eq 1 ]]; then
              kubectl delete secret secret-wdp-shaper;
            fi;
            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: Secret
            metadata:
              name: "secret-wdp-shaper"
              labels:
                {{- include "zenhelper.labels" (list . $compName) | indent 16 }}
            type: Opaque
            data:
              SHAPER_CLIENT_SECRET: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
              SHAPER_SESSION_KEY: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
              SHAPER_SESSION_SECRET: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
              SHAPER_REDIS_CRYPTO_PASSWORD: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
              REFINERY_SEGMENT_WRITE_KEY: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
              DATAPREP_SERVICE_ID: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
              DATAPREP_SERVICE_APIKEY: $(cat /dev/urandom | tr -dc A-Z-a-z-0-9 | head -c${1:-32} | base64 | tr -d '\n')
            EOF
