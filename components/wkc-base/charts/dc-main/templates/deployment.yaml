apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dc-main.name" . }}
  labels:
    app: {{ template "dc-main.name" . }}
    chart: {{ template "dc-main.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.service.replicas }}
  selector:
      matchLabels:
        app: {{ template "dc-main.name" . }}
        release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "dc-main.name" . }}
        release: {{ .Release.Name }}
        run: {{ template "dc-main.name" . }}
        chart: {{ template "dc-main.chart" . }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        icpdsupport/app: "ui"
        {{ .Values.global.serviceabilityLabelName }}: {{ .Values.global.serviceabilityLabelValue }}
      annotations:
      {{- if .Values.global.annotations }}
{{ toYaml .Values.global.annotations | trim  | indent 8 }}
      {{- end }}
    spec:
      {{- if eq .Values.global.deploymentTarget "icp4data" }}
      volumes:
        - name: certificate
          secret:
            secretName: ca-certificate-chain-trust
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - ppc64le
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        {{- if .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
      containers:
      - name: {{ template "dc-main.name" . }}
        {{- if .Values.image.branch }}
        image: "{{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ .Values.image.version }}-{{ .Values.image.branch }}"
        {{- else }}
        image: "{{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- end }}
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL
        command: ["/bin/sh", "-c", "cd /home/wkc/dc-main; npm start;"]
        {{- if eq .Values.global.deploymentTarget "icp4data" }}
        volumeMounts:
          - name: certificate
            mountPath: /etc/certificate
        {{- end }}
        ports:
          - containerPort: {{ .Values.service.targetport }}
            protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.service.cpuLimits | default "500m" | quote }}
            memory: {{ .Values.service.memoryLimits | default "4Gi" | quote }}
          requests:
            cpu: {{ .Values.service.cpuRequests | default "100m" | quote }}
            memory: {{ .Values.service.memoryRequests | default "128Mi" | quote }}
        livenessProbe:
          httpGet:
            path: {{ .Values.env.MONITOR_ENDPOINT }}
            port: {{ .Values.service.targetport}}
            scheme: "HTTPS"
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.env.MONITOR_ENDPOINT }}
            port: {{ .Values.service.targetport }}
            scheme: "HTTPS"
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        env:
           - name: config__iisServer__user
             {{- if eq .Values.env.DEPLOYMENT_TARGET "icp4data" }}
             value: "isadmin"
             {{- else}}
             valueFrom:
               secretKeyRef:
                 key: username
                 name: wdp-user-auth
                 optional: true
             {{- end}}
           - name: config__iisServer__password
             {{- if eq .Values.env.DEPLOYMENT_TARGET "icp4data" }}
             valueFrom:
                secretKeyRef:
                   key:  isadmin_password
                   name: iis-usr-secrets
                   optional: true
             {{- else}}
             valueFrom:
               secretKeyRef:
                 key: password
                 name: wdp-user-auth
                 optional: true
             {{- end}}
           - name: IIS_HOST_NAME
             valueFrom:
                configMapKeyRef:
                   name: wkc-ugi-config-values
                   key: iis-host-name
                   optional: true
           - name: IIS_HOST_PORT
             valueFrom:
                configMapKeyRef:
                   name: wkc-ugi-config-values
                   key: iis-host-port
                   optional: true
           - name: auth__certs__selfSignedKey
             valueFrom:
                secretKeyRef:
                   key: PROD_SELF_SIGNED_PRIVATEKEY
                   name: portal-catalog-secret
                   optional: true
           - name: auth__certs__selfSignedCert
             valueFrom:
                secretKeyRef:
                   key: PROD_SELF_SIGNED_CERTIFICATE
                   name: portal-catalog-secret
                   optional: true
           - name: NEW_RELIC_LICENSE_KEY
             valueFrom:
                secretKeyRef:
                   key: NEW_RELIC_LICENSE_KEY
                   name: portal-catalog-secret
                   optional: true
           - name: auth__UAA__clientSecret
             valueFrom:
                secretKeyRef:
                   key: auth__UAA__clientSecret
                   name: portal-catalog-secret
                   optional: true
           - name: auth__crypto__password
             valueFrom:
                secretKeyRef:
                   key: auth__crypto__password
                   name: portal-catalog-secret
           - name: auth__iamId__clientSecret
             valueFrom:
                secretKeyRef:
                   key: auth__iamId__clientSecret
                   name: portal-catalog-secret
                   optional: true
           - name: auth__serviceId__apiKey
             valueFrom:
                secretKeyRef:
                   key: auth__serviceId__apiKey
                   name: portal-catalog-secret
                   optional: true
           - name: auth__wdpWhitelist__token
             valueFrom:
                secretKeyRef:
                   key: auth__wdpWhitelist__token
                   name: portal-catalog-secret
                   optional: true
           - name: config__composeRedis__cryptoPassword
             valueFrom:
                secretKeyRef:
                   key: config__composeRedis__cryptoPassword
                   name: portal-catalog-secret
           - name: config__composeRedis__url
             {{- if eq .Values.env.DEPLOYMENT_TARGET "cloud" }}
             valueFrom:
                secretKeyRef:
                   key: config__composeRedis__url
                   name: portal-catalog-secret
             {{- else}}
             valueFrom:
                secretKeyRef:
                   key: redis-url.txt
                   name: redis-url
             {{- end}}
           - name: WDP_SERVICE_ID_CREDENTIAL
             valueFrom:
                secretKeyRef:
                   name: wdp-service-id
                   key: service-id-credentials
                   optional: true
           - name: config__composeRedis__tlsServer
             valueFrom:
                secretKeyRef:
                   key: config__composeRedis__tlsServer
                   name: portal-catalog-secret
                   optional: true
           - name: config__composeRedis__certificate
             valueFrom:
                secretKeyRef:
                   key: config__composeRedis__certificate
                   name: portal-catalog-secret
                   optional: true
           - name: config__session__secret
             valueFrom:
                secretKeyRef:
                   key: config__session__secret
                   name: portal-catalog-secret
           {{- if eq .Values.env.DEPLOYMENT_TARGET "cloud" }}
           - name: CUSTOM_DOMAIN
             value: {{ .Values.env.CUSTOM_DOMAIN | quote }}
           - name: ZEN_DOMAIN
             value: {{ .Values.env.ZEN_DOMAIN | quote }}
           {{- else}}
           - name: CUSTOM_DOMAIN
             valueFrom:
                configMapKeyRef:
                   name: wdp-config
                   key: host
           - name: ZEN_DOMAIN
             valueFrom:
                configMapKeyRef:
                   name: wdp-config
                   key: icp4d-host
           {{- end}}
           {{- if eq .Values.global.deploymentTarget "icp4data" }}
           - name: NODE_EXTRA_CA_CERTS
             value: /etc/certificate/certificate.pem
           {{- end }}
           - name: APP_ENV_SUBDOMAIN
             value: {{ .Values.env.APP_ENV_SUBDOMAIN | quote }}
           - name: DEPLOY_TIMESTAMP
             value: {{ now | date "Mon Jan/02/2006-3:04:05 PM" }}
           - name: APP_NAME
             {{- if .Values.image.branch }}
             value: "DC-Main-{{ .Values.image.version }}"
             {{- else }}
             value: "DC-Main-{{ .Values.image.tag }}"
             {{- end }}
           - name: DOMAIN
             value: {{ .Values.env.DOMAIN | quote }}
           - name: EXT_DOMAIN
             value: {{ .Values.env.EXT_DOMAIN | default "mybluemix.net" | quote }}
           - name: GLOBAL_DOMAIN
             value: {{ .Values.env.GLOBAL_DOMAIN | default "bluemix.net" | quote }}
           - name: NODE_ENV
             value: "production"
           - name: BABEL_DISABLE_CACHE
             value: "true"
           - name: NODE_MODULES_CACHE
             value: "false"
           - name: PRODUCTION
             value: "true"
           - name: STAGE
             value: {{ .Values.env.STAGE | quote }}
           - name: auth__UAA__clientId
             value: "cdsx"
           - name: auth__wdpWhitelist__user
             value: "arrona"
           - name: config__roles
             value: "true"
           - name: config__session__key
             value: "datacatalog"
           - name: config__entitlements
             value: "true"
           - name: isK8S
             value: "true"
           - name: showWarehouseTrends
             value: {{ .Values.env.showWarehouseTrends | default false | quote }}
           - name: DEPLOYMENT_TARGET
             value: {{ .Values.env.DEPLOYMENT_TARGET | default "cloud" | quote }}
           - name: LOG_SOURCE_CRN
             value: {{ .Values.env.LOG_SOURCE_CRN | quote }}
           - name: PRODUCT_NAME
             {{- if .Values.global.ibmProduct }}
             value: {{ .Values.global.ibmProduct | quote }}
             {{- else }}
             value: {{ .Values.env.PRODUCT_NAME | default "" | quote }}
             {{- end }}
           - name: config__omrs__url
             {{- if eq .Values.global.deploymentTarget "icp4data" }}
             value: "omag:8080"
             {{- else }}
             value: "omag.default.svc.{{ .Values.CLUSTER_DOMAIN }}:8080"
             {{- end }}
           - name: config__kafkaBroker
             {{- if eq .Values.global.deploymentTarget "icp4data" }}
             value: "kafka:9093"
             {{- else }}
             value: "kafka.default:9093"
             {{- end }}
           - name: config__redisServer
             {{- if eq .Values.global.deploymentTarget "icp4data" }}
             value: "redis-ha-master-svc:6379"
             {{- else }}
             value: "redis:6379"
             {{- end }}
           - name: config__iisServer__url
             value: https://$(IIS_HOST_NAME):$(IIS_HOST_PORT)
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
          - name: {{ .Values.image.pullSecret | quote }}
      {{- end}}
