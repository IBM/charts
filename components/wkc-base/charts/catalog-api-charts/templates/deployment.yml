apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.microservice.appname }}
  labels:
    app: {{ .Values.microservice.appname }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicas }}
  selector: 
    matchLabels:
      app: {{ .Values.microservice.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.microservice.appname }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }} 
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        icpdsupport/app: "apis"
        {{ .Values.global.serviceabilityLabelName }}: {{ .Values.global.serviceabilityLabelValue }}
      annotations:
        {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | trim | indent 8 }}
        {{- end }}        
    spec:
      {{- if or .Values.archx86_64 .Values.archppc64le }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.archx86_64 }}
                - {{ .Values.archppc64le }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      containers:
        - name: {{ .Values.microservice.appname }}
{{- if .Values.image.release }}           
          image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}/{{ .Values.image.release }}:{{ .Values.image.tag }}
{{- else }}
          image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ .Values.image.tag }} 
{{- end }}                
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: resources
              mountPath: "/opt/ibm/wlp/usr/servers/defaultServer/resources"
{{- if .Values.volumes.security }}
            - name: security
              mountPath: "/opt/ibm/wlp/usr/servers/defaultServer/resources/security"
{{- end }}
{{- if .Values.global.installCerts }}
            - name: wdp-certs
              mountPath: "/etc/wdp_certs"
              readOnly: true
{{- end }}
          ports:
            - containerPort: {{ .Values.ports.containerPort }}
              protocol: {{ .Values.ports.protocol }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessProbe.path }}
              port: {{ .Values.probes.livenessProbe.port }}
              scheme: {{ .Values.probes.livenessProbe.scheme }}
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.probes.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.probes.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessProbe.path }}
              port: {{ .Values.probes.readinessProbe.port }}
              scheme: {{ .Values.probes.readinessProbe.scheme }}
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.probes.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.probes.readinessProbe.failureThreshold }}
          env:
             - name: DATALAKE_DBCONF_DIR
               value: "/opt/ibm/wlp/usr/servers/defaultServer/resources/"
             - name: {{ .Values.env.catalogApiEnv.name }}
               value: "{{ .Values.env.catalogApiEnv.value }}"
             - name: {{ .Values.env.catalogApiEnvType.name }}
               value: "{{ .Values.env.catalogApiEnvType.value }}"
{{- if (.Values.env.enableNewRelic) }}
             - name: {{ .Values.env.enableNewRelic.name }}
               value: "{{ .Values.env.enableNewRelic.value }}"
{{- end }}
{{- if (.Values.env.newRelicApp) }}
             - name: {{ .Values.env.newRelicApp.name }}
               value: "{{ .Values.env.newRelicApp.value }}"
{{- end }}
{{- if (.Values.env.newRelicKey) }}
             - name: {{ .Values.env.newRelicKey.name }}
               value: "{{ .Values.env.newRelicKey.value }}"
{{- end }}
{{- if (.Values.env.baseUrl) }}
             - name: {{ .Values.env.baseUrl.name }}
               valueFrom:
                  configMapKeyRef:
                    name: {{ .Values.env.baseUrl.config }}
                    key: {{ .Values.env.baseUrl.key }}
             - name: file_service_url
               value: "$({{ .Values.env.baseUrl.name }})/v2/asset_files"
             - name: wml_url
               value: "$({{ .Values.env.baseUrl.name }})"
             - name: project_api_url
               value: "$({{ .Values.env.baseUrl.name }})/v2/projects"
             - name: connection_api_url
               value: "$({{ .Values.env.baseUrl.name }})/v2"
             - name: entitlement_api_url
               value: "$({{ .Values.env.baseUrl.name }})/v2/entitlements"
             - name: dps_url
               value: "$({{ .Values.env.baseUrl.name }})/v2"
             - name: global_search_index_url
               value: "$({{ .Values.env.baseUrl.name }})/v3/search_index"
             - name: url_override
{{- if eq .Values.global.deploymentTarget "icp4data" }}               
               value: "/v2"
{{- else }}
               value: "$({{ .Values.env.baseUrl.name }})/v2"
{{- end }}
             - name: lineage_url
               value: "$({{ .Values.env.baseUrl.name }})/v2/lineage_events"
{{- end }}
{{- if (.Values.env.serviceIdCredential) }}
             - name: {{ .Values.env.serviceIdCredential.name }}
               valueFrom:
                  secretKeyRef:
                    name: {{ .Values.env.serviceIdCredential.secret }}
                    key: {{ .Values.env.serviceIdCredential.key }}
{{- end }}
{{- if (.Values.env.serviceId) }}
             - name: {{ .Values.env.serviceId.name }}
               valueFrom:
                  secretKeyRef:
                    name: {{ .Values.env.serviceId.secret }}
                    key: {{ .Values.env.serviceId.key }}
             - name: accredited_service_metering_01
               value: "$({{ .Values.env.serviceId.name }})"
             - name: accredited_service_editors_01
               value: "$({{ .Values.env.serviceId.name }})"
             - name: skip_new_owner_check
               value: "$({{ .Values.env.serviceId.name }})"
             - name: accredited_service_viewers_01
               value: "$({{ .Values.env.serviceId.name }})"
             - name: global_type_creator_service_id_01
               value: "$({{ .Values.env.serviceId.name }})"
             - name: global_asset_type_server_creator_id
               value: "$({{ .Values.env.serviceId.name }})"
             - name: cams_administration_editors_01
               value: "$({{ .Values.env.serviceId.name }})"
             - name: cams_administration_viewers_01
               value: "$({{ .Values.env.serviceId.name }})"  
             - name: cams_operators_01
               value: "$({{ .Values.env.serviceId.name }})"
             - name: wkc_account_managers_01
               value: "$({{ .Values.env.serviceId.name }})"  
             - name: dps_skipped_services
               value: "$({{ .Values.env.serviceId.name }})"
             - name: cams_omrs_asset_administrator
               value: "$({{ .Values.env.serviceId.name }})"                   
{{- end }}
{{- if (.Values.env.cloudantUser) }}
             - name: {{ .Values.env.cloudantUser.name }}
               valueFrom:
                  secretKeyRef:
                    name: {{ .Values.env.cloudantUser.secret }}
                    key: {{ .Values.env.cloudantUser.key }}
{{- end }}
{{- if (.Values.env.cloudantPassword) }}
             - name: {{ .Values.env.cloudantPassword.name }}
               valueFrom:
                  secretKeyRef:
                    name: {{ .Values.env.cloudantPassword.secret }}
                    key: {{ .Values.env.cloudantPassword.key }}
{{- end }}
{{- if and (.Values.env.rabbitmqUrl) (eq .Values.properties.enableRMQ true) }}
             - name: {{ .Values.env.rabbitmqUrl.name }}
               valueFrom:
                  secretKeyRef:
                    name: {{ .Values.env.rabbitmqUrl.secret }}
                    key: {{ .Values.env.rabbitmqUrl.key }}
{{- end }}
{{- if (.Values.env.icp4dUrl) }}
             - name: {{ .Values.env.icp4dUrl.name }}
               valueFrom:
                  configMapKeyRef:
                    name: {{ .Values.env.icp4dUrl.config }}
                    key: {{ .Values.env.icp4dUrl.key }}
{{- end }}
{{- if eq .Values.global.deploymentTarget "icp4data" }}  
             - name: {{ .Values.env.icp4dInternalUrl.name }}
               value: {{ .Values.env.icp4dInternalUrl.value }}
{{- end }}              
{{- if and (.Values.env.redisUrl) (eq .Values.properties.enableRedis true) }}
             - name: {{ .Values.env.redisUrl.name }}
               valueFrom:
                  secretKeyRef:
                    name: {{ .Values.env.redisUrl.secret }}
                    key: {{ .Values.env.redisUrl.key }}
{{- end }}
{{- if eq .Values.global.deploymentTarget "ugi" }} 
             - name: {{ .Values.env.icp4dCAMSUser.name }} 
               valueFrom: 
                  secretKeyRef: 
                    name: {{ .Values.env.icp4dCAMSUser.secret }}  
                    key: {{ .Values.env.icp4dCAMSUser.key }}  
             - name: {{ .Values.env.icp4dCAMSPassword.name }} 
               valueFrom: 
                  secretKeyRef: 
                    name: {{ .Values.env.icp4dCAMSPassword.secret }}  
                    key: {{ .Values.env.icp4dCAMSPassword.key }}  
{{- end }}
          resources: 
             limits: 
                cpu: {{ .Values.limits.cpu }}
                memory: {{ .Values.limits.memory }}
             requests: 
                cpu: {{ .Values.requests.cpu }}
                memory: {{ .Values.requests.memory }}
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            capabilities:
              drop:
              - ALL
      volumes:
        - name: resources
          secret: 
            secretName: {{ .Values.volumes.resources.secretName }}
{{- if .Values.volumes.security }}
        - name: security
          secret:
            secretName: {{ .Values.volumes.security.secretName }}
{{- end }}
{{- if .Values.global.installCerts }}
        - name: wdp-certs
          projected:
            sources:
            - secret:
                name: internal-nginx-svc-tls
                items:
                - key: certificate.pem
                  path: internal-nginx.cert.pem
                optional: true
            - secret:
                name: wdp-cloudant-cert
                items:
                - key: ca.crt.pem
                  path: cloudant.ca.cert.pem
                optional: true
            - secret:
                name: rabbitmq-ha-cert
                items:
                - key: cert.pem
                  path: rabbitmq.cert.pem
                optional: true
{{- end }}
{{- if .Values.imagePullSecrets.name }}
      imagePullSecrets: 
         - name: {{ .Values.imagePullSecrets.name }}
{{- end }}         
