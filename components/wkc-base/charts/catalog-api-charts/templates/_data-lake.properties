{{/* vim: set filetype=mustache: */}}
{{- define "catalog-api-charts.catalog-properties" -}}

# indicate if ICP4D authentication mechanism should be used
feature.enable_icp4d_auth=true

# base url to ICP4D usermgmt service
icp4d_usermgmt_url={{ .Values.properties.usermgmtUrl }}

# change the implementation for user info conversion for ICP4D user, must be set to 
# com.ibm.catalog.unified.auth.lookup.ICP4DUserInfoConverter in ICP4D environment
cams.user.info.converter.impl=com.ibm.catalog.unified.auth.lookup.ICP4DUserInfoConverter

# change the implementation for AccessGroupProvider for ICP4D, must be set to 
# com.ibm.catalog.unified.security.ICP4DAccessGroupProvider in ICP4D environment
access_group_provider_impl=com.ibm.catalog.unified.security.ICP4DAccessGroupProvider

# indicate if wkc permission is enforced
feature.enforce_wkc_permission={{ default false .Values.properties.enforceWKCPermission }}

# key protect TBD
# encryption key
key={{ .Values.properties.key }}
# key protect encrypted key
#key_dek=<key for key protect>

# enable running without Key Protect
feature.allow_local_protected_keys=true

# url to asset file service
file_service_url={{ .Values.properties.baseUrl }}/v2/asset_files


# Back-end Database - Cloudant
#cloudant_url must NOT include any DB Name Prefix
cloudant_url={{ .Values.properties.cloudantUrl }}
cloudant.private.account=
cloudant.private.cloudant_admin_password=
cloudant.private.user=
cloudant.private.password=
cloudant_db_env_prefix=v2_
# use SSL in ICP4D for cloudant
{{- if and (eq .Values.global.deploymentTarget "icp4data") (.Values.global.installCerts) }}
cloudant_authenticate_ssl=true
{{- else }}
cloudant_authenticate_ssl=false
{{- end }}
cloudant.private=true

# set default shards for private catalogs
private_catalog_shards=2

# Database Replication
replication_configuration_count=0
#replication_configurations.0.credentialsEncrypted=true
#replication_configurations.0.username=
#replication_configurations.0.password=
#replication_configurations.0.dbNameIncludes=call_log
#replication_configurations.0.mode=PULL
#replication_configurations.0.publicCatalogsOnly=true
#replication_configurations.0.activeCatalogsOnly=true
#replication_configurations.0.workerBatchSize=1000
#replication_configurations.0.excludeDoubleWrittenCallLogEntries=true
#only_create_one_time_replications=true
#database_event_processing_threads=10
#enable_replication_upgrade=false

# double write call log
call_log_target_count=0
#call_log_targets.0.credentialsEncrypted=true
#call_log_targets.0.username=${bluemix_call_log_replica_username_yp_prod}
#call_log_targets.0.password=${bluemix_call_log_replica_password_yp_prod}
#call_log_targets.0.publicCatalogsOnly=true

# NA for ICP4d
# Bluemix COS 
s3TokenDuration=dRGm2C0eJ/3LrX66IQCNag==

# Authentication Service - IAM
# todo be remove for ICP4D
iam_base_url=https\://iam.cloud.ibm.com
iam_base_url2=https\://iam.cloud.ibm.com

# Project Management Services
project_api_url={{ .Values.properties.baseUrl }}/v2/projects

#Connection services
connection_api_url={{ .Values.properties.baseUrl }}/v2
feature.disable_private_catalog_connection=true

# Disable creation of connections
# feature.mandatory_connection_create=false

# Check account entitlement for certain actions, e.g. create catalog and asset
{{- if eq .Values.properties.enableEntitlementCheck true }}
feature.check_entitlement=true
{{- else }}
feature.check_entitlement=false
{{- end }}
entitlement_api_url={{ .Values.properties.baseUrl }}/v2/entitlements

# IAM Access Admin (COS), likely need to be removed
iampap_scopes_url=

# BSS service
#account_management_url=

# Identity Sources (SAML)
#identity_sources_url=

# Resource key (COS)
#resource_key_url=

# DataWorks - Service Identities
#aps_gov_user=

# RabbitMQ
{{- if eq .Values.properties.enableRMQ true }}
feature.disable_rabbitmq_publishing=false
{{- else }}
#set this feature true to DISABLE RabbitMQ publishing
feature.disable_rabbitmq_publishing=true
{{- end }}
rabbitmq_uri={{ .Values.properties.rabbitmqUrl }}
#rabbitmq_uri_direct_1={{ .Values.properties.rabbitmqUrl }}
#rabbitmq_ca_certs_base64=
rabbitmq.private=true

#set this feature true to ENABLE RabbitMQ publishing GET Asset events
feature.enable_rabbitmq_publish_get_events=false


# ServiceId
# (Git Issue #4326)
accredited_service_metering_01={{ .Values.properties.serviceId }}


# Editors
# Used by sampling (Git issue #1895)
accredited_service_editors_01={{ .Values.properties.serviceId }}


#list of discovery serviceId, notebook serviceId and figure eight integration (portal main) serviceId (Git issue #9222) to skip member check during update asset owner
skip_new_owner_check={{ .Values.properties.serviceId }}

# Viewers
# Used by dps (Git issue #1902)
accredited_service_viewers_01={{ .Values.properties.serviceId }}

# Used by cams (Git issue #9234)
# Ids of services that are allowed to create global asset types
global_type_creator_service_id_01={{ .Values.properties.serviceId }}

# This id is used by cams for any internally created global asset types
# This is must also be included in the global_type_creator_service_id's listed in this file.
global_asset_type_server_creator_id={{ .Values.properties.serviceId }}

# Enable this property, set to true, to enable the legacy, auto-created, catalog asset types for data_asset, folder_asset, and policy_transform
global_type_legacy_create=false

# List of global asset types for cams 
# Each entry allows a corresponding global asset type whose json body is saved in
# /WEB-INF/classes/com/ibm/catalog/global-asset-types/asset-types
global_asset_types_01=data_asset
global_asset_types_02=folder_asset
global_asset_types_03=policy_transform
global_asset_types_04=asset_terms
global_asset_types_05=column_info
global_asset_types_06=omrs_entity
global_asset_types_07=omrs_relationship
global_asset_types_08=omrs_relationship_message

#Global Asset type scheduler initial delay at the startup
global_asset_type_processing_initial_delay_min=1

# Ids of services that are allowed to perform CAMS adminstration operations
cams_administration_editors_01={{ .Values.properties.serviceId }}
cams_administration_viewers_01={{ .Values.properties.serviceId }}

# Ids of services that are allowed to perform CAMS operator operations
cams_operators_01={{ .Values.properties.serviceId }}

#Ids of services that are allowed to use the /v2/internals/suspended_accounts endpoints
#CAMS service id 1
wkc_account_managers_01={{ .Values.properties.serviceId }}


# DPS Governance Policy enforcement
{{- if eq .Values.properties.enablePolicyEnforcement true }}
feature.policy_enforcement_enabled=true
{{- else }}
feature.policy_enforcement_enabled=false
{{- end }}
dps_url={{ .Values.properties.baseUrl }}/v2
dps_skipped_services={{ .Values.properties.serviceId }}
#Call new DPS api for evaluate
feature.enable_dps_evaluate_api=true

# CAMS apikey
# not needed
#cams_api_key={{ .Values.properties.serviceId }}

# Href in response
url_override={{ .Values.properties.baseUrl }}/v2

# Tenant Id requirement 
feature.mandatory_account_id=true



# Kafka service used to publish the statistics used by WDP Data Warehouse
#statistics_kafka_brokers=
#statistics_kafka_userid=
#statistics_kafka_password=
#statistics_kafka_topic=json.v1.catalog.overview

# Etc-D credentials.  Etc-D is used as a semaphore system.  
etcd_environment_name=ugi

# indicate if ETCD v2 or v3 should be used 
feature.use_etcd_v3=true
  
# etcd v2
#etcd_uri=
#etcd_uri_direct_1=
#etcd_ca_certs_base64=

# etcd v3
#etcd_uri_v3=
#etcd_uri_direct_1_v3=
#etcd_deployment_name_v3=

# enter true or false to specify whether synchronization will run.
# enter the hour of the day in 24 hour clock at which the scheduled synchronization will run.
feature.statistics_synchronization=false
#statistics.runtime=05:00

# specify the default SSL strategy
# The options are: "use_default", "trust_all"
# "use_default" is the setting for all environments except UGI platform, which uses "trust_all"  
{{- if and (eq .Values.global.deploymentTarget "icp4data") (.Values.global.installCerts) }}
default_ssl_strategy=use_default
{{- else }}
default_ssl_strategy=trust_all
{{- end }}

#RESTUtils
connection_pool_default_max_total=600
connection_pool_default_max_per_route=100

#Entitlement Account Cache
#entitlement_account_cache_size = 0
#entitlement_account_cache_expire_time = 60

# Allow enabling or disabling of two versions of design documents
feature.allow_two_versions=true



#Set max_retries to 8
max_retries=8

# w3 profile service
#w3.profile.client.id=
#w3.profile.client.secret=
#w3.profile.url=
#w3.profile.client.use.admin.api=true
#cams.user.info.converter.impl=com.ibm.catalog.unified.auth.lookup.CompositeUserInfoConverter
#dsx_url=
#profilemgmt_keystore_password=

#Lineage
{{- if eq .Values.properties.enableLineage true }}
feature.disable_lineage_publishing=false
{{- else }}
feature.disable_lineage_publishing=true
{{- end }}
lineage_url={{ .Values.properties.baseUrl }}/v2/lineage_events
feature.enable_lineage_rest=true

# application uri for the application, used in Host header validation
#application.uri=

#Activity Tracker
feature.enable_activity_tracker_publishing=false
#activity_tracker_region=
#activity_tracker_url=
# Common account where all Activity Tracker values will be stored for all KC services
#activity_tracker_service_crn=
#activity_tracker_token=
#dc_broker_entitlement_url=https://dc-broker-ypprod.ng.bluemix.net/v2/datacatalog/broker/api/get_org_space_id

feature.per_catalog_call_logs=false

#WKC role check url
#wkc_role_check_url=https://dataplatform.cloud.ibm.com/catalog/api/roles

#wkc check
feature.wkc_check_enabled=true

# To create bucket-less catalogs
feature.allow_bucketless_catalogs=true

#Propagate account management events to yp-qa
#wkc_account_mgmt_mirrors=

# Key Protect properties
#kms_url=
#kms_service_id=
#kms_instance_id=
#kms_environment=

#kms_root_key_id=
#kms_api_key=

# BSS account management service v2
#account_management.uaa.client_id=
#account_management.uaa.client_secret=
#account_management.uaa.mccp_base_url=
#account_management.v2.base_url=

#expiration_super_users=

#expiration_users=

#expire_catalog_users=

#set number of days before expiring accounts
#bss_account_attrition_grace_period_days=30
#user_attrition_api_key=

#disable COS connection cache for now
# can be remove later
cos_connection_cache_soft_expire_time_sec=0
cos_connection_cache_hard_expire_time_sec=0

# the endpoint of the Minio COS server
{{- if .Values.properties.minioUrl }}
minio_endpoint_url={{ .Values.properties.minioUrl }}:31311
{{- else }}
minio_endpoint_url={{ .Values.properties.baseUrl }}:31311
{{- end }}

allow_in_place_design_document_updates=true

#Ids of services that are allowed to create/update OMRS assets
cams_omrs_asset_administrator={{ .Values.properties.serviceId }}

#set this feature true to enable OMRS feature
feature.enable_omrs=true

#Uncomment these properties when REDIS is configured
{{- if eq .Values.properties.enableRedis true }}
redis_url={{ .Values.properties.redisUrl }}
#redis_cert=
#redis_password=
redis_max_connection_pool_size=5
redis_min_connection_pool_size=1
redis_max_subscription_connection_pool_size=5
redis_min_subscription_connection_pool_size=1
lock_cache_service_factory_impl=com.ibm.catalog.unified.utils.cache.redis.OptimisticLockingRedisCacheServiceFactory
cache_service_factory_impl=com.ibm.catalog.unified.utils.cache.redis.NonLockingRedisCacheServiceFactory
omrs_cache_service_factory_impl=com.ibm.catalog.unified.utils.cache.redis.OptimizedNonLockingRedisCacheServiceFactory
internal_read_write_lock_factory_factory_impl=com.ibm.catalog.unified.utils.lock.RedisInternalReadWriteLockFactoryFactory
#Use native redis locks for synchronization
internal_thread_lock_factory_factory_impl=com.ibm.catalog.unified.utils.lock.RedisLockFactoryFactory

#Allow redis up to 2 minutes to respond
redis_server_response_timeout_ms=120000
redis_environment_name=wkc
{{- end }}

#use memory locking for deployments with only 1 pod instead of redis
{{- if eq .Values.properties.enableInternalMemoryLocking true }}
lock_cache_service_factory_impl=com.ibm.catalog.utils.cache.MemoryOnlyCacheServiceFactory
cache_service_factory_impl=com.ibm.catalog.utils.cache.MemoryOnlyCacheServiceFactory
omrs_cache_service_factory_impl=com.ibm.catalog.utils.cache.MemoryOnlyCacheServiceFactory
internal_read_write_lock_factory_factory_impl=com.ibm.catalog.unified.utils.lock.MemoryReadWriteInternalLockFactoryFactory
internal_thread_lock_factory_factory_impl=com.ibm.catalog.unified.utils.lock.CacheServiceInternalLockFactory
{{- end }}

#Enables cross catalog search for the environment
{{- if eq .Values.properties.enableCrossCatalogSearch true }}
feature.enable_cross_catalog_search=true
{{- else }}
feature.enable_cross_catalog_search=false
{{- end }}

## omrs igc connection credentials ###
omrs.connection.encryption.key=KNg6zQb7vsr0cBmIOKCCK9B1aY5xyN7tTx2senUttqR3M9sStF9APkz98/HU4zKS

feature.relationships=true


# enable using "property descriptions" aka custom attributes in asset types 
feature.property_descriptions=true

feature.omrs_allow_incoming_usernames={{ default false .Values.properties.allowOmrsUserNames }}

#set this feature true to DISABLE RabbitMQ OMRS consumers connection
feature.disable_rabbitmq_omrs_consumers={{ default false .Values.properties.eventMapperDisabled }}

feature.entitlement_check_for_public_assets={{ default false .Values.properties.entitlement_check_for_public_assets }}

# enable publishing assets to global search
feature.enable_global_search_publishing={{ default false .Values.properties.enableGlobalSearchPublishing }}
global_search_index_url={{ .Values.properties.baseUrl }}/v3/search_index

# enable this for catalogs to be expired right after delete
feature.expire_catalog_on_delete={{ default false .Values.properties.expireCatalogOnDelete }}

catalog_service_env={{ .Values.properties.catalog_service_env }}

{{- end }}
