apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.microservice.appname }}
  labels:
    app: {{ .Values.microservice.appname }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.microservice.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.microservice.appname }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        icpdsupport/app: "apis"
        {{ .Values.global.serviceabilityLabelName }}: {{ .Values.global.serviceabilityLabelValue }}
      annotations:
        helm.sh/hook: test-success
        {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | trim | indent 8 }}
        {{- end }}
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      securityContext:
        runAsNonRoot: true
        {{- if .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end}}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.global.imagePullSecrets }}
      {{- end}}
      volumes:
        - name: portal-tls
          secret:
            secretName: portal-catalog-secret
        - name: elasticsearch-tls
          secret:
            secretName: elasticsearch-master-cert
        - name: internal-nginx-svc-tls
          secret:
            secretName: internal-nginx-svc-tls
      containers:
        - name: {{ .Chart.Name }}
          image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ required "image.tag is required" .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: WKC_SEARCH_SERVICE_ID
              valueFrom:
                secretKeyRef:
                  key: service-id-credentials
                  name: wdp-service-id
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-master-secret
                  key: password
            - name: ES_USER
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-master-secret
                  key: username
            - name: APP_VERSION
              value: {{ .Chart.Version }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessProbe.path }}
              port: {{ .Values.probes.livenessProbe.port }}
              scheme: {{ .Values.probes.livenessProbe.scheme }}
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.probes.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.probes.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessProbe.path }}
              port: {{ .Values.probes.readinessProbe.port }}
              scheme: {{ .Values.probes.readinessProbe.scheme }}
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.probes.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.probes.readinessProbe.failureThreshold }}
          volumeMounts:
            - mountPath: "/home/smart-platform-search/certs"
              name: portal-tls
              readOnly: true
            - mountPath: "/home/smart-platform-search/certs/es"
              name: elasticsearch-tls
              readOnly: true
            - mountPath: "/home/smart-platform-search/certs/v3"
              name: internal-nginx-svc-tls
              readOnly: true
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            {{- if .Values.securityContext.runAsUser }}
            runAsUser: {{ .Values.securityContext.runAsUser }}
            {{- end}}
