{{- $compName := "zen-pre-requisite-job" -}}
kind: Job
apiVersion: batch/v1
metadata:
  name: zen-pre-requisite-job
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "zenhelper.labels" (list . $compName) | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  template:
    metadata:
      labels:
        {{- include "zenhelper.labels" (list . $compName) | indent 8 }}
        {{- if (.Values.podLabels) }}
{{ toYaml .Values.podLabels | indent 8 }}
        {{- end }}
      annotations:
        {{- include "zenhelper.annotations" . | indent 8 }}
    spec:
      securityContext:
        runAsNonRoot: true
        {{- if (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
        runAsUser: 1000321000
        {{- end }}
      serviceAccountName:  {{ .Values.global.admin.sa }}
      affinity:
        {{- include "zenhelper.nodeArchAffinity" . | indent 8 }}
        {{- include "zenhelper.podAntiAffinity" (list . $compName) | indent 8 }}
      containers:
      - name: zen-pre-requisite-job
        securityContext:
          runAsNonRoot: true
          {{- if (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
          runAsUser: 1000321000
          {{- end }}
          capabilities:
            drop:
            - KILL
            - MKNOD
        image: "{{ .Values.global.docker_registry_prefix }}/{{ .Values.zenRequisite.image.repository }}:{{ .Values.global.image.tag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.zenRequisite.resources | indent 12 }}
        env:
        - name: ZEN_CORE_ROUTE_ENABLE
          value: "{{ .Values.zenRequisite.nginxRoute }}"
    {{ if .Values.global.cockroachdb }}
        - name: COCKROACHDB
          value: "true"
    {{ end }}
        - name: ICP4DATA_NAV
        {{- if .Values.global.standaloneProduct }}
          value: "false"
        {{- else }}
          value: "true"
        {{- end }}
        - name: ICPD_CONTROLPLANE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - mountPath: /user-home
          name: user-home-mount
    {{ if .Values.global.cockroachdb }}
        - mountPath: /certs
          name: metastore-secret
    {{ end }}
      volumes:
    {{ if .Values.global.cockroachdb }}
      - name: metastore-secret
        secret:
          secretName: metastore-secret
          defaultMode: 484
    {{ end }}
      {{- include "zenhelper.user-home-pvc" .  | indent 6 }}
      restartPolicy: OnFailure
