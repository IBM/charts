kind: Job
apiVersion: batch/v1
metadata:
  name: "{{ .Values.servicename }}-createdb-job"
  labels:
    app.kubernetes.io/name: {{ template "eventstore.fullname" . }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    {{- include "eventstore.podLabels" . | indent 4 }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "eventstore.fullname" . }}
        api-progress: "{{ .Values.servicename }}dbjob"
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        name: "{{ .Values.servicename }}-createdb-job"
        release: "{{ .Release.Name }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        {{- include "eventstore.podLabels" . | indent 8 }}
      annotations:
         {{- include "eventstore.annotations" . | indent 8 }}
    spec:
      affinity:
        {{- include "eventstore.nodeAffinity" . | indent 6 }}
      {{- include "eventstore.tolerations" . | indent 6 }}
      {{- include "eventstore.security" . | indent 6 }}
      serviceAccountName: {{ default "default" .Values.serviceAccountName }}
      {{- include "eventstore.podSecurityContext" . | indent 6 }}
      initContainers:
      {{- include "eventstore.wait-engine" . | indent 6 }}
      containers:
      - name: eventstore-tools
        {{- if .Values.eventstoreTools.image.tag }}
        image: {{ .Values.eventstoreTools.image.repository }}:{{ .Values.eventstoreTools.image.tag }}
        {{- else }}
        image: {{ .Values.eventstoreTools.image.repository }}:{{ .Values.image.universalTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/sh']
        args: ["-cx", "/eventstore/tools/hooks/post-install/create_db.sh --create-database {{ .Values.database.create }} --database-name {{ .Values.database.name }} --service-name {{ .Values.servicename }} --namespace {{ .Release.Namespace }}"]
        {{- include "eventstore.securityContext" . | indent 8 }}
        env:
        {{- include "eventstore.environment-variables" . | indent 8 }}
        - name: SHARED_STORAGE_PATH
          value: "/eventstorefs/{{ .Values.servicename }}"
        - name: SQLLIB_SHARED
          value: "/system-storage/{{ .Values.servicename }}/{{ .Values.db2InstanceUser }}/sqllib_shared"
        volumeMounts:
        {{- if ( not .Values.storage.storageLocation.dataStorage.enabled) }}
        - mountPath: /eventstorefs
          name: storage-underfs
        - mountPath: /system-storage
          name: storage-underfs
        {{- else }}
        - mountPath: /system-storage
          name: system-storage
        - mountPath: /eventstorefs/{{ .Values.servicename }}
          subPath: {{ .Values.servicename }}
          name: system-storage
        {{- end }}
      restartPolicy: Never
      volumes:
      {{- if ( not .Values.storage.storageLocation.dataStorage.enabled) }}
      - name: storage-underfs
        persistentVolumeClaim:
        {{- if .Values.pvcSettings.existingClaimName }}
          claimName: {{ .Values.pvcSettings.existingClaimName }}
        {{- else }}
          claimName: {{ .Values.servicename }}-pvc
        {{- end }}
      {{- else }}
        {{- include "eventstore.container.storage.systemStorage" . | indent 6 }}
      {{- end }}
