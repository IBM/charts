kind: Job
apiVersion: batch/v1
metadata:
  name: "{{ .Values.servicename }}-registry-job"
  labels:
    app.kubernetes.io/name: {{ template "eventstore.fullname" . }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    release: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    {{- include "eventstore.podLabels" . | indent 4 }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: registry-job
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        name: {{ template "eventstore.name" . }}
        release: "{{ .Release.Name }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        {{- include "eventstore.podLabels" . | indent 8 }}
      annotations:
         {{- include "eventstore.annotations" . | indent 8 }}
    spec:
      affinity:
        {{- include "eventstore.nodeAffinity" . | indent 6 }}
      {{- include "eventstore.tolerations" . | indent 6 }}
      {{- include "eventstore.security" . | indent 6 }}
      serviceAccountName: {{ default "default" .Values.serviceAccountName }}
      {{- include "eventstore.podSecurityContext" . | indent 6 }}
      initContainers:
      {{- include "eventstore.wait-sqllib-shared" . | indent 6 }}
      {{- include "eventstore.wait-db2nodes-cfg" . | indent 6 }}
      containers:
      - name: registry-setup
        {{- if .Values.engine.image.tag }}
        image: {{ .Values.engine.image.repository }}:{{ .Values.engine.image.tag }}
        {{- else }}
        image: {{ .Values.engine.image.repository }}:{{ .Values.image.universalTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/ksh']
        args: ["-l","-c","/home/db2inst1/base_entrypoint.sh /eventstore/registry_setup.sh"]
        {{- include "eventstore.securityContext" . | indent 8 }}
        env:
        - name: DB2INSTANCE
          value: "{{ .Values.db2InstanceUser }}"
        - name: SQLLIB_SHARED
          value: "/system-storage/{{ .Values.servicename }}/{{ .Values.db2InstanceUser }}/sqllib_shared"
        - name: LOCAL_SSD_PATH
          value: "/eventstore/db/ssd/{{ .Values.servicename }}"
        - name: LOCAL_LOG_PATH
          value: "/eventstore/logs"
        - name: DB2ENVLIST_FOR_AUTHENTICATION
          {{- if eq .Values.runtime "ICP4Data" }}    
          value: "INTERNAL_NGINX_SVC_SERVICE_HOST INTERNAL_NGINX_SVC_SERVICE_PORT_HTTP USERMGMT_SVC_SERVICE_HOST USERMGMT_SVC_SERVICE_PORT"    
          {{- else }}    
          value: "USERMGMT_SVC_SERVICE_HOST USERMGMT_SVC_SERVICE_PORT"    
          {{- end }}
        - name: DB2ENVLIST_FOR_AWS_COS
          {{- if eq .Values.objectStorage.useObjectStorage true }}
          value: "AWS_SECRET_ACCESS_KEY AWS_ACCESS_KEY_ID"
          {{- end }}
        - name: DB2ENVLIST_FOR_TCMALLOC_MAX_TOTAL_THREAD_CACHE_BYTES
          value: "TCMALLOC_MAX_TOTAL_THREAD_CACHE_BYTES"
        - name: DB2_CLIENT_PORT
          value: "{{ tpl (.Values.engine.db2ClientPort | toString) . }}"
        - name: DB2_COMMUNICATION_PORT
          value: "{{ tpl (.Values.engine.db2CommunicationPort | toString) . }}"
        volumeMounts:
        {{- if ( not .Values.storage.storageLocation.dataStorage.enabled) }}
        - mountPath: /eventstorefs
          name: storage-underfs
        - mountPath: /system-storage
          name: storage-underfs
        {{- else }}
        {{- if (not .Values.objectStorage.useObjectStorage) }}
        - mountPath: /eventstorefs
          name: data-storage
        {{- end }}
        - mountPath: /system-storage
          name: system-storage
        {{- end }}
        - mountPath: /eventstore/eventstore_external_conf
          name: eventstore-config-volume
      restartPolicy: Never
      volumes:
      - name: eventstore-config-volume
        configMap:
          name: "{{ .Values.servicename }}-config-files"
          items:
          - key: db2eventstore-reg-var-global
            path: db2eventstore-reg-var-global.conf
      {{- if ( not .Values.storage.storageLocation.dataStorage.enabled) }}
      - name: storage-underfs
        persistentVolumeClaim:
         {{- if .Values.pvcSettings.existingClaimName }}
           claimName: {{ .Values.pvcSettings.existingClaimName }}
         {{- else }}
           claimName: {{ .Values.servicename }}-pvc
         {{- end }}
      {{- else }}
      {{- if (not .Values.objectStorage.useObjectStorage) }}
        {{- include "eventstore.container.storage.dataStorage" . | indent 6 }}
      {{- end }}
        {{- include "eventstore.container.storage.systemStorage" . | indent 6 }}
      {{- end }}
