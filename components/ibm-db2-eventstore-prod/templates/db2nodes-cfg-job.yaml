kind: Job
apiVersion: batch/v1
metadata:
  name: "{{ .Values.servicename }}-db2nodes-cfg-job"
  labels:
    app.kubernetes.io/name: {{ template "eventstore.fullname" . }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    {{- include "eventstore.podLabels" . | indent 4 }}

spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: db2nodes-cfg-job
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        name: {{ template "eventstore.name" . }}
        release: "{{ .Release.Name }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        {{- include "eventstore.podLabels" . | indent 8 }}
      annotations:
         {{- include "eventstore.annotations" . | indent 8 }}
    spec:
      affinity:
        {{- include "eventstore.nodeAffinity" . | indent 6 }}
      {{- include "eventstore.tolerations" . | indent 6 }}
      {{- include "eventstore.security" . | indent 6 }}
      serviceAccountName: {{ default "default" .Values.serviceAccountName }}
      {{- include "eventstore.podSecurityContext" . | indent 6 }}
      initContainers:
      {{- include "eventstore.wait-sqllib-shared" . | indent 6 }}
      {{- include "eventstore.wait-engine-scheduled" . | indent 6 }}
      containers:
      - name: eventstore-init
        {{- if .Values.eventstoreTools.image.tag }}
        image: {{ .Values.eventstoreTools.image.repository }}:{{ .Values.eventstoreTools.image.tag }}
        {{- else }}
        image: {{ .Values.eventstoreTools.image.repository }}:{{ .Values.image.universalTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ['/bin/sh']
        {{ if ne .Values.runtime "ICP4Data" -}}
        args: ['-cx', '/eventstore/tools/hooks/pre-install/db2nodes-cfg.sh -t implicit -q is_eventstore=true -n {{ .Values.deployment.members }} -c {{ .Values.servicename }}-tenant-catalog-svc.{{ .Release.Namespace }}.svc -f /system-storage/{{ .Values.servicename }}/db2inst1/sqllib_shared/']
        {{- else if eq .Values.global.nodeLabel.value "" }}
        args: ['-cx', '/eventstore/tools/hooks/pre-install/db2nodes-cfg.sh -t implicit -q icp4data={{ .Values.servicename }} -n {{ .Values.deployment.members }} -d {{ .Values.servicename }} -c {{ .Values.servicename }}-tenant-catalog-svc.{{ .Release.Namespace }}.svc -f /system-storage/{{ .Values.servicename }}/db2inst1/sqllib_shared/']
        {{- else }}
        args: ['-cx', '/eventstore/tools/hooks/pre-install/db2nodes-cfg.sh -t implicit -q icp4data={{ .Values.global.nodeLabel.value }} -n {{ .Values.deployment.members }} -d {{ .Values.servicename }} -c {{ .Values.servicename }}-tenant-catalog-svc.{{ .Release.Namespace }}.svc -f /system-storage/{{ .Values.servicename }}/db2inst1/sqllib_shared/']
        {{- end }}
        {{- include "eventstore.securityContext" . | indent 8 }}
        env:
        {{- include "eventstore.environment-variables" . | indent 8 }}
        volumeMounts:
        - mountPath: /system-storage
          name: storage-underfs
      restartPolicy: Never
      volumes:
      {{- if ( not .Values.storage.storageLocation.dataStorage.enabled) }}
      - name: storage-underfs
        persistentVolumeClaim:
        {{- if .Values.pvcSettings.existingClaimName }}
          claimName: {{ .Values.pvcSettings.existingClaimName }}
        {{- else }}
          claimName: {{ .Values.servicename }}-pvc
        {{- end }}
      {{- else }}
       - name: storage-underfs
         persistentVolumeClaim:
           {{- if .Values.storage.storageLocation.metaStorage.pvc.existingClaim.name }}
           claimName: {{ .Values.storage.storageLocation.metaStorage.pvc.existingClaim.name }}
           {{- else }}
           claimName: {{ .Values.servicename }}-system-pvc
           {{- end }}
      {{- end }}
