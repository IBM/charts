global:
  __metadata:
    description: "Global variables"
    label: "Global label"
## used in dynamic provisioning of PV
  chownPV:
    __metadata:
      description: "chownPV settings"
      label: "chownPV label"
      type: boolean     
  dockerRegistryPrefix:
    __metadata:
      description: "Image registry prefix to pull images"
      label: "Docker ImageRegistry"
  persistence:
    __metadata:
      description: "Persistence section"
      label: "persistence label"
    storageClassName:
      __metadata:
        description: "Define storage class section"
        label: "storageClassName label"
  serviceabilityLabelName:
    __metadata:
      description: "Serviceability product name"
      label: "Serviceability Label Name"
  serviceabilityLabelValue:
    __metadata:
      description: "Serviceability product value"
      label: "Serviceability Label"
  ibmProduct:
    __metadata:
      description: "ibmProduct description"
      label: "ibmProduct label"
  installCerts:
    __metadata:
      description: "installCerts check"
      label: "installCerts label"

podAnnotations:
  __metadata:
    description: "podAnnotations value"
    label: "podAnnotations"
## RabbitMQ application credentials
## Ref: http://rabbitmq.com/access-control.html
##
rabbitmqUsername:
  __metadata:
    description: "rabbitmqUsername value"
    label: "rabbitmqUsername label"
rabbitmqPassword:
  __metadata:
    description: "rabbitmqPassword value"
    label: "rabbitmqPassword label"

## RabbitMQ Management user used for health checks
managementUsername:
  __metadata:
    description: "managementUsername value"
    label: "managementUsername label"
managementPassword:
  __metadata:
    description: "managementPassword value"
    label: "managementPassword label"

## Place any additional key/value configuration to add to rabbitmq.conf
## Ref: https://www.rabbitmq.com/configure.html#config-items
extraConfig:
  __metadata:
    description: "extraConfig value"
    label: "extraConfig label"
#  queue_master_locator = min-masters

definitions:
  __metadata:
    description: "definitions section"
    label: "definitions label"
  users:
    __metadata:
      description: "users variable"
      label: "users label"
  vhosts:
    __metadata:
      description: "vhosts variable"
      label: "vhosts label"
  parameters:
    __metadata:
      description: "parameters variable"
      label: "parameters label"
  permissions:
    __metadata:
      description: "permissions variable"
      label: "permissions label"
  queues:
    __metadata:
      description: "queues variable"
      label: "queues label"
  exchanges:
    __metadata:
      description: "exchanges variable"
      label: "exchanges label"
  bindings:
    __metadata:
      description: "bindings variable"
      label: "bindings label"
  policies:
    __metadata:
      description: "policies variable"
      label: "policies label"

## Ref: https://www.rabbitmq.com/rabbitmqctl.8.html#force_boot
forceBoot:
  __metadata:
    description: "forceBoot settings"
    label: "forceBoot label"
    type: boolean

## RabbitMQ default VirtualHost
## Ref: https://www.rabbitmq.com/vhosts.html
##
rabbitmqVhost:
  __metadata:
    description: "rabbitmqVhost variable"
    label: "rabbitmqVhost label"

## Erlang cookie to determine whether different nodes are allowed to communicate with each other
## Ref: https://www.rabbitmq.com/clustering.html
##
# rabbitmqErlangCookie:

## RabbitMQ Memory high watermark
## Ref: http://www.rabbitmq.com/memory.html
##
rabbitmqMemoryHighWatermark:
  __metadata:
    description: "rabbitmqMemoryHighWatermark variable"
    label: "rabbitmqMemoryHighWatermark value"

rabbitmqMemoryHighWatermarkType:
  __metadata:
    description: "rabbitmqMemoryHighWatermarkType variable"
    label: "rabbitmqMemoryHighWatermarkType label"

## EPMD port for peer discovery service used by RabbitMQ nodes and CLI tools
## Ref: https://www.rabbitmq.com/clustering.html
##
rabbitmqEpmdPort:
  __metadata:
    description: "rabbitmqEpmdPort variable"
    label: "rabbitmqEpmdPort value"

## Node port
rabbitmqNodePort:
  __metadata:
    description: "rabbitmqNodePort variable"
    label: "rabbitmqNodePort value"
## Manager port
rabbitmqManagerPort:
  __metadata:
    description: "rabbitmqManagerPort variable"
    label: "rabbitmqManagerPort value"

## Set to true to precompile parts of RabbitMQ with HiPE, a just-in-time
## compiler for Erlang. This will increase server throughput at the cost of
## increased startup time. You might see 20-50% better performance at the cost
## of a few minutes delay at startup.
rabbitmqHipeCompile:
  __metadata:
    description: "rabbitmqHipeCompile settings"
    label: "rabbitmqHipeCompile label"
    type: boolean

## SSL certificates
## Red: http://www.rabbitmq.com/ssl.html
rabbitmqCert:
  __metadata:
    description: "enabled settings"
    label: "enabled true"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled true"
      type: boolean

  # Specifies an existing secret to be used for SSL Certs
  existingSecret:
    __metadata:
      description: "existingSecret settings"
      label: "existingSecret label"

## Authentication mechanism
## Ref: http://www.rabbitmq.com/authentication.html
rabbitmqAuth:
  __metadata:
    description: "rabbitmqAuth settings"
    label: "rabbitmqAuth label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean
  config:
    __metadata:
      description: "config settings"
      label: "config label"

## Authentication backend
## Ref: https://github.com/rabbitmq/rabbitmq-auth-backend-http
rabbitmqAuthHTTP:
  __metadata:
    description: "rabbitmqAuthHTTP settings"
    label: "rabbitmqAuthHTTP label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean

  config:
    __metadata:
      description: "config settings"
      label: "config label"

## LDAP Plugin
## Ref: http://www.rabbitmq.com/ldap.html
rabbitmqLDAPPlugin:
  __metadata:
    description: "rabbitmqLDAPPlugin settings"
    label: "rabbitmqLDAPPlugin label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean

  ## LDAP configuration:
  config:
    __metadata:
      description: "config settings"
      label: "config label"
## MQTT Plugin
## Ref: http://www.rabbitmq.com/mqtt.html
rabbitmqMQTTPlugin:
  __metadata:
    description: "rabbitmqMQTTPlugin settings"
    label: "rabbitmqMQTTPlugin label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean

  ## MQTT configuration:
  config:
    __metadata:
      description: "config settings"
      label: "config label"

## Web MQTT Plugin
## Ref: http://www.rabbitmq.com/web-mqtt.html
rabbitmqWebMQTTPlugin:
  __metadata:
    description: "rabbitmqWebMQTTPlugin settings"
    label: "rabbitmqWebMQTTPlugin label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean

  ## Web MQTT configuration:
  config:
    __metadata:
      description: "config settings"
      label: "config label"

## STOMP Plugin
## Ref: http://www.rabbitmq.com/stomp.html
rabbitmqSTOMPPlugin:
  __metadata:
    description: "rabbitmqSTOMPPlugin settings"
    label: "rabbitmqSTOMPPlugin label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean

  ## STOMP configuration:
  config:
    __metadata:
      description: "config settings"
      label: "config label"

## Web STOMP Plugin
## Ref: http://www.rabbitmq.com/web-stomp.html
rabbitmqWebSTOMPPlugin:
  __metadata:
    description: "rabbitmqWebSTOMPPlugin settings"
    label: "rabbitmqWebSTOMPPlugin label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean

  ## Web STOMP configuration:
  config:
    __metadata:
      description: "config settings"
      label: "config label"

## AMQPS support
## Ref: http://www.rabbitmq.com/ssl.html
rabbitmqAmqpsSupport:
  __metadata:
    description: "rabbitmqAmqpsSupport settings"
    label: "rabbitmqAmqpsSupport label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
      type: boolean
  nodePortService:
    __metadata:
      description: "nodePortService settings"
      label: "nodePortService label"
      type: boolean

  # NodePort
  amqpsNodePort:
    __metadata:
      description: "amqpsNodePort settings"
      label: "amqpsNodePort label"
    __metadata:
      description: "config settings"
      label: "config label"

  # SSL configuration
  config:
    __metadata:
      description: "config settings"
      label: "config label"

## Number of replicas
replicaCount:
  __metadata:
    description: "replicaCount settings"
    label: "replicaCount label"

image:
  __metadata:
    description: "image settings"
    label: "image label"
  repository:
    __metadata:
      description: "repository settings"
      label: "repository label"
  tag:
    __metadata:
      description: "tag settings"
      label: "tag label"
  pullPolicy:
    __metadata:
      description: "pullPolicy settings"
      label: "pullPolicy label"
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  #pullSecrets:
  #  - ""

busybox:
  __metadata:
    description: "busybox settings"
    label: "busybox label"
  image:
    __metadata:
      description: "busybox image settings"
      label: "busybox image label"
    repository:
      __metadata:
        description: "repository settings"
        label: "repository label"
    tag:
      __metadata:
        description: "tag settings"
        label: "tag label"
    pullPolicy:
      __metadata:
        description: "pullPolicy settings"
        label: "pullPolicy label"

## Duration in seconds the pod needs to terminate gracefully
terminationGracePeriodSeconds:
  __metadata:
    description: "terminationGracePeriodSeconds settings"
    label: "terminationGracePeriodSeconds label"

service:
  __metadata:
    description: "service settings"
    label: "service label"
  annotations:
    __metadata:
      description: "annotations settings"
      label: "annotations label"
  #clusterIP: None

  ## List of IP addresses at which the service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs:
    __metadata:
      description: "externalIPs settings"
      label: "externalIPs label"

  loadBalancerIP:
    __metadata:
      description: "loadBalancerIP settings"
      label: "loadBalancerIP label"
  loadBalancerSourceRanges:
    __metadata:
      description: "replicaCount settings"
      label: "replicaCount label"
  type:
    __metadata:
      description: "type settings"
      label: "type label"

podManagementPolicy:
  __metadata:
    description: "podManagementPolicy settings"
    label: "podManagementPolicy label"

## Statefulsets rolling update update strategy
## Ref: https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#rolling-update
##
updateStrategy:
  __metadata:
    description: "updateStrategy settings"
    label: "updateStrategy label"

## Statefulsets Pod Priority
## Ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
## priorityClassName: ""

## We usually recommend not to specify default resources and to leave this as
## a conscious choice for the user. This also increases chances charts run on
## environments with little resources, such as Minikube. If you do want to
## specify resources, uncomment the following lines, adjust them as necessary,
## and remove the curly braces after 'resources:'.
## If you decide to set the memory limit, make sure to also change the
## rabbitmqMemoryHighWatermark following the formula:
##   rabbitmqMemoryHighWatermark = 0.4 * resources.limits.memory
##
resources:
  __metadata:
    description: "resources settings"
    label: "resources label" 
  limits:
    __metadata:
     description: "limits settings"
     label: "limits label"
    cpu:
     __metadata:
       description: "cpu settings"
       label: "cpu label"
    memory:
      __metadata:
        description: "memory settings"
        label: "memory label"
  requests:
     __metadata:
       description: "requests settings"
       label: "requests label"
     cpu:
       __metadata:
         description: "cpu settings"
         label: "cpu label"
     memory:
       __metadata:
         description: "memory settings"
         label: "memory label"

# if chown is true, an init-container with sudo is launched to
# change the owner of the persistence volume mount folder to the user defined in the
# security context       
initContainer:
  __metadata:
    description: "initContainer settings"
    label: "initContainer label"
  chown:
    __metadata:
      description: "chown settings"
      label: "chown label"
  securityContext:
    __metadata:
      description: "securityContext settings"
      label: "securityContext label"
    runAsUser:
      __metadata:
        description: "runAsUser settings"
        label: "runAsUser label"
  resources:
    __metadata:
      description: "resources settings"
      label: "resources label"
    limits:
      __metadata:
       description: "limits settings"
       label: "limits label"
      cpu:
        __metadata:
          description: "cpu settings"
          label: "cpu label"
      memory:
        __metadata:
          description: "memory settings"
          label: "memory label"
    requests:
      __metadata:
        description: "requests settings"
        label: "requests label"
      cpu:
       __metadata:
         description: "cpu settings"
         label: "cpu label"
      memory:
       __metadata:
         description: "memory settings"
         label: "memory label"


# job for generating secrets.. only runs is existingSecret=false
secretGeneration:
  __metadata:
    description: "secretGeneration settings"
    label: "secretGeneration label"
  serviceAccountName:
    __metadata:
      description: "serviceAccountName settings"
      label: "serviceAccountName label"
  securityContext:
    __metadata:
      description: "securityContext settings"
      label: "securityContext label"
    runAsUser:
      __metadata:
        description: "runAsUser settings"
        label: "runAsUser label"
  image:
    __metadata:
      description: "image settings"
      label: "image label"
    repository:
      __metadata:
        description: "repository settings"
        label: "repository label"
    tag:
      __metadata:
        description: "tag settings"
        label: "tag label"
    imagePullSecrets:
      __metadata:
        description: "imagePullSecrets settings"
        label: "imagePullSecrets label"
  resources:
    __metadata:
      description: "resources settings"
      label: "resources label"
    requests:
      __metadata:
        description: "requests settings"
        label: "requests label"
      cpu:
        __metadata:
          description: "cpu settings"
          label: "cpu label"
      memory:
        __metadata:
          description: "memory settings"
          label: "memory label"
    limits:
      __metadata:
        description: "limits settings"
        label: "limits label"
      cpu:
        __metadata:
          description: "cpu settings"
          label: "cpu label"
      memory:
        __metadata:
          description: "memory settings"
          label: "memory label"   


## Data Persistency
persistentVolume:
  __metadata:
    description: "persistentVolume settings"
    label: "persistentVolume label"
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  overrideStorageClass:
    __metadata:
      description: "overrideStorageClass settings"
      label: "overrideStorageClass label"
  name:
    __metadata:
      description: "name settings"
      label: "name label"
  path:
    __metadata:
      description: "path settings"
      label: "path label"
  accessModes:
    __metadata:
      description: "accessModes settings"
      label: "accessModes label"
    
  size:
    __metadata:
      description: "size settings"
      label: "size label"
  annotations:
    __metadata:
      description: "annotations settings"
      label: "annotations label"

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
##
nodeSelector:
  __metadata:
      description: "nodeSelector settings"
      label: "nodeSelector label"

## Node tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
##
tolerations:
  __metadata:
      description: "tolerations settings"
      label: "tolerations label"

## Extra Annotations to be added to pod
podAnnotations:
  __metadata:
    description: "podAnnotations settings"
    label: "podAnnotations label"

## Pod affinity
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
podAntiAffinity:
  __metadata:
    description: "podAntiAffinity settings"
    label: "podAntiAffinity label"

## Create default configMap
##
existingConfigMap:
  __metadata:
    description: "existingConfigMap settings"
    label: "existingConfigMap label"

## Add additional labels to all resources
##
extraLabels:
  __metadata:
    description: "extraLabels settings"
    label: "extraLabels label"

## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
##
rbac:
  __metadata:
    description: "rbac settings"
    label: "rbac label"
  create:
    __metadata:
      description: "create settings"
      label: "create label"

## Service Account
## Ref: https://kubernetes.io/docs/admin/service-accounts-admin/
##
serviceAccount:
  __metadata:
    description: "serviceAccount settings"
    label: "serviceAccount label"
  create:
    __metadata:
      description: "create settings"
      label: "create label"

  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  # name:

securityContext:
  __metadata:
    description: "securityContext settings"
    label: "securityContext label"
  fsGroup:
    __metadata:
      description: "fsGroup settings"
      label: "fsGroup label"
  runAsUser:
    __metadata:
      description: "runAsUser settings"
      label: "runAsUser label"


ingress:
  __metadata:
    description: "ingress settings"
    label: "ingress label"
  ## Set to true to enable ingress record generation
  enabled:
    __metadata:
      description: "enabled settings"
      label: "enabled label"

  path:
    __metadata:
      description: "path settings"
      label: "path label"

  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  ## hostName: foo.bar.com

  ## Set this to true in order to enable TLS on the ingress record
  tls:
    __metadata:
      description: "tls settings"
      label: "tls label"

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret:
    __metadata:
      description: "annotations settings"
      label: "annotations label"

  ## Ingress annotations done as key:value pairs
  annotations:
    __metadata:
      description: "replicaCount settings"
      label: "replicaCount label"
  #  kubernetes.io/ingress.class: nginx

livenessProbe:
  __metadata:
    description: "livenessProbe settings"
    label: "livenessProbe label"
  initialDelaySeconds:
    __metadata:
      description: "initialDelaySeconds settings"
      label: "initialDelaySeconds label"
  periodSeconds:
    __metadata:
      description: "periodSeconds settings"
      label: "periodSeconds label"
  timeoutSeconds:
    __metadata:
      description: "failureThreshold settings"
      label: "failureThreshold label"
  failureThreshold:
    __metadata:
      description: "replicaCount settings"
      label: "replicaCount label"

readinessProbe:
  __metadata:
    description: "readinessProbe settings"
    label: "readinessProbe label"
  failureThreshold:
    __metadata:
      description: "initialDelaySeconds settings"
      label: "initialDelaySeconds label"
  initialDelaySeconds:
    __metadata:
      description: "replicaCount settings"
      label: "replicaCount label"
  timeoutSeconds:
    __metadata:
      description: "timeoutSeconds settings"
      label: "timeoutSeconds label"
  periodSeconds:
    __metadata:
      description: "periodSeconds settings"
      label: "periodSeconds label"

# Specifies an existing secret to be used for RMQ password and Erlang Cookie
existingSecret:
  __metadata:
    description: "existingSecret settings"
    label: "existingSecret label"

## Kubernetes Cluster Domain
clusterDomain:
  __metadata:
    description: "clusterDomain settings"
    label: "clusterDomain label"

## Add arch value
archx86_64:
  __metadata:
    description: "arch settings"
    label: "arch label"
archppc64le:
  __metadata:
    description: "arch settings"
    label: "arch label"
