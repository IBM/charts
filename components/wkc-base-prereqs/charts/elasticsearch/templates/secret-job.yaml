{{- if not .Values.existingSecret }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "uname" . }}-secret-job
  labels:
    app: "{{ template "uname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
  {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 4 }}
  {{- end }}   
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 480
  template:
    metadata: 
      labels:
        release: {{ .Release.Name | quote }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Chart.Name }}-secret-job
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      annotations:
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      {{- if .Values.secretGeneration.serviceAccountName }}
      serviceAccountName: {{ .Values.secretGeneration.serviceAccountName }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.archx86_64 }}
                - {{ .Values.archppc64le }}
      securityContext:
        runAsNonRoot: true
      {{- if .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      containers:
      - name: {{ template "uname" . }}-secret-job
        imagePullPolicy: IfNotPresent
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.secretGeneration.image.repository }}:{{ .Values.secretGeneration.image.tag }}
        command: ["/bin/bash", "-c", "/wkc/init.sh"]
        volumeMounts:
          - name: secret-generation-config
            mountPath: /wkc
          - name: certs-volume
            mountPath: /certs
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: "{{ .Values.secretGeneration.resources.requests.memory }}"
            cpu: "{{ .Values.secretGeneration.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.secretGeneration.resources.limits.memory }}"
            cpu: "{{ .Values.secretGeneration.resources.limits.cpu }}"
        env:
          - name: ICPD_CONTROLPLANE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          {{- if .Values.global.ibmProduct }}
          - name: PRODUCT_NAME
            value: {{ .Values.global.ibmProduct | quote }}
          {{- end }}
{{- if .Values.secretGeneration.image.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.secretGeneration.image.imagePullSecrets }}
{{- end }}    
      volumes:
        - name: secret-generation-config
          configMap:
            name: {{ template "uname" . }}-secret-config
            defaultMode: 0555
        - name: certs-volume
          emptyDir: {}
          
{{- end }}
