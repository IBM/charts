---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "uname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "uname" . }}"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
{{ toYaml .Values.service.annotations | indent 4 }}
spec:
  type: {{ .Values.service.type }}
  selector:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "uname" . }}"
  ports:
  - name: http
    protocol: TCP
    port: {{ if .Values.useSSLProxy }}{{ .Values.proxyHttpPort }}{{ else }}{{ .Values.httpPort }}{{ end }}
    targetPort: {{ if .Values.useSSLProxy }}{{ .Values.proxyHttpPort }}{{ else }}{{ .Values.httpPort }}{{ end }}
{{- if .Values.service.nodePort }}
    nodePort: {{ .Values.service.nodePort }}
{{- end }}
  - name: transport
    protocol: TCP
    port: {{ if .Values.useSSLProxy }}{{ .Values.proxyTransportPort }}{{ else }}{{ .Values.transportPort }}{{ end }}
    targetPort: {{ if .Values.useSSLProxy }}{{ .Values.proxyTransportPort }}{{ else }}{{ .Values.transportPort }}{{ end }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "uname" . }}-headless
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "uname" . }}"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "{{ template "uname" . }}"
  ports:
  {{- if not .Values.useSSLProxy }}
  - name: http
    port: {{ .Values.httpPort }}
  - name: transport
    port: {{ .Values.transportPort }}
  {{- else }}
  - name: ssltransport
    port: {{ .Values.proxyTransportPort }}  
  {{- end }}