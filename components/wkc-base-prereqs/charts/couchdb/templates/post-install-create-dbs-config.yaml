kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ template "couchdb.fullname" . }}-job-config"
  labels:
    app: {{ template "couchdb.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
data:
  create_dbs.sh: |
    #!/usr/bin/env bash

    BASEURL=http://couchdb-ha-svc:5984
    CLUSTER_HEADER="Content-Type:application/json"
    AUTH_CRED="-u $ADMIN_USERNAME:$ADMIN_PASSWORD"

    sleep 60

    # Create DBs
    echo "INFO: Performing cluster setup"
    code=$(curl -s $BASEURL/_cluster_setup -H $CLUSTER_HEADER $AUTH_CRED --max-time 180 -X POST -d '{"action":"finish_cluster"}' -w %{http_code} -o /dev/null)
    ret=$?
    [ "$code" -eq "201" ] && { echo "INFO: cluster setup completed"; exit 0; }
    [ "$code" -eq "412" ] && { echo "WARNING: cluster setup already done"; exit 0; }
    # it is an unexpected code so save it
    echo "ERROR: Failed to perform cluster setup with HTTP $code"

    # append a new line in case `curl -v` outputs last line with no CR/LF
    echo ""
    echo "INFO: Exiting with http code $code"
    exit 1
