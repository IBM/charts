apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "couchdb.fullname" . }}-setup-job
  labels:
    app: {{ template "couchdb.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }} 
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 4 }}
{{- end }}
spec:
  backoffLimit: 10
  activeDeadlineSeconds: 900
  template:
    metadata:
      labels:
        release: {{ .Release.Name | quote }}
        app.kubernetes.io/instance: {{ .Release.Name }}-post-install
        app.kubernetes.io/managed-by: {{ .Release.Service }} 
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
      annotations:
      {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | trim | indent 8 }}
      {{- end }}
    spec:
      restartPolicy: Never
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.archx86_64 }}
                - {{ .Values.archppc64le }}
      containers:
      - name: "{{ template "couchdb.fullname" . }}-setup-job"
        imagePullPolicy: {{ .Values.jobImage.pullPolicy }}
        image: {{ if .Values.global.docker_registry_prefix }}{{ trimSuffix "/" .Values.global.docker_registry_prefix }}/{{ end }}{{ .Values.jobImage.repository }}:{{ .Values.jobImage.tag }}
        command: ["/bin/sh", "/beacon/create_dbs.sh"]
        volumeMounts:
        - name: {{ template "couchdb.fullname" . }}-job-config-volume
          mountPath: /beacon
        env:
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wdp-cloudant-creds
              key: password
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: wdp-cloudant-creds
              key: username   
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        resources:
{{ toYaml .Values.jobImage.resources | indent 11 }}    
      securityContext:
        runAsNonRoot: true  
      {{- if .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      {{- if .Values.image.pullSecret }}    
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}                  
      volumes:
        - name: {{ template "couchdb.fullname" . }}-job-config-volume
          configMap:
            name: {{ template "couchdb.fullname" . }}-job-config
            defaultMode: 0555
