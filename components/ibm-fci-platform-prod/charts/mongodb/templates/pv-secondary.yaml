{{- if .Values.global.createPv }}
{{- range $i, $e := until (.Values.replicaSet.replicas.secondary | int) }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ template "mongodb.fullname" $ }}-secondary-{{ add $i 1 }}
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "mongodb.name" $) "secondary") (include "mongodb.chart" $) $.Release.Name $.Release.Service ) | indent 4 }}
spec:
  nfs:
    path: {{ $.Values.pvSecondaryNfsPath }}-{{ add $i 1 }}
    server: {{ required "When global.createPv is set to true, global.nfsServer must specify the NFS server that holds the persistent volume." $.Values.global.nfsServer }}
    readOnly: false
{{-   if $.Values.pvcSpec.size }}
  capacity:
    storage: {{ $.Values.pvcSpec.size }}
{{-   end }}
{{- if $.Values.global.persistence.useDynamicProvisioning }}
{{-   if not $.Values.pvcSpec.storageClassName }}
  storageClassName: {{ default nil $.Values.global.persistence.storageClassName | quote }}
{{-   else }}
  storageClassName: {{ $.Values.pvcSpec.storageClassName | quote }}
{{-   end }}
{{- else }}
  storageClassName: {{ default "" $.Values.pvcSpec.storageClassName | quote }}
{{- end }}
{{-   if $.Values.pvcSpec.accessModes }}
{{-     with $.Values.pvcSpec.accessModes }}
  accessModes:
{{        toYaml . | indent 4 -}}
{{-     end -}}
{{-   end }}
---
{{- end -}}
{{- end -}}
