{{- if .Values.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "mongodb.fullname" . }}-config"
  labels:
    app: {{ template "mongodb.name" . }}-config
    chart: {{ template "mongodb.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "mongodb.name" . }}-config
        chart: {{ template "mongodb.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      restartPolicy: OnFailure
      volumes:
        - name: custom-init-scripts
          configMap:
            name: {{ template "mongodb.fullname" . }}-init-scripts
            defaultMode: 0755
      serviceAccountName: {{ .Release.Name }}-common-scripts
      initContainers:
        - name: init-svc-depend
          image: "{{ required "global.dockerRepository must specify from which repository the docker image should be fetched." .Values.global.dockerRepository }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.sideCarContainers.resources | indent 12 }}
          command: [ "/common-scripts/init-container-svc-depend.sh" ]
          args: [ "{{ .Release.Namespace }}/{{ .Release.Name }}-mongodb" ]
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
      containers:
        - name: {{ template "mongodb.fullname" . }}-config
          image: "{{ .Values.global.dockerRepository }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          command: ["/tmp/initMongodb.sh"]
          envFrom:
          - configMapRef:
              name: {{ template "mongodb.fullname" . }}-db
          env:
          - name: MONGODB_HOSTNAME
            value: "{{ template "mongodb.fullname" . }}"
          - name: MONGODB_IUI_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-iui-password
          - name: MONGODB_REPLICA_SET_NAME
            value: {{ .Values.replicaSet.name | quote }}
          - name: MONGODB_ADVERTISED_HOSTNAME
            value: "$(MONGODB_HOSTNAME).{{ template "mongodb.fullname" . }}-headless.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}"
          - name: MONGODB_FCDD_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-fcdd-password
          - name: MONGODB_TLS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-fcai-tls-password
          - name: MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-password
          - name: MONGODB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-root-password
          - name: MONGODB_REPLICA_SET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-replica-set-key
          - name: MONGODB_DSF_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-dsf-password
          - name: MONGODB_ERAAS_INVESTIGATION_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-eraas-investigation-password
          - name: MONGODB_ERAAS_PROXY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-eraas-proxy-password
          - name: MONGODB_ERAAS_KYC_ADAPTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-platform-secrets-env
                key: mongodb-eraas-kyc-adapter-password
          volumeMounts:
            - name: custom-init-scripts
              mountPath: /tmp
{{- end -}}
