{{- if .Values.enabled }}
{{- if eq .Values.global.DB2_PROVISIONER "CLOUD_PAK" }}
{{- $releaseName := .Release.Name }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cognos.fullname" . }}-provisioning
  labels:
{{- include "common.label.metadata" (list . (include "cognos.name" .) (include "cognos.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  template:
    metadata:
      labels:
{{- include "common.label.metadata" (list . (include "cognos.name" .) (include "cognos.chart" .) .Release.Name .Release.Service ) | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      restartPolicy: Never
      volumes:
        - name: zen-service-broker-secret
          secret:
            defaultMode: 420
            secretName: zen-service-broker-secret
      serviceAccountName: fci-common
      initContainers:
        - name: db2-provisioner
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          image: "{{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          imagePullPolicy: {{ .Values.global.commonScripts.image.pullPolicy }}
          env:
{{- include "common.import-secret" (list . "db2password" "db2" "DB2INST1_PASSWORD") | indent 10 }}
          - name: PROVISION_FOR_COGNOS
            value: "true"
          - name: TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                name: zen-service-broker-secret
                key: token
          envFrom:
          - configMapRef:
              name: {{ template "cognos.fullname" . }}
          command:
            - bash
            - -c
            - /common-scripts/create-cp-service-instance.sh --debug="$DEBUG_PROVISIONING" --token="$TOKEN_SECRET" --type=db2aaservice
          resources:
{{ toYaml .Values.provisioner.resources | indent 12 }}
      containers:
        - name: {{ template "cognos.fullname" . }}-provisioning
          volumeMounts:
          - mountPath: /var/run/sharedsecrets
            name: zen-service-broker-secret
          env:
 {{- include "common.import-secret" (list . "CONTENT_STORE_PASS" "db2" "DB2INST1_PASSWORD") | indent 10 }}
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-db2 
          envFrom:
          - configMapRef:
              name: {{ template "cognos.fullname" . }}                     
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}
          imagePullPolicy: {{ .Values.global.commonScripts.image.pullPolicy }}
          command:
            - bash
            - -c
            - /common-scripts/provision-cognos.sh "$DEBUG_PROVISIONING"
          resources:
{{ toYaml .Values.provisioner.resources | indent 12 }}          
{{- end -}} {{- /* if CLOUD_PAK provisioning */ -}}
{{- end -}} {{- /* if enabled */ -}}
