apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "elasticsearch.fullname" . }}
  labels:
{{- include "common.label.metadata" (list . (include "elasticsearch.name" .) (include "elasticsearch.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
{{ include "common.scaleDownIfDisabled" . | indent 2 }}
  serviceName: {{ template "elasticsearch.name" . }}
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (include "elasticsearch.name" .) .Release.Name ) | indent 6 }}
  template:
    metadata:
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
      labels:
{{- include "common.label.metadata" (list . (include "elasticsearch.name" .) (include "elasticsearch.chart" .) .Release.Name .Release.Service ) | indent 8 }}
{{- include "common.using-secrets" (list "elastic") | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      serviceAccountName: fci-elasticsearch
      volumes:
      - name: file-secrets
        secret:
          secretName: {{ template "common-ui.core-release-name" . }}-platform-secret-files
      - name: es-data
        persistentVolumeClaim:
          claimName: {{ template "elasticsearch.fullname" . }}
      initContainers:
      {{- if .Values.global.pvRequiresPermissionsFix }}
      - name: permissionsfix
        securityContext:
{{ include "common.RootChownerContainerSecurityContext" . | indent 10 }}
        args:
        - chown -R 1000:1000 /mount;
        command:
        - /bin/sh
        - -c
        image: "{{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
        resources:
{{ toYaml .Values.sideCarContainers.resources | indent 10 }}
        volumeMounts:
        - mountPath: /mount
          name: es-data
      {{- end }}
      containers:
        - name: elasticsearch
          image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ include "common.readinessProbe" . | indent 10 }}
{{ include "common.livenessProbe" . | indent 10 }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          env:
          - name: "bootstrap.memory_lock"
            value: "true"
          envFrom:
          - configMapRef:
              name: {{ template "elasticsearch.fullname" . }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - mountPath: "/usr/share/elasticsearch/data"
              name: es-data
            - name: file-secrets
              mountPath: /usr/share/elasticsearch/config/fci_universal_ks.pvtk.pem
              subPath: fci_universal_ks.pvtk.pem
            - name: file-secrets
              mountPath: /usr/share/elasticsearch/config/fci_universal_ks.crt.pem
              subPath: fci_universal_ks.crt.pem
            - name: file-secrets
              mountPath: /usr/share/elasticsearch/config/searchguard_admin.crt.pem
              subPath: searchguard_admin.crt.pem
            - name: file-secrets
              mountPath: /usr/share/elasticsearch/config/searchguard_admin.pvtk.pem
              subPath: searchguard_admin.pvtk.pem
          ports:
            - containerPort: 9200
        - name: elasticsearch-proxy
          image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.nginxSslProxy.image.repository }}:{{ .Values.global.nginxSslProxy.image.tag }}
          resources:
{{ toYaml .Values.global.nginxSslProxy.resources | indent 12 }}
          imagePullPolicy: {{ .Values.global.nginxSslProxy.image.pullPolicy }}
{{ include "common.sideCarHealthCheck" . | indent 10 }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          env:
{{- include "common.import-secret" (list . "HTTP_AUTH_PASSWORD" "elastic" "ELASTIC_ADMIN_PASSWORD") | indent 10 }}
          - name: "SERVICE_HOST_ENV_NAME"
            value: "localhost"
          - name: "SERVICE_PORT_ENV_NAME"
            value: "9200"
          - name: "HTTP_PROXY"
            value: "true"
          - name: "HTTP_AUTH"
            value: "true"
          - name: "HTTP_AUTH_USERID"
            value: "fci_admin"
          - name: "PROXY_READ_TIMEOUT"
            value: "360"
          volumeMounts:
          - name: file-secrets
            mountPath: /etc/secrets/proxykey
            subPath: fci_universal_ks.pvtk.pem
          - name: file-secrets
            mountPath: /etc/secrets/proxycert
            subPath: fci_universal_ks.crt.pem
