apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    esMajorVersion: "6"
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "elasticsearch.name" .) "client") (include "elasticsearch.chart" .) .Release.Name .Release.Service ) | indent 4 }}
  name: {{ template "elasticsearch.fullname" . }}-client
spec:
  replicas: {{ .Values.client.numReplicas }}
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "elasticsearch.name" .) "client") .Release.Name ) | indent 6 }}
  serviceName: {{ template "elasticsearch.name" . }}-client-headless
  template:
    metadata:
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "elasticsearch.name" .) "client") (include "elasticsearch.chart" .) .Release.Name .Release.Service ) | indent 8 }}
      name: {{ template "elasticsearch.fullname" . }}-client
    spec:
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      containers:
      - env:
        - name: node.name
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: discovery.zen.ping.unicast.hosts
          value: {{ template "elasticsearch.fullname" . }}-master-headless
        - name: cluster.name
          value: {{ .Values.global.clusterName }}
        - name: network.host
          value: 0.0.0.0
        - name: node.data
          value: "false"
        - name: node.ingest
          value: "false"
        - name: node.master
          value: "false"
        - name: MEM_PERC
          value: "80"
        image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}
        imagePullPolicy: {{ .Values.client.image.pullPolicy }}
        name: elasticsearch
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          exec:
            command:
              - sh
              - '-c'
              - /usr/local/bin/healthcheck.sh
          failureThreshold: 3
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - sh
              - '-c'
              - /usr/local/bin/healthcheck.sh
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        resources:
{{ toYaml .Values.client.resources | indent 10 }}
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/config/fci_universal_ks.pvtk.pem
          name: file-secrets
          subPath: fci_universal_ks.pvtk.pem
        - mountPath: /usr/share/elasticsearch/config/fci_universal_ks.crt.pem
          name: file-secrets
          subPath: fci_universal_ks.crt.pem
      - env:
        - name: HTTP_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: ELASTIC_ADMIN_PASSWORD
              name: {{ .Release.Name }}-elastic-secrets-env
        - name: SERVICE_HOST_ENV_NAME
          value: localhost
        - name: SERVICE_PORT_ENV_NAME
          value: "9200,9300"
        - name: HTTP_PROXY
          value: "true"
        - name: HTTP_AUTH
          value: "true"
        - name: HTTP_AUTH_USERID
          value: fci_admin
        - name: PROXY_READ_TIMEOUT
          value: "360"
        image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.nginxSslProxy.image.repository }}:{{ .Values.global.nginxSslProxy.image.tag }}
        imagePullPolicy: {{ .Values.global.nginxSslProxy.image.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - echo
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: elasticsearch-proxy
        readinessProbe:
          exec:
            command:
            - echo
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.global.nginxSslProxy.resources | indent 10 }}
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
        volumeMounts:
        - mountPath: /etc/secrets/proxykey
          name: file-secrets
          subPath: fci_universal_ks.pvtk.pem
        - mountPath: /etc/secrets/proxycert
          name: file-secrets
          subPath: fci_universal_ks.crt.pem
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      serviceAccount: {{ .Release.Name }}-common
      serviceAccountName: {{ .Release.Name }}-common
      volumes:
      - name: file-secrets
        secret:
          defaultMode: 420
          secretName: {{ .Release.Name }}-platform-secret-files
