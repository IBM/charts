{{- if and .Values.enabled (not .Values.global.deployOnCP4D) -}}
apiVersion: {{ template "cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: {{ template "logging.fullname" . }}-curator
  labels:
    app: {{ template "logging.name" . }}-curator
    chart: {{ template "logging.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ template "logging.name" . }}-curator
            release: {{ .Release.Name }}
        spec:
{{ include "common.configureHostAliases" . | indent 10 }}
{{ include "common.PodHostConfig" . | indent 10 }}
          securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 12 }}
          affinity:
{{ include "common.ArchNodeAffinity" . | indent 12 }}
          volumes:
          - name: config-volume
            configMap:
              name: {{ template "logging.fullname" . }}-curator
          restartPolicy: OnFailure
          serviceAccountName: {{ .Release.Name }}-common-scripts
          initContainers:
            - name: init-svc-depend
              resources:
{{ toYaml .Values.logsearchCurator.resources | indent 16 }}
              image: "{{ required "global.dockerRepository must specify from which repository the docker image should be fetched." .Values.global.dockerRepository }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
              securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 16 }}
              command: [ "/common-scripts/init-container-svc-depend.sh" ]
              args: [ "{{ .Release.Namespace }}/{{ .Release.Name }}-elasticsearch" ]
          containers:
            - name: {{ .Chart.Name }}-curator
              image: {{ required "global.dockerRepository must specify from which repository the docker image should be fetched." .Values.global.dockerRepository }}/{{ .Values.logsearchCurator.image.repository }}:{{ .Values.logsearchCurator.image.tag }}
              imagePullPolicy: {{ .Values.logsearchCurator.image.pullPolicy }}
              resources:
{{ toYaml .Values.logsearchCurator.resources | indent 16 }}
              securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 16 }}
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/es-curator
              command: [ "/bin/sh", "-c" ]
              env:
              - name: "HTTP_AUTH_USERID"
                value: {{ .Values.elasticsearchUsername }}
              - name: "HTTP_AUTH_PASSWORD"
                valueFrom:
                  secretKeyRef:
                    name: {{ .Release.Name }}-platform-secrets-env
                    key: ELASTIC_ADMIN_PASSWORD
              - name: DAYS
                value: {{ .Values.daysToKeepIndices | quote }}
              args: 
              - export HTTP_AUTH=${HTTP_AUTH_USERID}:${HTTP_AUTH_PASSWORD};
                curator --config /etc/es-curator/config.yml /etc/es-curator/action_file.yml;
{{- end -}}
