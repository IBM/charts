{{- if and .Values.global.enableMonitoring (not (or .Values.global.deployOnIBMCloud .Values.global.deployOnEKS .Values.global.deployOnCP4D)) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "prometheus.alertmanager.labels" . | nindent 4 }}
  name: {{ template "prometheus.alertmanager.fullname" . }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.alertmanager.matchLabels" . | nindent 6 }}
{{ include "prometheus.scaleDownIfDisabled" . | indent 2 }}
  template:
    metadata:
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
    {{- if .Values.alertmanager.podAnnotations }}
{{ toYaml .Values.alertmanager.podAnnotations | indent 8 }}
    {{- end }}
      labels:
        {{- include "prometheus.alertmanager.labels" . | nindent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
      serviceAccountName: {{ template "prometheus.serviceAccountName.alertmanager" . }}
{{- if .Values.alertmanager.priorityClassName }}
      priorityClassName: "{{ .Values.alertmanager.priorityClassName }}"
{{- end }}
      containers:
        - name: {{ template "prometheus.name" . }}-{{ .Values.alertmanager.name }}
          image: "{{ .Values.global.dockerRepository }}/{{ .Values.alertmanager.image.repository }}:{{ .Values.alertmanager.image.tag }}"
          imagePullPolicy: "{{ .Values.alertmanager.image.pullPolicy }}"
          env:
            {{- range $key, $value := .Values.alertmanager.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/alertmanager
            - --cluster.advertise-address=$(POD_IP):6783
          {{- range $key, $value := .Values.alertmanager.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          {{- if .Values.alertmanager.baseURL }}
            - --web.external-url={{ .Values.alertmanager.baseURL }}
          {{- end }}

          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: {{ .Values.alertmanager.prefixURL }}/#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: {{ .Values.alertmanager.prefixURL }}/#/status
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.alertmanager.resources | indent 12 }}
          volumeMounts:
          {{- if and .Values.alertmanagerConfig.enable_smtp .Values.alertmanagerConfig.smtp_config.smtp_require_tls }}
            - name: file-secrets
              mountPath: /etc/ssl/certs/smtp_server.crt
              subPath: smtp_server.crt
          {{- end }}
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /alertmanager
        - name: {{ template "prometheus.name" . }}-{{ .Values.alertmanager.name }}-proxy
          image: {{ required "global.dockerRepository must specify from which repository the docker image should be fetched." .Values.global.dockerRepository }}/{{ .Values.global.nginxSslProxy.image.repository }}:{{ .Values.global.nginxSslProxy.image.tag }}
          imagePullPolicy: {{ .Values.global.nginxSslProxy.image.pullPolicy }}
          env:
          - name: "SERVICE_HOST_ENV_NAME"
            value: "localhost"
          - name: "SERVICE_PORT_ENV_NAME"
            value: "9093"
          volumeMounts:
          - name: file-secrets
            mountPath: /etc/secrets/proxykey
            subPath: fci_universal_ks.pvtk.pem
          - name: file-secrets
            mountPath: /etc/secrets/proxycert
            subPath: fci_universal_ks.crt.pem
    {{- if .Values.alertmanager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.securityContext }}
      securityContext:
{{ toYaml .Values.alertmanager.securityContext | indent 8 }}
    {{- end }}
    {{- if .Values.alertmanager.tolerations }}
      tolerations:
{{ toYaml .Values.alertmanager.tolerations | indent 8 }}
    {{- end }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
{{- with .Values.alertmanager.affinity }}
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
      {{- if and .Values.alertmanagerConfig.enable_smtp .Values.alertmanagerConfig.smtp_config.smtp_require_tls }}
        - name: file-secrets
          secret:
            secretName: {{ .Release.Name }}-platform-secret-files
      {{- end }}
        - name: config-volume
          configMap:
            name: {{ template "prometheus.alertmanager.fullname" . }}
        - name: file-secrets
          secret:
            secretName: {{ .Release.Name }}-platform-secret-files
        - name: storage-volume
          persistentVolumeClaim:
            claimName: {{ template "prometheus.alertmanager.fullname" . }}
{{- end -}}
