apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common-ui.fullname" . }}-nodejs
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "common-ui.name" .) "nodejs" ) (include "common-ui.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "common-ui.name" .) "nodejs") .Release.Name ) | indent 6 }}
  template:
    metadata:
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "common-ui.name" .) "nodejs" ) (include "common-ui.chart" .) .Release.Name .Release.Service ) | indent 8 }}
{{- include "common.using-secrets" (list "platform") | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      serviceAccountName: fci-common
      volumes:
      - name: file-secrets
        secret:
          secretName: {{ template "common-ui.core-release-name" . }}-platform-secret-files
      containers:
      - name: nodejs
        image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.nodejs.image.repository }}:{{ .Values.nodejs.image.tag }}
        imagePullPolicy: {{ .Values.nodejs.image.pullPolicy }}
{{ include "common.readinessProbe" . | indent 8 }}
{{ include "common.livenessProbe" . | indent 8 }}
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
        resources:
{{ toYaml .Values.nodejs.resources | indent 10 }}
{{- with .Values.nodejs.nodeSelector }}
        nodeSelector:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.nodejs.affinity }}
        affinity:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.nodejs.tolerations }}
        tolerations:
{{ toYaml . | indent 10 }}
{{- end }}
        env:
{{- include "common.import-secret" (list . "JWT_KEY" "platform" "JWT_KEY") | indent 8 }}
        envFrom:
        - configMapRef:
            name: {{ template "common-ui.fullname" . }}
        volumeMounts:
        - name: file-secrets
          mountPath: /code/certs/common-ui.pem
          subPath: fci_universal_ks.pvtk.pem
        - name: file-secrets
          mountPath: /code/certs/common-ui.crt
          subPath: fci_universal_ks.crt.pem
        ports:
        - containerPort: 3000
      restartPolicy: Always
