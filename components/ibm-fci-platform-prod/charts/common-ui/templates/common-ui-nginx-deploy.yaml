apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common-ui.fullname" . }}-nginx
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "common-ui.name" .) "nginx" ) (include "common-ui.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "common-ui.name" .) "nginx") .Release.Name ) | indent 6 }}
  template:
    metadata:
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "common-ui.name" .) "nginx" ) (include "common-ui.chart" .) .Release.Name .Release.Service ) | indent 8 }}
{{- include "common.using-secrets" (list "elastic" "platform") | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
{{- if .Values.global.pvRequiresPermissionsFix }}
      serviceAccountName: fci-kube-api-chown
{{ else }}
      serviceAccountName: fci-common-scripts
{{ end }}      
      volumes:
        - name: internal-tls
          secret:
            secretName: internal-tls
            defaultMode: 420
        - name: varlog
          emptyDir: {}
        - name: iui-nginx-data
          persistentVolumeClaim:
            claimName: {{ template "common-ui.fullname" . }}-nginx
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-platform-config-files
{{- if hasKey .Values "global" }}
{{-   if hasKey .Values.global "swidtag" }}
{{-     if hasKey .Values.global.swidtag "file" }}
        - name: swidtags
          configMap:
            name: {{ .Release.Name }}-swidtag-files
{{-     end }}
{{-   end }}
{{- end }}
        - name: file-secrets
          secret:
            secretName: {{ template "common-ui.core-release-name" . }}-platform-secret-files
      initContainers:
        - name: init-svc-depend
          image: "{{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.sideCarContainers.resources | indent 12 }}
          command: [ "/common-scripts/init-container-svc-depend.sh" ]
          securityContext:
{{ include "common.AnyuidContainerSecurityContext" . | indent 12 }}
          args: [ "{{ .Release.Namespace }}/{{ template "common-ui.fullname" . }}-nodejs" ]
{{ if eq .Values.global.IDENTITY_SERVER_TYPE "CLOUD_PAK" }}
        - name: set-cpd-route
          image: "{{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.sideCarContainers.resources | indent 12 }}
          command: [ "/common-scripts/set-cpd-route.sh" ]
          envFrom:
          - configMapRef:
              name: {{ template "common-ui.fullname" . }}-nginx
          securityContext:
{{ include "common.AnyuidContainerSecurityContext" . | indent 12 }}
{{ end }}
        {{- if .Values.global.pvRequiresPermissionsFix }}
        - name: pv-permissions
          image: "{{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.sideCarContainers.resources | indent 12 }}
          securityContext:
{{ include "common.RootChownerContainerSecurityContext" . | indent 12 }}
          args:
          - chown -R 1000 /mount;
          command:
          - /bin/sh
          - -c
          volumeMounts:
          - mountPath: /mount
            name: iui-nginx-data
        {{- end }}
      containers:
      - name: nginx
        image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
        imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
{{ include "common.readinessProbe" . | indent 8 }}
{{ include "common.livenessProbe" . | indent 8 }}
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
        resources:
{{ toYaml .Values.nginx.resources | indent 10 }}
{{- with .Values.nginx.nodeSelector }}
        nodeSelector:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.nginx.affinity }}
        affinity:
{{ toYaml . | indent 10 }}
{{- end }}
{{- with .Values.nginx.tolerations }}
        tolerations:
{{ toYaml . | indent 10 }}
{{- end }}
        env:
{{- include "common.import-secret" (list . "SI_ELASTIC_PASSWORD" "elastic" "ELASTIC_ADMIN_PASSWORD") | indent 8 }}
{{- include "common.import-secret" (list . "JWT_KEY" "platform" "JWT_KEY") | indent 8 }}
        - name: NAMESPACE
          value: {{ .Release.Namespace }}
        - name: NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: product-configmap
        - configMapRef:
            name: {{ template "common-ui.fullname" . }}-nginx
        volumeMounts:
{{- if hasKey .Values "global" }}
{{-   if hasKey .Values.global "swidtag" }}
{{-     if hasKey .Values.global.swidtag "file" }}
        - name: swidtags
          mountPath: /opt/ibm/fci/swidtag/{{ .Values.global.swidtag.file }}
          subPath: {{ .Values.global.swidtag.file }}
{{-     end }}
{{-   end }}
{{- end }}
        - name: config-volume
          mountPath: /etc/nginx/conf.d/custom/custom.conf
          subPath: custom.conf
        - name: file-secrets
          mountPath: /etc/nginx/certs/fci-web.pem
          subPath: fci_universal_ks.pvtk.pem
        - name: file-secrets
          mountPath: /etc/nginx/certs/fci-web.crt
          subPath: fci_universal_ks.crt.pem
        - name: iui-nginx-data
          mountPath: /etc/nginx/conf.d
        - name: varlog
          mountPath: /var/log
      - name: sidecar
        image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
        imagePullPolicy: {{ .Values.sidecar.image.pullPolicy }}
        securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 10 }}
{{ include "common.sideCarHealthCheck" . | indent 8 }}
        resources:
{{ toYaml .Values.sidecar.resources | indent 10 }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: NODENAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: PODIPADDRESS
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: product-configmap
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: internal-tls
          mountPath: /etc/internal-tls
      restartPolicy: Always
