global:
  imagePullSecrets:
  dockerRegistryPrefix:

#Leightweight init container
sideCarContainers:
  resources:
    requests:
      memory: "64Mi"
      cpu: "0.03"
    limits:
      memory: "512Mi"
      cpu: "0.1"


image:
  repository: ibmcom/fci-security-audit-app
  tag: 6.5.2
  pullPolicy: IfNotPresent

resources:
  requests:
    memory: "512Mi"
    cpu: "0.1"
  limits:
    memory: "2Gi"
    cpu: "1"

liberty:
  readinessProbe:
    initialDelaySeconds: 60
    httpGet:
      path: /console/api/docs/
      port: 9080
  livenessProbe:
    initialDelaySeconds: 300
    httpGet:
      path: /console/api/docs/
      port: 9080

enabled: True

config:
  FLYWAY_USER: db2inst1
  FLYWAY_BASELINE_ON_MIGRATE: 'true'
  FLYWAY_BASELINE_VERSION: '2019.02.28.13.59.00'
  db2_service: "db2-datastore-0"
  com_fci_home: "opt/ibm/fci"
  com_fci_db2_port: "50000"
  com_fci_db2_ssl_port: "56000"
  com_fci_db2_userid: "fciauthid"
  com_fci_db2_dbname: "fcidb"
  com_fci_db2_config: "server-ssl-db2.xml"
  JWT_ISSUER: 'fci.ibm.com'

  SECURITY_PROTOCOL_CONFIG: "SSL"
  FCI_KAFKA_MSG_KS_PATH: '/opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_kafka_msg.p12'
  KAFKA_SUBSCRIPTIONS: '[{"topic": "FCI_SEC_AuditRecords"}]'
  SSL_TRUSTSTORE_LOCATION_CONFIG: '/opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.truststore.jks'
  SSL_KEYSTORE_LOCATION_CONFIG: '/opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.keystore.jks'
  FCI_KAFKA_MSG_KS_ALIASNAME: "fci_kafka_msg_key_label"

  # Num seconds before initial poll() on kafka msgs
  AUDIT_SINK_DELAY_INITIAL_POLL: "20"
  # Num seconds between polls
  AUDIT_SINK_DELAY_BETWEEN_POLL: "5"
  # Num seconds to wait in poll()
  AUDIT_SINK_DELAY_POLL: "3"

  ACKS_CONFIG: "all"
  RETRIES_CONFIG: "5"
  GROUP_ID_CONFIG: "group_audit"

db2:
  image:
    repository: ibmcom/fci-security-audit-data-store
    tag: 6.5.2
    pullPolicy: IfNotPresent

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  resources:
    requests:
      memory: "256Mi"
      cpu: "0.02"
    limits:
      memory: "512Mi"
      cpu: "0.5"

nodeSelector: {}

tolerations: []

affinity: {}

arch: amd64
