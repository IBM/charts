apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cadence.fullname" . }}
  labels:
{{- include "common.label.metadata" (list . (include "cadence.name" .)  (include "cadence.chart" .) .Release.Name .Release.Service ) | indent 4 }}
data:
  DB: db2
  DBNAME: {{ .Values.server.config.persistence.default.sql.database }}
  VISIBILITY_DBNAME: {{ .Values.server.config.persistence.visibility.sql.database }}
  SQL_TLS: {{ .Values.server.config.persistence.tls.enabled | quote }}
  SQL_TLS_CERT_FILE: {{ .Values.server.config.persistence.tls.certFile }}

  config_template.yaml: |-
    log:
      stdout: true
      level: {{ .Values.server.config.logLevel | quote }}

    persistence:
      defaultStore: default
      visibilityStore: visibility
      numHistoryShards: {{ .Values.server.config.numHistoryShards }}
      datastores:
        default:
          sql:
            pluginName: {{ include "cadence.persistence.sql.pluginName" (list . "default") }}
            databaseName: {{ .Values.server.config.persistence.default.sql.database }}
            connectAddr: "{{ `{{ .Env.DB2_SEEDS }}` }}:{{ `{{ .Env.DB_PORT }}` }}"
            connectProtocol: "TCPIP"
            user: {{ `{{ .Env.DB2_USER }}` }}
            password: {{ `{{ .Env.DB2_PWD }}` }}
            encodingType: "thriftrw"
            decodingTypes: [ "thriftrw" ]
            maxConns: {{ .Values.server.config.persistence.default.sql.maxConns }}
            maxIdleConns: {{ .Values.server.config.persistence.default.sql.maxIdleConns }}
            maxConnLifetime: {{ .Values.server.config.persistence.default.sql.maxConnLifetime | quote }}
            tls:
              enabled: {{ .Values.server.config.persistence.default.sql.tls.enabled }}
              certFile: {{ .Values.server.config.persistence.default.sql.tls.certFile | quote }}
              keyFile: {{ `{{ .Env.SQL_TLS_KEY_FILE }}` }}
        visibility:
          sql:
            pluginName: {{ include "cadence.persistence.sql.pluginName" (list . "visibility") }}
            databaseName: {{ .Values.server.config.persistence.visibility.sql.database }}
            connectAddr: "{{ `{{ .Env.DB2_SEEDS }}` }}:{{ `{{ .Env.DB_PORT }}` }}"
            connectProtocol: "TCPIP"
            user: {{ `{{ .Env.DB2_USER }}` }}
            password: {{ `{{ .Env.DB2_PWD }}` }}
            encodingType: "thriftrw"
            decodingTypes: [ "thriftrw" ]
            maxConns: {{ .Values.server.config.persistence.visibility.sql.maxConns }}
            maxIdleConns: {{ .Values.server.config.persistence.visibility.sql.maxIdleConns }}
            maxConnLifetime: {{ .Values.server.config.persistence.visibility.sql.maxConnLifetime | quote }}
            tls:
              enabled: {{ .Values.server.config.persistence.visibility.sql.tls.enabled }}
              certFile: {{ .Values.server.config.persistence.visibility.sql.tls.certFile | quote }}
              keyFile: {{ `{{ .Env.SQL_TLS_KEY_FILE }}` }}

    ringpop:
      name: cadence
      bootstrapMode: dns
      bootstrapHosts:
        - {{ include "cadence.componentname" (list . "frontend-headless") }}:{{ .Values.server.frontend.service.port }}
        - {{ include "cadence.componentname" (list . "history-headless") }}:{{ .Values.server.history.service.port }}
        - {{ include "cadence.componentname" (list . "matching-headless") }}:{{ .Values.server.matching.service.port }}
        - {{ include "cadence.componentname" (list . "worker-headless") }}:{{ .Values.server.worker.service.port }}
      maxJoinDuration: 30s

    services:
      frontend:
        rpc:
          port: {{ include "cadence.frontend.internalPort" . }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: frontend
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.frontend.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- if or .Values.server.metrics.statsd .Values.server.frontend.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.frontend.metrics.statsd.hostPort | quote }}
            prefix: "cadence.frontend"
        {{- end}}

      history:
        rpc:
          port: {{ include "cadence.history.internalPort" . }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: history
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.history.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- if or .Values.server.metrics.statsd .Values.server.history.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.history.metrics.statsd.hostPort | quote }}
            prefix: "cadence.history"
        {{- end}}

      matching:
        rpc:
          port: {{ include "cadence.matching.internalPort" . }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: matching
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.matching.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- if or .Values.server.metrics.statsd .Values.server.matching.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.matching.metrics.statsd.hostPort | quote }}
            prefix: "cadence.matching"
        {{- end}}

      worker:
        rpc:
          port: {{ include "cadence.worker.internalPort" . }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: worker
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.worker.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- if or .Values.server.metrics.statsd .Values.server.worker.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.worker.metrics.statsd.hostPort | quote }}
            prefix: "cadence.worker"
        {{- end}}

    clusterMetadata:
      enableGlobalDomain: false
      failoverVersionIncrement: 10
      masterClusterName: "active"
      currentClusterName: "active"
      clusterInformation:
        active:
          enabled: true
          initialFailoverVersion: 0
          rpcName: "cadence-frontend"
          rpcAddress: "127.0.0.1:7933"

    dcRedirectionPolicy:
      policy: "noop"
      toDC: ""

    archival:
      status: "disabled"

    publicClient:
      hostPort: "{{ include "cadence.componentname" (list . "frontend") }}:{{ .Values.server.frontend.service.port }}"

    dynamicConfigClient:
      filepath: "/etc/cadence/config/dynamicconfig/config.yaml"
      pollInterval: {{ .Values.dynamicConfig.pollInterval | default "10s" | quote }}

  dynamic_config.yaml: |-
    {{- toYaml .Values.dynamicConfig.values | nindent 12 }}
