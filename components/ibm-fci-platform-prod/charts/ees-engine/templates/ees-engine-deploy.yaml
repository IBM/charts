apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ees-engine.fullname" . }}
  labels:
{{- include "common.label.metadata" (list . (include "ees-engine.name" .)  (include "ees-engine.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (include "ees-engine.name" .) .Release.Name ) | indent 6 }}
  replicas: {{required "A valid .Values.replicas entry required!" .Values.replicas}}
  template:
    metadata:
      labels:
        name: {{ template "ees-engine.fullname" . }}
{{- include "common.label.metadata" (list . (include "ees-engine.name" .)  (include "ees-engine.chart" .) .Release.Name .Release.Service ) | indent 8 }}
{{- include "common.using-secrets" (list "mongo" "platform") | indent 8 }}
      annotations:
{{ include "common.meteringAnnotations" . | indent 8}}
    spec:
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8}}
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      serviceAccountName: fci-common-scripts
      volumes:
        - name: file-secrets
          secret:
            secretName: {{ .Release.Name }}-platform-secret-files
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 6 }}
      {{- end }}
      containers:
        - name: engine
          image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/alive
              port: 8443
            initialDelaySeconds: {{ default 30 .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 30 .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/alive
              port: 8443
            initialDelaySeconds: {{ default 30 .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ default 30 .Values.readinessProbe.periodSeconds }}
          envFrom:
            - configMapRef:
                name: {{ template "ees-engine.fullname" . }}
          env:
{{- include "common.import-secret" (list . "JWT_KEY" "platform" "JWT_KEY") | indent 10 }}
{{- include "common.import-secret" (list . "MONGO_PASSWORD" "mongo" "mongodb-eraas-ees-password") | indent 10 }}
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: file-secrets
              mountPath: opt/app-root/src/ssl/{{ .Values.APP_ENV }}/fci_universal_ks.pvtk.pem
              subPath: fci_universal_ks.pvtk.pem
              readOnly: true
            - name: file-secrets
              mountPath: /opt/app-root/src/ssl/{{ .Values.APP_ENV }}/fci_universal_ks.crt.pem
              subPath: fci_universal_ks.crt.pem
              readOnly: true
          {{- if .Values.resources }}
          resources:
            {{- if .Values.resources.requests }}
            requests:
              {{- if .Values.resources.requests.memory }}
              memory: {{ .Values.resources.requests.memory }}
              {{- end}}
              {{- if .Values.resources.requests.cpu }}
              cpu: {{ .Values.resources.requests.cpu }}
              {{- end}}
            {{- end}}
            {{- if .Values.resources.limits }}
            limits:
              {{- if .Values.resources.limits.memory }}
              memory: {{ .Values.resources.limits.memory }}
              {{- end}}
              {{- if .Values.resources.limits.cpu }}
              cpu: {{ .Values.resources.limits.cpu }}
              {{- end}}
            {{- end}}
          {{- end }}
      restartPolicy: Always
