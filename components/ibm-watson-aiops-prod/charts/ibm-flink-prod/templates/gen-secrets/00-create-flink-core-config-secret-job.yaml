{{- include "sch.config.init" (list . "sch.chart.flink.config.values") -}}
{{- $compName := "create-flink-config-secret" -}}
{{- $jobmanager :=  .sch.chart.components.jobManager -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compName ) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName ) | trim | indent 4 }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": {{ add 6 .Values.preInstallHookWeightAnchor | quote }}
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      annotations:
{{ include "sch.metadata.annotations.metering" (list . .sch.chart.metering .sch.chart.metering.productMetric .sch.chart.metering.productCloudpakRatio nil) | trim | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | trim | indent 8 }}
      name: {{ include "sch.names.fullCompName" (list . $compName ) | quote }}
    spec:
      serviceAccountName: {{ template "flink.serviceAccountName" . }}
{{ include "sch.security.securityContext" (list . .sch.chart.specSecurityContext) | trim | indent 6 }}
      containers:
      - name: cred-gen
        image: {{ include "flink.imageName" . | quote }}
        resources:
{{ toYaml .Values.secretGen.resources | trim | indent 10 }}
{{ include "sch.security.securityContext" (list . .sch.chart.podSecurityContext) | trim | indent 8 }}
        command:
        - "/bin/bash"
        - -c
        - |
          set -eu
          cd /tmp

          ## GET REQUIRED SECRETS FOR CONFIG #########################################
          # Get Kafka CA to store in keystore
          kubectl get secret {{ include .Values.global.tls.truststoreSecret.nameTpl . }} -o jsonpath='{.data.flink-tls-keystore\.password}' | base64 --decode > ./flink-tls-keystore.password
          kubectl get secret {{ include .Values.global.tls.truststoreSecret.nameTpl . }} -o jsonpath='{.data.flink-tls-ca-truststore\.password}' | base64 --decode > ./flink-tls-ca-truststore.password
          KEY_PASS=`cat ./flink-tls-keystore.password`
          CA_PASS=`cat ./flink-tls-ca-truststore.password`
          ## GET REQUIRED SECRETS FOR CONFIG #########################################

          ## GENERATE FLINK CONFIG ###################################################
          cat << EOF > ./flink-conf.yaml
          blob.server.port: 6124
          jobmanager.rpc.address: {{ include "sch.names.fullCompName" (list . $jobmanager) }}
          rest.bind-port: {{ .Values.jobmanager.service.port }}
          rest.port: {{ .Values.jobmanager.service.port }}
          jobmanager.rpc.port: 6123
          taskmanager.rpc.port: 6122
          jobmanager.heap.mb: {{ .Values.jobmanager.heap.mb }}
          taskmanager.heap.mb: {{ .Values.taskmanager.heap.mb }}
          taskmanager.numberOfTaskSlots: {{ .Values.taskmanager.numberOfTaskSlots }}
          security.ssl.internal.enabled: true
          security.ssl.rest.enabled: true
          security.ssl.verify-hostname: true
          security.ssl.rest.keystore: /etc/ssl/certs/flink-tls-keystore.key
          security.ssl.rest.keystore-password: $KEY_PASS
          security.ssl.rest.key-password: $KEY_PASS
          security.ssl.rest.truststore: /etc/ssl/certs/flink-tls-ca-truststore.jks
          security.ssl.rest.truststore-password: $CA_PASS
          security.ssl.internal.keystore: /etc/ssl/certs/flink-tls-keystore.key
          security.ssl.internal.keystore-password: $KEY_PASS
          security.ssl.internal.key-password: $KEY_PASS
          security.ssl.internal.truststore: /etc/ssl/certs/flink-tls-ca-truststore.jks
          security.ssl.internal.truststore-password: $CA_PASS
          security.ssl.algorithms: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
          {{- if .Values.config }}
{{ .Values.config | trim | indent 10 }}
          {{- end }}
          EOF

          cat << EOF > ./log4j-console.properties
          log4j.rootLogger=INFO, console, file
          # Uncomment this if you want to _only_ change Flink's logging
          #log4j.logger.org.apache.flink=INFO
          # The following lines keep the log level of common libraries/connectors on
          # log level INFO. The root logger does not override this. You have to manually
          # change the log levels here.
          log4j.logger.akka=INFO
          log4j.logger.org.apache.kafka=INFO
          log4j.logger.org.apache.hadoop=INFO
          log4j.logger.org.apache.zookeeper=INFO
          # Suppress the irrelevant (wrong) warnings from the Netty channel handler
          log4j.logger.org.jboss.netty.channel.DefaultChannelPipeline=ERROR, console
          # Log all infos to the console
          log4j.appender.console=org.apache.log4j.ConsoleAppender
          log4j.appender.console.layout=org.apache.log4j.PatternLayout
          log4j.appender.console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
          EOF
          ## GENERATE FLINK CONFIG ###################################################

          ## CREATE SECRET ###########################################################
          kubectl delete secret {{ include .Values.global.flink.flinkConfig.nameTpl . }} -n {{ .Release.Namespace }} --ignore-not-found
          cat <<EOF | kubectl create -n {{ .Release.Namespace }} -f -
            apiVersion: v1
            kind: Secret
            type: Opaque
            metadata:
              name: {{ include .Values.global.flink.flinkConfig.nameTpl . | quote }}
              labels:
{{ include "sch.metadata.labels.standard" (list . "flink-config" ) | trim | indent 16 }}
            data:
              flink-conf.yaml: $(cat ./flink-conf.yaml | base64 | tr -d '\n')
              log4j-console.properties: $(cat ./log4j-console.properties | base64 | tr -d '\n')
          ## CREATE SECRET ###########################################################

      restartPolicy: Never
      affinity:
{{ include "zeno.nodeAffinity" . | trim | indent 8 }}
