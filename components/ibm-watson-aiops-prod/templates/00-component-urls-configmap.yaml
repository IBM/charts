{{- include "sch.config.init" (list . "sch.chart.zeno.config.values") -}}
{{- $name := .sch.chart.config.componentUrls -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "sch.names.fullCompName" (list . $name) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $name) | indent 4 }}
data:
  ALERT_GROUPING_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.eventGrouping) }}
  ALERT_GROUPING_API_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.eventGrouping) }}

  ALERT_LOCALIZATION_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.alertLocalization) }}

  # Combined as CHATOPS_SLACK_INTEGRATOR_SERVICE_URL
  CHATOPS_SLACK_INTEGRATOR_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.chatopsSlackIntegrator) }}
  CHATOPS_SLACK_INTEGRATOR_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.chatopsSlackIntegrator) }} # core-tests
  INTEGRATOR_API_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.chatopsSlackIntegrator) }} # (bot|chatops)-orchestrator

  # Combined as CHATOPS_ORCHESTRATOR_SERVICE_URL
  CHATOPS_ORCHESTRATOR_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.chatopsOrchestrator) }}
  BOT_ORCHESTRATOR_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.chatopsOrchestrator) }} # core-tests
  ZENO_ORCHESTRATOR_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.chatopsOrchestrator) }} #chatops-integrator

  # Combined as PERSISTENCE_SERVICE_URL
  PERSISTENCE_ENDPOINT: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.persistence) }}
  PERSISTENCE_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.persistence) }}
  PERSISTENCE_SERVICE_API_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.persistence) }} # (bot|chatops)-orchestrator, similar-incidents, topology, controller
  DATA_PERSISTENCE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.persistence) }}
  DATA_LAKE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.persistence) }}  # event-grouping

  QUALITY_EVALUATION_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.qualityEvaluation) }}

  # Comabined as SIMILAR_INCIDENTS_SERVICE_URL
  SIMILAR_INCIDENTS_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.similarIncidents) }}
  INCIDENT_SIMILARITY_API_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.similarIncidents) }} # chatops-orchestrator

  TOPOLOGY_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.topology) }}

  # Combined as CONTROLLER_SERVICE_URL
  CONTROLLER_SERVICE_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.controller) }}
  CONTROLLER_ENDPOINT: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.controller) }}
  CONNECTION_MANAGER_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.controller) }} # Topology
  CONNECTION_MANAGER_API_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.controller) }} #Addon
  ZENO_CONTROLLER_CONTROLLERENDPOINT_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.components.controller) }} # core-tests

  MOCK_SERVER_URL: {{ include "zeno.componentUrl" (dict "root" . "service" .sch.chart.tests.mockServer) }}

  CPD_CORE_API_URL: {{ include "zeno.zenCoreApiEndpointTemplate" . }} # controller
  ZEN_CORE_API_SVC: {{ include "zeno.zenCoreApiEndpointTemplate" . }} # addon
  ZEN_CORE_SVC: {{ include "zeno.zenCoreEndpointTemplate" . }}
