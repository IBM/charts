{{- $compName := "spss-preinstaller-cachedb" -}}
{{- $password := randAlphaNum 32 -}}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{$compName}}
  labels:
    app.kubernetes.io/name: {{$compName}}
    helm.sh/chart: {{$compName}}
    app.kubernetes.io/instance: {{$compName}}
    app.kubernetes.io/managed-by: {{$compName}}
    run: {{$compName}}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-succeeded
    {{- if .Values.global.annotations }}
{{ toYaml .Values.global.annotations | trim | indent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{$compName}}
        helm.sh/chart: {{$compName}}
        app.kubernetes.io/component: {{$compName}}
        app.kubernetes.io/instance: {{$compName}}
        app.kubernetes.io/managed-by: {{$compName}}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.global.runAsUser }}
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      restartPolicy: Never
      containers:
        - name: {{$compName}}
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.preInstaller.name }}:{{ .Values.global.preInstaller.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            limits:
              cpu: "0.5"
              memory: "256Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.runAsUser }}
            capabilities:
              drop:
                - ALL
          command:
            - "/bin/bash"
            - -c
            - |
              cat <<EOF | kubectl apply -f -
              apiVersion: v1
              kind: Secret
              metadata:
                name: {{ template "cache-db.password-secret" . }}
                annotations:
                  build: {{ .Values.global.buildVersion | quote }}
                labels:
                  app.kubernetes.io/name: {{ template "cache-db.name" . }}
                  helm.sh/chart: {{ template "cache-db.chart" . }}
                  app.kubernetes.io/instance: {{ .Release.Name }}
                  app.kubernetes.io/managed-by: {{ .Release.Service }}
              type: Opaque
              data:
                POSTGRES_PASSWORD: {{ b64enc ( $password ) }} # pragma: whitelist secret
                POSTGRES_URI: {{ printf "postgres://%s:%s@%s:%s/%s" .Values.postgres.user $password .Values.global.cacheDb.serviceName .Values.service.port .Values.postgres.database | b64enc }} # pragma: whitelist secret
                POSTGRES_JDBC: {{ printf "jdbc:postgresql://%s:%s/%s?user=%s&password=%s" .Values.global.cacheDb.serviceName .Values.service.port .Values.postgres.database .Values.postgres.user $password | b64enc }} # pragma: whitelist secret
              EOF