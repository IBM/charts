# Default values for flow-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

resources:
  replicaCount: 1
  memory: 4Gi
  cpuLimits: 1000m
  cpuRequests: 1000m

# These values will mostly be over-ridden from above.
image:
  repository: flow-ui
  namespace: canvas
  name: flow-ui
  tag: "6000"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  https_port: 9443


container:
  https_port: 9443


# Control of the node runtime.
node:
  env: production
  modules:
    cache: false

watsonStudio:
  useSharedServiceId: true


# Make helm lint happy: See https://github.com/helm/helm/issues/3822
nameOverride: ""
fullnameOverride: ""

# This needs to be over-ridden from above, because the database suffix is different for each environment.
cloudant:
  database:
    nameSuffix: ""
    host: ""

# This needs to be over-ridden from above, because the new relic application name is different for each environment.
newRelic:
  applicationName: ""

nginx:
  internalSSLCertificate:
    # The name of the certificate file we are going to mount, so the container code can trust it.
    fileName: "nginx_internal_certificate.pem"
    # The folder into which the certificate will be mounted.
    mountFolder: "/etc/certificates"

# Default values for wml-canvas.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # We expect this to be over-ridden.
  buildVersion: "0.0"

  bluemix:
    enabled: false
    domain: "stage1.ng.bluemix.net"
    extDomain: "stage1.mybluemix.net"

  activityTracker:
    enabled: false

  rabbitmq:
    enabled: false

  crn:
    name: "staging"
    location: "us-south"

  cacheDB:
    serviceName: modeler-flow-cache-db

  watsonStudio:
    url: "https://internal-nginx-svc:12443/v2/projects"
    operatingEnvironment: "local"
    deploymentTarget: "icp4data"

  auth:
    iam:
      enabled: false
      jwks:
        url: "https://iam.stage1.bluemix.net/identity/keys"
      auth:
        url: "https://iam.stage1.bluemix.net"
      token:
        url: "https://iam.stage1.ng.bluemix.net/oidc/token"

    icp4d:
      enabled: true
      authorizationUrl: "/auth/login/zen-login.html"
      publicKeyUrl: "https://internal-nginx-svc:12443/auth/jwtpublic"
      callbackUrl: "/auth/iamid/callback"
      logoutUrl: "/home"

  commonApi:
    url: "https://internal-nginx-svc:12443"

  commonUI:
    url: "https://internal-nginx-svc:12443"

  cloudant:
    enabled: false

  newRelic:
    enabled: false

  nginx:
    enabled: true
    importSSLCertificate:
      enabled: true
      certificateSecret:
        name: internal-nginx-svc-tls
        key: certificate.pem

  flowUi:
    nginxPath: "canvas"

  redis:
    enabled: true
    # Indicates that the encryption_token is being passed-in from the environment or not.
    # If not, then it must be being picked-up from a secret which already exists in the environment.
    tokenFromValue: false
    # If tokenFromValue is set, we expect this encryption_token to be over-ridden.
    encryption_token: ""

    # The name of the configmap to get the redis URL from
    configMap: "redis-ha-configmap"

  docker:
    useNameSpace: false
    useImagePullSecret: false

  session:
    keysFromValue: false
    # If the value is true, and session keys are being passed in using values, then we expect these values to be
    # over-ridden:
    secret: ""
    key: ""

flowUiSettings:
  cache_access_retry_interval: "5000"
  disable_nonce: "1"
  max_cache_access_retry: "11"
  max_cache_retry: "5"
  nnm_disabled: true
  session_cache_enabled: false
  session_not_accessible_retry: "36"
  use_flow_session: true
