apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "flow-api.fullname" . }}
  annotations:
    build: {{ .Values.global.buildVersion | quote }}
    {{- if .Values.global.annotations }}
{{ toYaml .Values.global.annotations | trim | indent 4 }}
    {{- end }}
  labels:
    app.kubernetes.io/name: {{ template "flow-api.name" . }}
    helm.sh/chart: {{ template "flow-api.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "flow-api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        build: {{ .Values.global.buildVersion | quote }}
        {{- if .Values.global.annotations }}
{{ toYaml .Values.global.annotations | trim | indent 8 }}
        {{- end }}
      labels:
        app.kubernetes.io/name: {{ template "flow-api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - "amd64"
                      - "ppc64le"
      strategy:
        rollingUpdate:
          maxSurge: 2
          maxUnavailable: 0
        type: RollingUpdate

      {{- if .Values.global.nginx.importSSLCertificate.enabled }}
      volumes:
      - name: certificates
        secret:
          secretName: {{ .Values.global.nginx.importSSLCertificate.certificateSecret.name }}
          items:
          # The key name is dictated by the installer team - who created the secret.
          - key: {{ .Values.global.nginx.importSSLCertificate.certificateSecret.key }}
            # The path where we mount the secret is up to us.
            path: {{ .Values.nginx.internalSSLCertificate.fileName }}
      {{- end }}
      serviceAccount: {{ .Values.global.viewer.sa }}
      serviceAccountName: {{ .Values.global.viewer.sa }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ template "full-image-url" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          runAsUser: {{ $.Values.global.runAsUser }}
          capabilities:
            drop:
            - ALL
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
        ports:
          - name: http
            containerPort: {{ .Values.container.port }}
            protocol: TCP
        resources:
          limits:
            cpu: {{ .Values.resources.cpuLimits }}
            memory: {{ .Values.resources.memory }}
          requests:
            cpu: {{ .Values.resources.cpuRequests }}
            memory: {{ .Values.resources.memory }}
        livenessProbe:
          httpGet:
            path: /monitor
            port: {{ .Values.container.port }}
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /monitor
            port: {{ .Values.container.port }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30

        {{ if .Values.global.nginx.importSSLCertificate.enabled }}
        volumeMounts:
        - name: certificates
          mountPath: {{ .Values.nginx.internalSSLCertificate.mountFolder }}
          readOnly: true
        {{- end }}


        env:

        {{- if .Values.global.bluemix.enabled }}
        # Bluemix
        - name: DOMAIN
          value: {{ .Values.global.bluemix.domain }}
        {{- end }}

        # Control the node runtime
        - name: NODE_ENV
          value: {{ .Values.node.env }}
        - name: NODE_MODULES_CACHE
          value: "{{ .Values.node.modules.cache }}"

        # Which environment are we deploying into.
        - name: DSX_OPERATING_ENVIRONMENT
          value: {{ .Values.global.watsonStudio.operatingEnvironment }}

        # The deployment target, could be icp, ip4d, cloud.
        - name: DEPLOYMENT_TARGET
          value: {{ .Values.global.watsonStudio.deploymentTarget}}

        # Other watson studio components
        - name: PROJECTS_API_URL
          value: {{ .Values.global.watsonStudio.url }}

        # Authentication.
        {{- if .Values.global.auth.iam.enabled }}
        - name: IAM_JWKS_URL
          value: {{ .Values.global.auth.iam.jwks.url }}
        - name: IAM_AUTH_URL
          value: {{ .Values.global.auth.iam.auth.url }}
        - name: IAM_TOKEN_URL
          value: {{ .Values.global.auth.iam.token.url }}
        - name: IAM_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: iam-api-key
        {{- end }}

        {{- if .Values.global.activityTracker.enabled }}
        # Activity tracker-related things:
        - name: APP_ENV_ACTIVITY_TRACKER_REGION
          value: {{ .Values.global.activityTracker.region }}
        - name: APP_ENV_ACTIVITY_TRACKER_PROJECTID
          value: {{ .Values.global.activityTracker.project.id }}
        - name: APP_ENV_ACTIVITY_TRACKER_URL
          value: {{ .Values.global.activityTracker.url }}
        - name: APP_ENV_CRN_CNAME
          value: {{ .Values.global.crn.name }}
        - name: APP_ENV_CRN_LOCATION
          value: {{ .Values.global.crn.location }}
        - name: ACTIVITY_TRACKER_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: activity-tracker-token
        {{- end }}

        {{- if .Values.global.rabbitmq.enabled }}
        # RabbitMQ variables.
        - name: rabbitmq__enabled
          value: {{ .Values.global.rabbitmq.enabled }}
        - name: rabbitmq__certificate
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: rabbitmq-certificate
        - name: rabbitmq__primaryUrl
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: RABBITMQ_PRIMARY_URL
        - name: rabbitmq__fallbackUrl
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: RABBITMQ_FALLBACK_URL
        {{- end }}

        # Cloudant.
        {{- if .Values.global.cloudant.enabled }}
        - name: cloudant__enabled
          value: "true"
        - name: cloudant__username
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: cloudant-user
        - name: cloudant__password
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: cloudant-password
        - name: cloudant__databaseNameSuffix
          value: {{ .Values.cloudant.database.nameSuffix }}
        - name: cloudant__dbHost
          value: {{ .Values.cloudant.database.host }}
        {{ else }}
        - name: cloudant__enabled
          value: "false"
        {{- end }}


        {{- if .Values.global.newRelic.enabled }}
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "flow-api.secrets" . }}
              key: new-relic-license-key
        - name: NEW_RELIC_APP_NAME
          value: {{ .Values.newRelic.applicationName }}
        {{- end }}


        {{- if .Values.global.auth.icp4d.enabled }}
        # icp4d auth.
        - name: auth__icp4d__publicKeyUrl
          value: {{ .Values.global.auth.icp4d.publicKeyUrl }}
        - name: auth__icp4d__serviceIdAuth
          valueFrom:
            secretKeyRef:
                name: wdp-service-id
                key: service-id-credentials
        {{- end }}

        {{- if .Values.global.watsonStudio.trustSelfSignedCertificates }}
        # TLS - trust all self signed certs
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
        {{- end }}

        {{ if .Values.global.nginx.importSSLCertificate.enabled }}
        - name: NODE_EXTRA_CA_CERTS
          value: {{ .Values.nginx.internalSSLCertificate.mountFolder }}/{{ .Values.nginx.internalSSLCertificate.fileName }}
        {{- end }}

      {{ if .Values.global.docker.useImagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecretName }}
      {{ end }}
