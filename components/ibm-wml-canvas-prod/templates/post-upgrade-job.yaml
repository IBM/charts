{{- $compName := "spss-preupgrade-deletejobs" -}}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{$compName}}
  labels:
    app.kubernetes.io/name: {{$compName}}
    helm.sh/chart: {{$compName}}
    app.kubernetes.io/instance: {{$compName}}
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    release: {{ .Release.Name }}
    {{- include "spss-modeler.addOnPodLabels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded 
    {{- include "spss-modeler.cloudpak_annotations" . | indent 4 }}
spec:
  template:
    metadata:
      annotations: 
        {{- include "spss-modeler.cloudpak_annotations" . | indent 8 }}
      labels:
        app.kubernetes.io/name: {{$compName}}
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        helm.sh/chart: {{$compName}}
        component: {{$compName}}
        app.kubernetes.io/instance: {{$compName}}
        release: {{ .Release.Name }}
        {{- include "spss-modeler.addOnPodLabels" . | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.global.runAsUser }}
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - "amd64"
                      - "ppc64le"
      restartPolicy: Never
      containers:
        - name: {{$compName}}
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.preInstaller.image.repository }}:{{ .Values.preInstaller.image.tag }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}          
          resources:
            limits:
              cpu: "0.5"
              memory: "256Mi"
            requests:
              cpu: "0.5"
              memory: "256Mi"
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.runAsUser }}
            capabilities:
              drop:
                - ALL
          command: [ "/bin/bash" , "-c" ,
                   "/usr/local/bin/upgrade-cleanup.sh" ]