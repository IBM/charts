{{- $compName := "spss-prepull-imagejobs" -}}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{$compName}}
  labels:
    app.kubernetes.io/name: {{$compName}}
    helm.sh/chart: {{$compName}}
    app.kubernetes.io/instance: {{$compName}}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded 
    {{- if .Values.global.annotations }}
{{ toYaml .Values.global.annotations | trim | indent 4 }}
    {{- end }}
spec:
  parallelism: {{ .Values.runtimes.workerNodes }}
  completions: {{ .Values.runtimes.workerNodes }}  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{$compName}}
        helm.sh/chart: {{$compName}}
        component: {{$compName}}
        app.kubernetes.io/instance: {{$compName}}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - "amd64"
                      - "ppc64le"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: run
                  operator: In
                  values:
                  - {{$compName}}
            topologyKey: kubernetes.io/hostname  
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.global.runAsUser }}
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}                    
      restartPolicy: OnFailure
      containers:
        - name: {{$compName}}
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.flowSession.image.repository }}:{{ .Values.flowSession.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }} 
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi                   
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.runAsUser }}
            capabilities:
              drop:
                - ALL
          command: [ "/bin/bash" , "-c" ,
                   "echo prepulled {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.flowSession.image.repository }}:{{ .Values.flowSession.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}" ]