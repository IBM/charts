apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.omag.app_name }}
  labels:
    app: {{ .Values.omag.app_name }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/name: {{ .Values.omag.app_name }}
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.omag.app_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.omag.app_name }}
        chart: {{ .Values.omag.chartName }}
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app.kubernetes.io/name: {{ .Values.omag.app_name }}
        helm.sh/chart: {{ .Chart.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.global.podLabels }}
{{ tpl (toYaml .Values.global.podLabels) . | trim | indent 8 }}
        {{- end }}
      annotations:
{{ tpl (toYaml .Values.global.podAnnotations) . | trim | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      initContainers:
      {{- include "wait-services" . | indent 6 }}
      {{- include "wait-kafka" . | indent 6 }}
      {{- include "wait-redis" . | indent 6 }}
      securityContext:
        runAsNonRoot: true
        {{- if .Values.release.image.omag.runAsUser }}
        runAsUser: {{ .Values.release.image.omag.runAsUser }}
        {{- end }}
        {{- if .Values.release.image.omag.fsGroup }}
        fsGroup: {{ .Values.release.image.omag.fsGroup }}
        {{- end }}
      containers:
      - name: {{ .Values.omag.app_name }}
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.omag.repository }}:{{ .Values.release.image.omag.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        resources:
          requests:
            memory: "{{ .Values.release.image.omag.requests.memory }}"
            cpu: "{{ .Values.release.image.omag.requests.cpu }}"
          limits:
            memory: "{{ .Values.release.image.omag.limits.memory }}"
            cpu: "{{ .Values.release.image.omag.limits.cpu }}"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        env:
        - name: PORT
          value: "8080"
        - name: XMETA_DB_DRIVER
          value: com.ibm.db2.jcc.DB2Driver
        - name: XMETA_DB_URL
          value: jdbc:db2://is-xmetadocker:50000/xmeta
        - name: XMETA_DB_USER
          value: xmeta
        - name: XMETA_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: iis-usr-secrets
              key: xmeta_password
        - name: REDIS_CONNECTION_URL
          valueFrom:
            secretKeyRef:
              name: redis-ha
              key: redis-url-ssl
        - name: MIN_CONN_POOL_SIZE
          value: "10"
        ports:
        - containerPort: 8080
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ibm/iis/api/igc-omrs/admin-services/users/admin/server-origin
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 50
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 30
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ibm/iis/api/igc-omrs/admin-services/users/admin/server-origin
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 40
          periodSeconds: 60
          successThreshold: 1
        volumeMounts:
        - mountPath: /config/secrets/redis
          name: omag-redis-ssl
        - mountPath: /config/secrets
          name: secrets-pv-volume
        - mountPath: /omrsdata
          name: omag-data
        - mountPath: /config
          name: configs
      {{- include "image-secret" . | indent 6 }}
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      volumes:
      - name: omag-data
        persistentVolumeClaim:
         {{- if .Values.omag.volumeClaim.existingClaimName }}
           claimName: {{ .Values.omag.volumeClaim.existingClaimName }}
         {{- else }}
           claimName: {{ .Release.Name }}-{{ .Values.omag.volumeClaim.name }}
         {{- end }}
      - name: secrets-pv-volume
        persistentVolumeClaim:
           claimName: iis-secrets-pv
      - name: configs
        emptyDir: {}
      - name: omag-redis-ssl
        secret:
          secretName: {{ .Values.omag.redisCertVolume.name }}
