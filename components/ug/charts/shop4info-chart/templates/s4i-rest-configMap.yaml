apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.shop4infoRest.appName }}-config
  labels:
    app: {{ .Values.shop4infoRest.appName }}-config
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/name: {{ .Values.shop4infoRest.appName }}-config
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  application.properties: |
    # backend hosts
    graph.properties.storage.hostname={{ .Values.cassandra.appName }}
    graph.properties.index.search.solr.zookeeper-url={{ .Values.zookeeper.appName }}:2181/solr

    # default ports
    server.port=8080
    management.server.port=8090
    #so we don't need url rewrite and additional support for X-original-uri or other hacks
    server.servlet.context-path=/ibm/iis/api/shop4info/v1
    # type-registry adress and context, warn / at the end is mandatory!
    typeregistry.baseuri=http://{{ .Values.s4iRegistry.appName }}-internal:8080/ibm/iis/api/type-registry/v1/

    # redis configuration
    spring.redis.url=${REDIS_URL}
    redis.enabled = true
    management.health.redis.enabled=false
    spring.cache.redis.time-to-live=300000
    spring.redis.database=0

    # security configuration
    security.enabled=true
    jwt.leeway=10
    jwt.algorithm=RSA256
    jwt.token.type={{ .Values.tokenType.value }}
    jwt.publicKeyUrl=${BASE_URL}{{ .Values.keyProvider.value }}
    jwt.issuer={{ .Values.issuer.value }}
    jwt.accept.all.ssl={{ .Values.acceptAllSSL.value }}

  jvm.options: |
    -XX:+PrintCommandLineFlags
    #warning: there HAVE to be a new line at the end
