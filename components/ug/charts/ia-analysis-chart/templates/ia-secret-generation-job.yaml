apiVersion: batch/v1
kind: Job
metadata:
  name: "ia-secret-generation-job"
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.global.podLabels }}
{{ tpl (toYaml .Values.global.podLabels) . | trim | indent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-100"
    "helm.sh/hook-delete-policy": before-hook-creation
{{ tpl (toYaml .Values.global.podAnnotations) . | trim | indent 4 }}
spec:
  backoffLimit: 3
  activeDeadlineSeconds: 480
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- if .Values.global.podLabels }}
{{ tpl (toYaml .Values.global.podLabels) . | trim | indent 8 }}
        {{- end }}
      annotations:
{{ tpl (toYaml .Values.global.podAnnotations) . | trim | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      restartPolicy: Never
      {{- if .Values.secretGeneration.serviceAccountName }}
      serviceAccountName: {{ .Values.secretGeneration.serviceAccountName }}
      {{- end }}
      containers:
      - name: "ia-secret-generation-job"
        imagePullPolicy: IfNotPresent
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.global.image.wkcinitcontainer.repository }}:{{ .Values.global.image.wkcinitcontainer.tag }}
        command: ["/bin/bash", "-c", "/wkc/init.sh"]
        volumeMounts:
          - name: secret-generation-config
            mountPath: /wkc
          - name: certs-volume
            mountPath: /certs
        resources:
          requests:
            memory: "{{ .Values.global.image.wkcinitcontainer.resources.requests.memory }}"
            cpu: "{{ .Values.global.image.wkcinitcontainer.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.global.image.wkcinitcontainer.resources.limits.memory }}"
            cpu: "{{ .Values.global.image.wkcinitcontainer.resources.limits.cpu }}"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        env:
          - name: ICPD_CONTROLPLANE_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          {{- if .Values.global.ibmProduct }}
          - name: PRODUCT_NAME
            value: {{ .Values.global.ibmProduct | quote }}
          {{- end }}
      {{- include "image-secret" . | indent 6 }}
      volumes:
        - name: secret-generation-config
          configMap:
            name: ia-secret-generation-config
            defaultMode: 0555
        - name: certs-volume
          emptyDir: {}
