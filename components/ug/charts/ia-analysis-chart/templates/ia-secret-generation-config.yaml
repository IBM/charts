kind: ConfigMap
apiVersion: v1
metadata:
  name: ia-secret-generation-config
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-101"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  init.sh: |
    # Check if ia-lib-ext secret exists
    iaSecret={{ .Values.ia.secret_name }};
    iaSecret_exists=$(kubectl get secret $iaSecret);
    rc=$?
    if [[ rc -eq 1 ]]
    then
      echo "generating $iaSecret"
      kubectl create secret generic $iaSecret ;
      kubectl label secret $iaSecret -n $ICPD_CONTROLPLANE_NAMESPACE release={{ .Release.Name }} app={{ .Values.ia.app_name }} heritage={{ .Release.Service }} chart={{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }};
    else
       echo "$iaSecret secret already exists";
       kubectl annotate secret $iaSecret --overwrite=true -n $ICPD_CONTROLPLANE_NAMESPACE "helm.sh/resource-policy"="keep"
    fi
