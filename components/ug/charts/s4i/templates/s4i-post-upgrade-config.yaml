apiVersion: v1
kind: ConfigMap
metadata:
  name: s4i-post-upgrade-config
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "-10"
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  post-upgrade.sh: |
    echo Shop4info post-upgrade pod...
    echo scaling up {{ .Values.s4iEventConsumer.app_name }} replicas to 1
    kubectl scale sts {{ .Values.s4iEventConsumer.app_name }} --replicas=1 -n $NAMESPACE
    
    echo scaling up {{ .Values.shop4infoMapper.app_name }} replicas to 1
    kubectl scale sts {{ .Values.shop4infoMapper.app_name }} --replicas=1 -n $NAMESPACE
    
    echo scaling up {{ .Values.shop4infoRest.app_name }} replicas to 1
    kubectl scale sts {{ .Values.shop4infoRest.app_name }} --replicas=1 -n $NAMESPACE
    
    echo scaling up {{ .Values.s4iScheduler.app_name }} replicas to 1
    kubectl scale sts {{ .Values.s4iScheduler.app_name }} --replicas=1 -n $NAMESPACE
    
    echo scaling up {{ .Values.s4iRegistry.app_name }} replicas to 1
    kubectl scale sts {{ .Values.s4iRegistry.app_name }} --replicas=1 -n $NAMESPACE
    
    echo Waiting for {{ .Values.s4iEventConsumer.app_name }} pod to be ready
    kubectl wait --for=condition=ready --timeout=30m pod/$(kubectl get pod -l app={{ .Values.s4iEventConsumer.app_name }} -o jsonpath="{.items[0].metadata.name}")
    
    echo Waiting for {{ .Values.shop4infoMapper.app_name }} pod to be ready
    kubectl wait --for=condition=ready --timeout=30m pod/$(kubectl get pod -l app={{ .Values.shop4infoMapper.app_name }} -o jsonpath="{.items[0].metadata.name}")
    
    echo Waiting for {{ .Values.shop4infoRest.app_name }} pod to be ready
    kubectl wait --for=condition=ready --timeout=30m pod/$(kubectl get pod -l app={{ .Values.shop4infoRest.app_name }} -o jsonpath="{.items[0].metadata.name}")
    
    echo Waiting for {{ .Values.s4iScheduler.app_name }} pod to be ready
    kubectl wait --for=condition=ready --timeout=30m pod/$(kubectl get pod -l app={{ .Values.s4iScheduler.app_name }} -o jsonpath="{.items[0].metadata.name}")
    
    echo Waiting for {{ .Values.s4iRegistry.app_name }} pod to be ready
    kubectl wait --for=condition=ready --timeout=30m pod/$(kubectl get pod -l app={{ .Values.s4iRegistry.app_name }} -o jsonpath="{.items[0].metadata.name}")
    
    exit 0
