global:
  dockerRegistryPrefix: "us.icr.io/" # Because of some datastores we have to specify and use this crap name instead of global.image.repository

mongodb:
  config:
    config: 
      image:
        name: "icp-common-components/opencontent-mongodb-config-copy"
    mongodbInstall:
      image:
        name: "icp-common-components/opencontent-mongodb-install"
    mongodb:
      image:
        name: "icp-common-components/opencontent-mongodb-3"
    creds:
      image: 
        name: "icp-common-components/opencontent-icp-cert-gen-1"
    test:
      image:
        name: "icp-common-components/opencontent-bats"
    # Prometheus Metrics Exporter
    metrics:
      image:
        name: "icp-common-components/opencontent-mongodb-exporter"

##### installs cos, etcd, postgres without persisten volume
cos:
  minio:
    minio:
      image:
        name: "icp-common-components/opencontent-minio"
    minioClient:
      image:
        name: "icp-common-components/opencontent-minio-client"
    creds:
      image:
        name: "icp-common-components/opencontent-icp-cert-gen-1"

etcd:
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  config:
    image:
      name: "icp-common-components/opencontent-etcd-3"
    certgen:
      image:
        name: "icp-common-components/opencontent-icp-cert-gen-1"

postgres:
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  config:
    postgres:
      image:
        name: "icp-common-components/opencontent-postgres-stolon"
    creds:
      image:
        name: "icp-common-components/opencontent-icp-cert-gen-1"
  backup:
    image:
      name: "icp-common-components/opencontent-postgres-stolon"

storeDbSchema:
  store:
    image:
      repository: "us.icr.io/watson_assistant/development"
  pgClient:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"

createSlotStoreDatabaseCreate:
  image:
    repository: "us.icr.io/watson_assistant/provisioning"

slot:
  image:
    repository: "us.icr.io/watson_assistant/provisioning"

recommendsMongodbLoadEmbeddings:
  loader:
    image:
      repository:     "us.icr.io/watson_assistant/development"
  dataEmbeddings:
    en:
      counts:
        image:
          repository: "us.icr.io/watson_assistant/development"
      precomputed:
        image:
          repository: "us.icr.io/watson_assistant/development"
      wordEmbeddings:
        image:
          repository: "us.icr.io/watson_assistant/development"
    es:
      image:
        repository:   "us.icr.io/watson_assistant/development"
    fr:
      image:
        repository:   "us.icr.io/watson_assistant/development"
    ja:
      image:
        repository:   "us.icr.io/watson_assistant/development"


ingress:
  wcnAddon:
    addonService:
      image:
        repository: "icp-common-components/watson-gateway"
    addon:
      tls:
        image:
          repository: "icp-common-components/opencontent-common-utils"
  storeReadyCheck:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"

bdd:
  image:
    repository: "us.icr.io/watson_assistant/voyager-testops"

redis:
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  config:
    #redis:
    image:
      name: icp-common-components/opencontent-redis-3
    creds:
      image:
        name: icp-common-components/opencontent-common-utils

environment:
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"

ui:
  image:
    repository: "us.icr.io/watson_assistant/development"
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  init:
    redis:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"


tas:
  init:
    etcd:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
    cosRunning:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
  image:
    repository: "us.icr.io/watson_assistant/development"

master:
  init:
    etcd:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
    cosRunning:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
  image:
    repository: "us.icr.io/watson_assistant/development"

nlu:
  init:
    etcd:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
    cosRunning:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
  image:
    repository: "us.icr.io/watson_assistant/development"

ed:
  init:
    etcd:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
    cosRunning:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
  
  runtime:
    image:
      repository: "us.icr.io/model-mesh"
  mm:
    image:
      repository: "us.icr.io/watson_assistant/development"
  py4j:
    image:
      repository: "us.icr.io/watson_assistant/development"

sireg:
  image:
    repository:       "us.icr.io/watson_assistant/development"
  model:
    image:
      repository:     "us.icr.io/watson_assistant"

dialog:
  image: 
    repository: "us.icr.io/watson_assistant/development"
  init:
    etcd:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
    redis:
      image:
        repository: "us.icr.io/watson_assistant/provisioning"
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  
recommends:
  loader:
    image:
      repository: "us.icr.io/watson_assistant/development"
  engine:
    image:
      repository: "us.icr.io/watson_assistant/development"
  rest:
    image:
      repository: "us.icr.io/watson_assistant/development"
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"

store:
  image:
    repository: "us.icr.io/watson_assistant/development"
  schemaCheck:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  etcd:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  cluStarted:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  ssl:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"

creds:
  image:
    repository: "us.icr.io/watson_assistant/provisioning"

skillSearch:
  image:
    repository: "us.icr.io/watson_assistant/development"
  authKey:
    # image used to generate/delete the authorization encryption key
    image:
      repository: "us.icr.io/watson_assistant/provisioning"
  creds:
    image:
      repository: "us.icr.io/watson_assistant/provisioning"

systemEntities:
  image:
    repository: "us.icr.io/watson_assistant/development"

spellcheck:
  en:
    image:
      repository: "us.icr.io/watson_assistant/development"
  fr:
    image:
      repository: "us.icr.io/watson_assistant/development"

cluEmbeddingService:
  image:
    repository: "us.icr.io/watson_assistant/development"
