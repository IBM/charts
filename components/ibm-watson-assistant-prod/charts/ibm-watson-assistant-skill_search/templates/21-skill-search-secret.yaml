
{{- define "assistant.skill_search.secret" -}}apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: "{{ .Release.Name }}-skill-search"
  labels:
    <<: &primary_labels # Don't touch or extend these labels!
      service:                     "conversation"
      component:                   "skill-search"
      slot:                        "{{ .Release.Name }}"
    # Make sure the indent of other labels is the same as this comment's
    tenant:                        "PUBLIC"
    release:                       "{{ .Release.Name }}"
    app.kubernetes.io/instance:    "{{ .Release.Name }}"
    app.kubernetes.io/managed-by:  "{{ .Release.Service }}"
    app.kubernetes.io/name:        "ibm-watson-assistant"
    helm.sh/chart:                 "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    icpdsupport/addOnName:         "assistant"
    icpdsupport/app:               "skill-search"
    icpdsupport/serviceInstanceId: "{{ .Values.global.zenServiceInstanceId | int64 }}"
data:
  ssl_key:  "$(cat skill.key | base64 | tr -d '\n')"
  ssl_cert: "$(cat skill.crt | base64 | tr -d '\n')"
{{- end -}}
{{- define "assistant.skill_search.secret.openssl.config" -}}[ req ]
default_bits       = 2048
distinguished_name = req_distinguished_name
x509_extensions    = v3_req

[ req_distinguished_name ]

[ v3_req ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer

# Extensions to add to a certificate request
basicConstraints = CA:FALSE
keyUsage         = critical,nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = critical,serverAuth

#subjectAltName = @alt_names

[ v3_ca ]
# Extensions for a typical CA
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer
{{- end -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-skill-search-gen-secret"
  labels:  &labels
    <<: &primary_labels # Don't touch or extend these labels!
      service:                     "conversation"
      component:                   "skill-search-secret-gen-job"
      slot:                        "{{ .Release.Name }}"
    # Make sure the indent of other labels is the same as this comment's
    tenant:                        "PUBLIC"
    release:                       "{{ .Release.Name }}"
    app.kubernetes.io/instance:    "{{ .Release.Name }}"
    app.kubernetes.io/managed-by:  "{{ .Release.Service }}"
    app.kubernetes.io/name:        "ibm-watson-assistant"
    helm.sh/chart:                 "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    icpdsupport/addOnName:         "assistant"
    icpdsupport/app:               "skill-search-secret-gen-job"
    icpdsupport/serviceInstanceId: "{{ .Values.global.zenServiceInstanceId | int64 }}"
spec:
  backoffLimit: 10
  template:
    metadata:
      name: skill-secret-gen
      annotations: 
        productName:              "IBM Watson Assistant for IBM Cloud Pak for Data"
        productID:                "ICP4D-addon-fa92c14a5cd74c31aab1616889cbe97a-assistant"
        productVersion:           "1.4.2"
        cloudpakName:             "IBM Cloud Pak for Data"
        cloudpakId:               "eb9998dcc5d24e3eb5b6fb488f750fe2"
        cloudpakVersion:          "3.0.0"
        productChargedContainers: "All"
        productMetric:            "VIRTUAL_PROCESSOR_CORE"
      labels: 
        <<: *labels
    spec:
      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      #imagePullSecrets:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values: [ "amd64" ]
        {{- if .Values.global.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions }}
          {{- printf "\n%s" ( .Values.global.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.matchExpressions | toYaml | indent 16 ) }}
        {{- end }}
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
      - name: secret-gen
        image: "{{ if tpl ( .Values.creds.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.creds.image.repository | toString ) . ) }}{{ end }}/{{ .Values.creds.image.name }}:{{ .Values.creds.image.tag }}"
        imagePullPolicy: {{ .Values.creds.image.pullPolicy | quote }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
          {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
          runAsUser: 2000
          {{- end }}
        command:
        - "/bin/sh"
        - -c
        - |
          set -e
          cat <<EOF >/tmp/openssl.cnf.base
{{ include "assistant.skill_search.secret.openssl.config" . | indent 10 }}
          EOF
          echo
          echo
          echo "*********************************************************************"
          echo "* Generating certificate for Search skill"
          echo "*********************************************************************"
          cat /tmp/openssl.cnf.base | sed -e 's/#subjectAltName .*/subjectAltName = @skill_search_alt_names/' >/tmp/openssl.cnf
          echo "[ skill_search_alt_names ]"                             >>/tmp/openssl.cnf
          echo "# Localhosts"                                                 >>/tmp/openssl.cnf
          echo "DNS.1  =  localhost"                                          >>/tmp/openssl.cnf
          echo "DNS.2  =  127.0.0.1"                                          >>/tmp/openssl.cnf
          echo "DNS.3  =  ::1"                                                >>/tmp/openssl.cnf
          echo "# Service names"                                              >>/tmp/openssl.cnf
          {{- $serviceName := include "skill_search.service_name" . }}
          echo "DNS.4  =  {{ printf   "%s.%s.svc.%s" $serviceName .Release.Namespace (tpl .Values.clusterDomain . ) }}" >>/tmp/openssl.cnf 
          echo "DNS.5  =  {{ printf   "%s.%s.svc"    $serviceName .Release.Namespace                                }}" >>/tmp/openssl.cnf 
          echo "DNS.6 =   {{ printf   "%s"           $serviceName                                                   }}" >>/tmp/openssl.cnf 
          openssl req -x509 -newkey rsa:2048 -nodes -subj "/CN=SkillSearch" -days 3650 -config /tmp/openssl.cnf -out skill.crt -keyout skill.key
          openssl x509 -text -noout -in skill.crt

          cat <<EOF | kubectl apply -n {{ .Release.Namespace }} -f -
          ---
{{ include "assistant.skill_search.secret" . | indent 10 }}
          EOF
        resources:
{{ .Values.creds.resources | toYaml | indent 10 }}
      restartPolicy: Never 