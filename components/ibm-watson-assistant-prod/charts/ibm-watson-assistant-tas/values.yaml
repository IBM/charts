global:
  image:
    repository: ""

# replicas - If set to 0 the size is configured based on .global.deploymentType (defined in umbrella chart))
replicas: 0

autoscaling:
  maxReplicas: 10
  targetCPUUtilizationPercentage: 100

# imagePullSecret - Additional image pull secret to be used for pulling images. Supports templated values
imagePullSecret: "{{ tpl .Values.global.image.pullSecret . }}"

init:
  # Specifications for init container etcd-running. It checks whether etcd is running and healthy, has enabled authorization and configuration entries for tas are stored there.
  etcd:
    image:
      repository: "{{ tpl .Values.global.image.repository . }}"
      name:       "conan-tools"
      tag:        "20200421-1841"
      pullPolicy: "IfNotPresent"
    resources:
      requests:
        cpu:    10m
        memory: 256Mi
      limits:
        cpu:    50m
        memory: 256Mi
  
  # Specifications for init container cos-running-check. It checks whether it is possible to connection into cos/minio.
  cosRunning:
    image:
      repository: "{{ tpl .Values.global.image.repository . }}"
      name:       "conan-tools"
      tag:        "20200421-1841"
      pullPolicy: "IfNotPresent"
    resources:
      requests:
        cpu:    10m
        memory: 256Mi
      limits:
        cpu:    50m
        memory: 256Mi

image:
  repository:     "{{ tpl .Values.global.image.repository . }}"
  name:           "clu-serving"
  tag:            "20200601-152721-8-e382f0-wa_icp_1.4.2-icp-ab8c9d2"
  pullPolicy:     "IfNotPresent"

resources:
  requests:
    cpu: 300m
    memory: 5Gi
  limits:
    cpu: 4
    memory: 5Gi

# The entries below has to be related to the resource values.
heapSize: "4000m"
customJvmArgs: "-Dtas.static_heap_overhead_mbytes=1024"
