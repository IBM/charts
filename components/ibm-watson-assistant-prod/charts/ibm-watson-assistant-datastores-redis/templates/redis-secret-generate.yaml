###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
{{- include "sch.config.init" (list . "assistant.sch.chart.config.values") }}
{{- define "assistant.redis.authsecret" -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ tpl .Values.config.auth.authSecretName . | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
data:
  {{- if .Values.global.redis.auth.authSecretName }}
  password: $(echo "${REDIS_PASSWORD}"             | tr -d '\n' | base64 | tr -d '\n')
  {{- else }}
  password: $(openssl rand -base64 16 | tr '/' '-' | tr -d '\n' | base64 | tr -d '\n')
  {{- end }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-gen-secret-redis"
  labels:  &labels
{{ include "sch.metadata.labels.standard" (list . "" (dict "icpdsupport/addOnName" .Values.global.addOnName "icpdsupport/app" "helm-redis-generate-password-secret" "icpdsupport/serviceInstanceId" (.Values.global.zenServiceInstanceId | int64))) | indent 4 }}
    component: "helm-redis-generate-password-secret"
spec:
  backoffLimit: 10
  template:
    metadata:
      name: cred-gen
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" "") | indent 8 }}
      labels: 
        <<: *labels
    spec:
      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      #imagePullSecrets:
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
      - name: cred-gen
        image: "{{ if tpl ( .Values.creds.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.creds.image.repository | toString ) . ) }}{{ end }}/{{ .Values.creds.image.name }}:{{ .Values.creds.image.tag }}"
        imagePullPolicy: {{ .Values.creds.image.pullPolicy | quote }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
          {{- if not ( .Capabilities.APIVersions.Has "security.openshift.io/v1" ) }}
          runAsUser: 2000
          {{- end }}

{{- if .Values.global.redis.auth.authSecretName }}
        env:
          - name: "REDIS_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.redis.auth.authSecretName | quote }}
                key: password
{{- end }}
        command:
        - "/bin/sh"
        - -c
        - |
          set -e
          cat <<EOF | kubectl apply -n {{ .Release.Namespace }} -f -
          ---
{{ include "assistant.redis.authsecret" . | indent 10 }}
          EOF
        resources:
{{ .Values.creds.resources | toYaml | indent 10 }}
      restartPolicy: Never
      affinity:
{{ include "assistant.nodeAffinities" . | indent 8 }}
