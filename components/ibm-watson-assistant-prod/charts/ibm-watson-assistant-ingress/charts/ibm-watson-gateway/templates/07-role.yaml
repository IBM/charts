{{- if (not .Values.privilegedServiceAccount.name) }}
{{- include "sch.config.init" (list . .Values.schConfigName) -}}
{{- $compName := include "gateway.get-name-or-use-default" (list . "gw-role") -}}
{{- $deploymentCfgMapName := include "gateway.get-name-or-use-default" (list . "gw-cm") -}}


apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compName) | quote }}
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-101"
    "helm.sh/hook-delete-policy": "hook-failed"
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "delete"] # TODO: make more granular if possible
- apiGroups: [""]
  resources: ["services"]
  resourceNames: [{{ include "gateway.common.service.name" . | quote }}]
  verbs: ["delete", "get", "create"]
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: [{{ include "gateway.id" . | quote }}, {{ include "sch.names.fullCompName" (list . $deploymentCfgMapName) | quote }}]
  verbs: ["delete", "get", "create"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create", "get", "patch"] # TODO: make more granular if possible
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "get", "patch"] # TODO: make more granular if possible
- apiGroups: ["rbac.authorization.k8s.io"{{- if (.Capabilities.APIVersions.Has "security.openshift.io/v1") -}}, "authorization.openshift.io"{{- end -}}]
  resources: ["roles", "rolebindings"] # TODO: make more granular if possible
  verbs: ["get", "list", "delete", "create"]
{{- end }}
