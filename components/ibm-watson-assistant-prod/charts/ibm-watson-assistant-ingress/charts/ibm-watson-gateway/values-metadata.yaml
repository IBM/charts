## Metadata for <watson-common-ingress-auth-intercept> configuration
## This metadata is used to augment the value.yaml to drive IPC UI for configuration of the Helm chart installation

## Service configuration metadata
---
global:
  __metadata:
    label: "Global"
    description: "Global configuration"
  image:
    repository:
      __metadata:
        label: "Docker repository"
        description: "Docker image repository"
        type: "string"
        immutable: false
        required: true
    pullSecret:
      __metadata:
        label: "Docker image secret"
        description: "Docker image pull secret"
        type: "string"
        immutable: false
        required: false
  appName:
    __metadata:
      label: "App Name"
      description: "The application name to use in sch templates"
      immutable: false
      required: false
      type: "string"

preInstallValidation:
  __metadata:
    label: "Pre install validation"
    description: "Checks if Cloud Pak for Data is available before installing the addon"
    immutable: false
    required: false
serviceAccount:
  __metadata:
    label: "Service account"
    description: "Service account name or template"
  name:
    __metadata:
      label: "Service account"
      description: "Service account name"
      type: "string"
privilegedServiceAccount:
  __metadata:
    label: "Privileged service account"
    description: "Privileged service account name or template"
  name:
    __metadata:
      label: "Service account"
      description: "Service account name"
      type: "string"

schConfigName:
  __metadata:
    label: "sch template name"
    description: "Template name to render the component names"
    immutable: false
    required: false

runAsUser:
  __metadata:
    label: "Run as user id"
    description: "User id to use when running the deployment/containers"
    immutable: false
    required: false
affinity:
  __metadata:
    label: "Affinity for gateway deployments"
    description: "Affinity settings for gateway pods."
    required: false
arch:
  __metadata:
    label: "Architechture"
    description: "Architechture to use"
    type: "string"
    immutable: false
    required: true
addon:
  __metadata:
    label: "Addon"
    description: "Addon configuration"
  platformVersion:
    __metadata:
      label: "CPD version"
      description: "The Cloud Pak for Data version"
      type: "string"
      immutable: false
      required: true
  displayName:
    __metadata:
      label: "Addon name"
      description: "Addon name to use in the addons page"
      type: "string"
      immutable: false
      required: true
  serviceId:
    __metadata:
      label: "The service id to be used in public urls"
      description: "The service id to be used in public urls like tooling"
      type: "string"
      immutable: false
      required: true
  version:
    __metadata:
      label: "The version of the addon"
      description: "The version of the addon that will be shown to users"
      type: "string"
      immutable: false
      required: false
  longDescription:
    __metadata:
      label: "Detailed explanation of the addon"
      description: "Detailed explanation of the addon to be exposed in the Addon details page"
      type: "string"
      immutable: false
      required: false
  shortDescription:
    __metadata:
      label: "Short description of the addon"
      description: "Short description (up to 140 characters) of the addon to be exposed in the addons grid page"
      type: "string"
      immutable: false
      required: false
  maxInstances:
    __metadata:
      label: "Addon's maximum number of instances"
      description: "Maximum instances of an addon that can be provisioned in Cloud Pak for Data cluster"
      type: "number"
      immutable: false
      required: false
  productImages:
    __metadata:
      label: "Product images"
      description: "Number of images to show in the addon detail page"
      type: "number"
      immutable: false
      required: false
  productDocs:
    __metadata:
      label: "Link to a page describing how to deploy the addon"
      description: "Link to a page describing how to deploy the addon in Cloud Pak for Data"
      type: "string"
      immutable: false
      required: false
  deployDocs:
    __metadata:
      label: "Link to a page describing how to deploy the addon"
      description: "Link to a page describing how to deploy the addon in Cloud Pak for Data"
      type: "string"
      immutable: false
      required: false
  gettingStartedDocs:
    __metadata:
      label: "Getting Started documentation page"
      description: "Link to a page describing how to get started with the service"
      type: "string"
      immutable: false
      required: false
  apiReferenceDocs:
    __metadata:
      label: "API Reference documentation page"
      description: "Link to a page describing how to use the service API"
      type: "string"
      immutable: false
      required: false
  organizationId:
    __metadata:
      label: "Organization GUID"
      description: "Organization UUID to be used as bluemix-organization-guid in X-Watson-UserInfo"
      type: "string"
      immutable: false
      required: false
  accountId:
    __metadata:
      label: "Account GUID"
      description: "Account UUID to be used as bluemix-account-id in X-Watson-UserInfo"
      type: "string"
      immutable: false
      required: false
  planId:
    __metadata:
      label: "Plan GUID"
      description: "Plan UUID to be used as bluemix-plan-id in X-Watson-UserInfo"
      type: "string"
      immutable: false
      required: false
  instanceId:
    __metadata:
      label: "Instance GUID"
      description: "Instance UUID to be used as bluemix-instance-id in X-Watson-UserInfo"
      type: "string"
      immutable: false
      required: false
  showUserManagement:
    __metadata:
      label: "Show user management"
      description: "Set to true if you would like to allow user management from an instance dashboard"
      type: "boolean"
      immutable: false
      required: false
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  showCredentials:
    __metadata:
      label: "Show credentials"
      description: "Set to true if you would like to show the generated service credentials in the instance dashboard"
      type: "boolean"
      immutable: false
      required: false
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  disableUpgrade:
    __metadata:
      label: "Disable helm upgrade"
      description: "Set to true if you would like the chart to fail on helm upgrade"
      type: "boolean"
      immutable: false
      required: false
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  tls:
    image:
      repository:
        __metadata:
          label: "Docker repository"
          description: "Docker image repository"
          type: "string"
          immutable: false
          required: true
      tag:
        __metadata:
          label: "Docker tag"
          description: "Docker image tag"
          type: "string"
          immutable: false
          required: true
    hooks:
      create:
        type:
          __metadata:
            label: "Hook type for TLS create job."
            description: "Type of the hook for tls secret creation. If (renders to) an empty string, it is run as a standard job and not as a hook."
            type: "string"
            immutable: false
            required: false
            hidden: true
        weight:
          __metadata:
            label: "Hook weight for TLS create job."
            description: "Weight of the hook for tls secret creation. Specifies order of the hooks w.r.t. the other hooks of the same type."
            type: "string"
            immutable: false
            required: false
            hidden: true
        deletePolicy:
          __metadata:
            label: "Hook delete policy for TLS create job."
            description: "Hook delete policy specifies what happens when the hook completes."
            type: "string"
            immutable: false
            required: false
            hidden: true
      delete:
        type:
          __metadata:
            label: "Hook type for TLS cleanup job."
            description: "Type of the hook for tls secret cleanup job."
            type: "string"
            immutable: false
            required: false
            hidden: true
        weight:
          __metadata:
            label: "Hook weight for TLS cleanup job."
            description: "Weight of the hook for the tls secret cleanup. Specifies order of the hooks w.r.t. the other hooks of the same type."
            type: "string"
            immutable: false
            required: false
            hidden: true
        deletePolicy:
          __metadata:
            label: "Hook delete policy for TLS cleanup job."
            description: "Hook delete policy specifies what happens when the hook completes."
            type: "string"
            immutable: false
            required: false
            hidden: true
  networkPolicy:
    enabled:
      __metadata:
        label: "Enabled"
        description: "Whether to enable the NetworkPolicy"
        type: "boolean"
        immutable: false
        required: false
        options:
          - label: "True"
            value: true
          - label: "False"
            value: false
    additionalLabels:
      __metadata:
        label: "additionalLabels configuration"
        description: "Any additional pod labels your service would like to access"

additionalServices:
  __metadata:
    label: "Additional services"
    description: "Additional services configuration"
additionalToolings:
  __metadata:
    label: "Additional toolings"
    description: "Additional tooling configuration"
backendService:
  __metadata:
    label: "Backend service"
    description: "Backend service configuration"
  name:
    __metadata:
      label: "Service name"
      description: "The kubernetes service name for the backend service"
      type: "string"
      immutable: false
      required: false
  nameTemplate:
    __metadata:
      label: "Service template name"
      description: "The helm template to generate the name. Only used if 'name' is empty"
      type: "string"
      immutable: false
      required: false
      hidden: true
  namespace:
    __metadata:
      label: "Kubernetes namespace where the service is deployed"
      description: "Kubernetes namespace where the backend service is deployed "
      type: "string"
      immutable: false
      required: false
  port:
    __metadata:
      label: "Port"
      description: "Port to access the backend service"
      type: "number"
      immutable: false
      required: true
  rewriteTarget:
    __metadata:
      label: "Rewrite target"
      description: "Set to '/' if you want requests to have their path stripped"
      type: "string"
      immutable: false
      required: false
      hidden: true
  secure:
    __metadata:
      label: "Secure"
      description: "set to true if your service backend requires https"
      type: "boolean"
      immutable: false
      required: false
      hidden: true
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  exposeAPI:
    __metadata:
      label: "Expose API"
      description: "Set to true if your service backend exposes an API"
      type: "boolean"
      immutable: false
      required: false
      hidden: true
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  nginxDirectives:
    __metadata:
      label: "Nginx directives"
      description: "Set nginx directives to be used by zen nginx"
      type: "string"
      immutable: false
      required: false
      hidden: true
  brokerPath:
    __metadata:
      label: "Broker path"
      description: "If specified, the service will receive provisioning requests"
      type: "string"
      immutable: false
      required: false
      hidden: true
  authentication:
    __metadata:
      label: "Authentication"
      description: "If false JWT token checking will be disabled"
      type: "boolean"
      immutable: false
      required: false
      hidden: true

tooling:
  __metadata:
    label: "Tooling"
    description: "Tooling information"
  enabled:
    __metadata:
      label: "Enabled"
      description: "Set to true if tooling is available"
      type: "boolean"
      immutable: false
      required: false
      hidden: true
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  name:
    __metadata:
      label: "Service name"
      description: "The kubernetes service name for the tooling service"
      type: "string"
      immutable: false
      required: false
  nameTemplate:
    __metadata:
      label: "Service template name"
      description: "The helm template to generate the name. Only used if 'name' is empty"
      type: "string"
      immutable: false
      required: false
      hidden: true
  namespace:
    __metadata:
      label: "Kubernetes namespace where the service is deployed"
      description: "Kubernetes namespace where the tooling service is deployed "
      type: "string"
      immutable: false
      required: false
  port:
    __metadata:
      label: "Port"
      description: "Port to access the tooling service"
      type: "number"
      immutable: false
      required: true
  rewriteTarget:
    __metadata:
      label: "Rewrite target"
      description: "Set to '/' if you want requests to have their path stripped"
      type: "string"
      immutable: false
      required: false
      hidden: true
  secure:
    __metadata:
      label: "Service tooling requires https"
      description: "Set to true if your service backend requires https"
      type: "boolean"
      immutable: false
      required: false
      hidden: true
      options:
        - label: "True"
          value: true
        - label: "False"
          value: false
  nginxDirectives:
    __metadata:
      label: "Nginx directives"
      description: "Set nginx directives to be used by zen nginx"
      type: "string"
      immutable: false
      required: false
      hidden: true

addonService:
  __metadata:
    label: "Addon configuration"
    description: "Addon service configuration"
  port:
    __metadata:
      label: "Port"
      description: "Port exposed in addon service"
      type: "number"
      immutable: false
      required: true
  replicas:
    __metadata:
      label: "Addon service pod replicas"
      description: "Number of replicas of addon service pods if autoscaling is disabled"
      type: "number"
      immutable: false
      required: false
  image:
    repository:
      __metadata:
        label: "Docker repository"
        description: "Docker image repository"
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        label: "Docker tag"
        description: "Docker image tag"
        type: "string"
        immutable: false
        required: true
    containerPort:
      __metadata:
        label: "Port"
        description: "Port exposed in addon deployment"
        type: "number"
        immutable: false
        required: true
    imagePullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "The image pull policy. Default: Always"
        type: "string"
        immutable: false
        required: false
  antiAffinity:
    # __metadata:
    #   label: "Anti affinity for gateway pod"
    #   description: "Anti affinity settings enabled by default."
    policy:
      __metadata:
        label: "PodAntiAffinity Policy"
        description: "Anti affinity policy. See the ReadMe for detail. 'hard', 'soft' or a template can be set."
        type: "string"
        required: false
        options:
          - label: "soft"
            value: "soft"
          - label: "hard"
            value: "hard"
    topologyKey:
      __metadata:
        label: "PodAntiAffinity Topology key"
        description: "Key for the node label that the system uses to denote a topology domain. A string or a template can be set."
        type: "string"
        required: false
  zenCoreApiUrl:
    __metadata:
      label: "Zen core API URL"
      description: "The service url where the Zen core API is"
      type: "string"
      immutable: false
      required: false
  zenCoreUrl:
    __metadata:
      label: "Zen core URL"
      description: "The url where zen-core service is"
      type: "string"
      immutable: false
      required: false
  userMgmtUrl:
    __metadata:
      label: "User Management URL"
      description: "The url where the zen user management service is"
      type: "string"
      immutable: false
      required: false
  zenNginxUrl:
    __metadata:
      label: "Zen nginx URL"
      description: "The service url where the nginx is"
      type: "string"
      immutable: false
      required: false
  zenNamespace:
    __metadata:
      label: "Zen namespace"
      description: "The namespace where ICP for Data is running"
      type: "string"
      immutable: false
      required: false
resources:
  __metadata:
    label: "Resource Configuration"
    description: "Controls the memory and CPU requirements"
  requests:
    cpu:
      __metadata:
        label: "CPU request"
        description: "The requested CPU"
        type: "string"
        required: true
    memory:
      __metadata:
        label: "Memory request"
        description: "The memory request"
        type: "string"
        required: true
  limits:
    cpu:
      __metadata:
        label: "CPU limit"
        description: "The CPU limit"
        type: "string"
        required: true
    memory:
      __metadata:
        label: "Memory limit"
        description: "The memory limit"
        type: "string"
        required: true
livenessProbe:
  __metadata:
    label: "Liveness Probe"
    description: "Advanced control over liveness probe"
  initialDelaySeconds:
    __metadata:
      label: "Initial Delay"
      description: "Time in seconds before polling the liveness probe endpoint"
      type: "number"
  periodSeconds:
    __metadata:
      label: "Period"
      description: "Time in seconds before polling the liveness probe endpoint"
      type: "number"
autoscaling:
  __metadata:
    name: ""
    label: ""
    description: "Configuration of autoscaling"
  enabled:
    __metadata:
      name: ""
      label: ""
      description: "Enable autoscaling"
      type: "boolean"
  minReplicas:
    __metadata:
      name: ""
      label: ""
      description: "Minimum pods for autoscaling"
      type: "number"
  maxReplicas:
    __metadata:
      name: ""
      label: ""
      description: "Maximum pods for autoscaling"
      type: "number"
  targetCPUUtilizationPercentage:
    __metadata:
      name: ""
      label: ""
      description: "Target average utilization"
      type: "string"
clusterDomain:
  __metadata:
    name: "clusterDomain"
    label: "Cluster domain used by in-cluster KubeDNS names."
    description: "Specify only if your KubeDNS service names does not end with cluster.local."
    type: "string"
    required: false
    hidden: true
metering:
  __metadata:
    name: ""
    label: ""
    description: "Configuration of metering"
  productName:
    __metadata:
      name: "productName"
      label: "Specified the product name for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  productID:
    __metadata:
      name: "productID"
      label: "Specified the product id for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  productMetric:
    __metadata:
      name: "productMetric"
      label: "Specified the product metric for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  cloudpakId:
    __metadata:
      name: "cloudpakId"
      label: "Specified the product cloudpakId for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  cloudpakName:
    __metadata:
      name: "cloudpakName"
      label: "Specified the product cloudpakName for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  cloudpakVersion:
    __metadata:
      name: "cloudpakVersion"
      label: "Specified the product cloudpakVersion for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  productChargedContainers:
    __metadata:
      name: "productChargedContainers"
      label: "Specified the product productChargedContainers for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true
  productVersion:
    __metadata:
      name: "productVersion"
      label: "Specified the product productVersion for metering annotations"
      description: "Typically no need to specify."
      type: "string"
      required: false
      hidden: true

topologySpreadConstraints:
  # topologySpreadConstraints.enabled - Specifies if the topoloy spread contraints should be added to deployments
  enabled:
    __metadata:
      name: "create topologySpreadConstraints"
      label: "MZR support enabled"
      description: "Use topology spread constraint to schedule pods evenly across failure zones."
      type: "boolean"
      hidden: true
  
  # topologySpreadConstraints.maxSkew - How much the available zone can differ in number of pods.
  maxSkew:
    __metadata:
      name: "topologySpreadConstraints maxSkew"
      label: "MZR support max difference"
      description: "Specifies the degree to which pods may be unevenly distributed"
      type: "number"
      hidden: true
  
  # topologySpreadConstraints.topologyKey - Label on nodes defining failure zone; the nodes with the same values of the label are consider to belong to the same failure zone.
  topologyKey:
    __metadata:
      name: "topologySpreadConstraints topologyKey"
      label: "MZR support label defining failure domains"
      description: "The node labels. The scheduler balances pods into each topology domain defined by values of the topologyKey label."
      type: "string"
      hidden: true
  
  # topologySpreadConstraints.whenUnsatisfiable - Specifies action in case new pod cannot be scheduled because topology contraints. Possible values are DoNotSchedule and ScheduleAnyway
  whenUnsatisfiable:
    __metadata:
      name: "topologySpreadConstraints whenUnsatisfiable"
      label: "MZR support action if new pod cannot be scheduled"
      description: "Indicates how to deal with a Pod if it doesn't satisfy the spread constraint"
      type: "string"
      options:
      - label: "DoNotSchedule"
        value: "DoNotSchedule"
      - label: "ScheduleAnyway"
        value: "ScheduleAnyway"