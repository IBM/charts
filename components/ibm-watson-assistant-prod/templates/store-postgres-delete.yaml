###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
{{- include "sch.config.init" (list . .Values.global.schConfigTemplate) -}}
{{- if not .Values.global.postgres.store.auth.authSecretName }}
  {{- $secretName := include "assistant.postgres_store.secretName" . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-del-store-postgres-secret"
  labels:  &labels
{{ include "sch.metadata.labels.standard" (list . "" (dict "icpdsupport/addOnName" .Values.global.addOnName "icpdsupport/app" "helm-store-postgres-delete-secret" "icpdsupport/serviceInstanceId" (.Values.global.zenServiceInstanceId | int64))) | indent 4 }}
    component: "helm-store-postgres-delete-secret"
  annotations:
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-weight": "-6"
spec:
  backoffLimit: 10
  template:
    metadata:
      name: cred-del
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" ""  "") | indent 8 }}
      labels: 
        <<: *labels
    spec:
      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      #imagePullSecrets:
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
      - name: cred-del
        image: "{{ if tpl ( .Values.creds.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.creds.image.repository | toString ) . ) }}{{ end }}/{{ .Values.creds.image.name }}:{{ .Values.creds.image.tag }}"
        imagePullPolicy: {{ .Values.creds.image.pullPolicy | quote }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
          {{- if not ( .Capabilities.APIVersions.Has "security.openshift.io/v1" ) }}
          runAsUser: 2000
          {{- end }}

        command:
        - "/bin/sh"
        - -c
        - |
          set -ex
          if kubectl get   secret {{ $secretName }} -n {{ .Release.Namespace }} ; then
            kubectl delete secret {{ $secretName }} -n {{ .Release.Namespace }}
          fi
        resources:
{{ .Values.creds.resources | toYaml | indent 10 }}
      restartPolicy: Never
      affinity:
{{ include "assistant.nodeAffinities" . | indent 8 }}
{{- end }}
