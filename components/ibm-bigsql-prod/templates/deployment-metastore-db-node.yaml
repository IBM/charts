apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigsql-{{ .Values.zenServiceInstanceId | int64 }}-hcat-db

  labels:
    app: {{ template "bigsql.app_name" . }}
    app.kubernetes.io/component: "metastore-db"
    app.kubernetes.io/instance: {{ .Values.zenServiceInstanceId | int64 | quote }}
    app.kubernetes.io/managed-by: "Tiller"
    app.kubernetes.io/name: {{ template "bigsql.app_name" . }}
    bigsql-node-role: metastore-db
    chart: {{ template "bigsql.chart" . }}
    helm.sh/chart: {{ template "bigsql.chart_name" . }}
    heritage: {{ .Release.Service }}
    instance: {{ .Values.zenServiceInstanceId | int64 | quote }}
    instanceType: {{ .Values.zenServiceInstanceType | quote }}
    instanceVersion: {{ .Values.zenServiceInstanceVersion | quote }}
    release: {{ .Release.Name }}

spec:
{{ if .Values.remoteCluster.cmHost }}
  replicas: 0
{{ else }}
  replicas: 1
{{ end }}

  selector:
    matchLabels:
      app: {{ template "bigsql.app_name" . }}
      bigsql-node-role: metastore-db
      instance: {{ .Values.zenServiceInstanceId | int64 | quote }}
      release: {{ .Release.Name }}

  strategy:
    type: Recreate

  template:

    # The Standalone Metastore DB container

    metadata:
      name: metastore-db
      annotations:
        cloudpakId: {{ template "bigsql.cloudpak_id" . }}
        cloudpakInstanceId: {{ .Values.global.cloudpakInstanceId | int64 | quote }}
        cloudpakName: {{ template "bigsql.cloudpak_name" . }}
        hook.activate.cpd.ibm.com/command: "[]"
        hook.deactivate.cpd.ibm.com/command: "[]"
        hook.quiesce.cpd.ibm.com/command: "[]"
        hook.unquiesce.cpd.ibm.com/command: "[]"
        productChargedContainers: {{ template "bigsql.product_charged_containers" . }}
        productCloudpakRatio: {{ template "bigsql.product_cloudpak_ratio" . }}
        productID: {{ template "bigsql.product_id" . }}
        productMetric: {{ template "bigsql.product_metric" . }}
        productName: {{ template "bigsql.product_name" . }}
        productVersion: {{ include "bigsql.product_version" . | quote }}
      labels:
        app: {{ template "bigsql.app_name" . }}
        app.kubernetes.io/component: "metastore-db"
        app.kubernetes.io/instance: {{ .Values.zenServiceInstanceId | int64 | quote }}
        app.kubernetes.io/managed-by: "Tiller"
        app.kubernetes.io/name: {{ template "bigsql.app_name" . }}
        bigsql-node-role: metastore-db
        helm.sh/chart: {{ template "bigsql.chart_name" . }}
        icpdsupport/addOnId: "bigsql"
        icpdsupport/app: "db2-bigsql"
        icpdsupport/createdBy: {{ .Values.zenServiceInstanceUID | int64 | quote }}
        icpdsupport/serviceInstanceId: {{ .Values.zenServiceInstanceId | int64 | quote }}
        instance: {{ .Values.zenServiceInstanceId | int64 | quote }}
        instanceType: {{ .Values.zenServiceInstanceType | quote }}
        instanceVersion: {{ .Values.zenServiceInstanceVersion | quote }}
        release: {{ .Release.Name }}


    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}

      containers:

        # The Standalone Metastore DB container

        - name: metastore-db
          command: [ "/bin/sh" ]
          args: [ "-c", "sleep 5; /home/bigsql/mariadb-container.sh -A start" ]

          env:
            - name: ZEN_INSTANCE_ID
              value: {{ .Values.zenServiceInstanceId | int64 | quote }}

          image: "{{ .Values.docker_registry_prefix }}/{{ .Values.metastoreDb.image.dockerImage }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}


          livenessProbe:
            exec:
              command: ["/bin/sh","-c","/home/bigsql/mariadb-container.sh -A live" ]
            initialDelaySeconds: 600
            periodSeconds: 30
            timeoutSeconds: 20
            failureThreshold: 30

          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
            - name: bigsql
              containerPort: 3306
              protocol: TCP

          readinessProbe:
            exec:
              command: ["/bin/sh","-c","/home/bigsql/mariadb-container.sh -A ready" ]
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 20
            failureThreshold: 30
{{- $bigsqlCPUReq := (.Values.resources.metastore.requests.cpu) -}}
{{- $bigsqlCPULim := (.Values.resources.metastore.requests.cpu) -}}
{{- $bigsqlMem := (.Values.resources.metastore.requests.memory) -}}
{{- include "bigsql.helpers.resources" (list . (dict "requests" (dict "cpu" $bigsqlCPUReq "memory" $bigsqlMem) "limits" (dict "cpu" $bigsqlCPULim "memory" $bigsqlMem) )) | indent 10 }}

          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - CHOWN
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true

          volumeMounts:
            - name: metastore-volume
              mountPath: /mnt/PV
            - name: secret-volume
              readOnly: true
              mountPath: "/etc/secret-volume"

      hostIPC: false

      hostname: "metastore-db"

      hostNetwork: false
      hostPID: false

      initContainers:

        # The Metastore volume init container

        - name: metastore-volume-init
          args: [ "python3", "-u", "/restore-volumes-script.py", "metastore", "false" ]
          image: "{{ .Values.docker_registry_prefix }}/{{ .Values.bigsqlInit.image.dockerImage }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- include "bigsql.helpers.resources" (list . (dict "requests" (dict "cpu" $bigsqlCPUReq "memory" $bigsqlMem) "limits" (dict "cpu" $bigsqlCPULim "memory" $bigsqlMem) )) | indent 10 }}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - CHOWN
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true

          volumeMounts:
            - name: metastore-volume
              mountPath: /mnt/PV

      securityContext:
        runAsNonRoot: true
        runAsUser: 1000322824 # bigsql user

      serviceAccountName: {{ template "bigsql.service_account_name" . }}

      subdomain: bigsql-{{ .Values.zenServiceInstanceId | int64 }}

      volumes:
        - name: metastore-volume
          persistentVolumeClaim:
            {{ if .Values.persistence.useDynamicProvisioning }}
            claimName: bigsql-{{ .Values.zenServiceInstanceId | int64 }}-hcat-db
            {{ else }}
            claimName: {{ .Values.persistence.localMetastorePvcName }}
            {{ end }}
        - name: secret-volume
          secret:
            secretName: bigsql-secret{{ template "bigsql.instance.secret.suffix" . }}
