replicas: 1

arch:
  amd64: "2 - No prefrence"

image:
  # image.pullSecret - Name of the (manually created) imagePullSecret used to pull docker image.
  pullSecret: ""

  # image.repository - repository where to pull images from
  repository: ""

  name: "assistant-operator"
  tag:  "0.0.0-201112160707.develop.0.0.169.g6436a750.292"

  pullPolicy: "IfNotPresent"

waDefaultConfig:
  # waDefaultConfig.create - specifies whether a config map with detailed defaults for Watson Assistant should be created
  create: true
  # waDefaultConfig.name - the name of the config map to use / create. If not provided the config map name generated. Templates like `{{ .Values.global.defaultConfigmap.name }}` are supported.
  name: ""
  
  # waDefaultConfig - Change to be merged to the default content of the waDefaultConfig. Effective only if waDefaultConfig.create is true
  overrides: {}

# defaultPullSecretServiceAccount name of the service account from which the default image pull secret is extracted if non pull secrets are provided in CR (for in-cluster registries).
#   defaults to operator's service account name
defaultPullSecretServiceAccount: ""

crd:
  create: true # Note in case of assembly this option will be set to false and admin module will create WA CRD instead of helm.

rbac:
  # rbac.create - specifies whether RBAC (Role and RoleBinding) resources should be created
  create: true

serviceAccount:
  # serviceAccount.create - specifies whether a ServiceAccount should be created
  create: true
  # serviceAccount.name - the name of the ServiceAccount to use. If not provided the service account name is generated. Templates like `{{ .Values.global.serviceAccount.name }}` are supported.
  name: ""

# resource - Specified resources for the operator pods.
resources:
  limits:
    cpu: 1
    memory: 6Gi
  requests:
    cpu: 250m
    memory: 6Gi

# Readiness probe
readinessProbe:
  initialDelaySeconds: 5
  timeoutSeconds: 1
  failureThreshold: 3
  periodSeconds: 10
  successThreshold: 1

# Liveness probe
livenessProbe:
  initialDelaySeconds: 30
  timeoutSeconds: 5
  failureThreshold: 3
  periodSeconds: 10
  successThreshold: 1

securityContext:
  runAsUser: 1001
  runAsGroup: 0
  fsGroup: 0

# affinity is either string or dictionary specifying the affinities to be used by operator pod. If empty the default architecture based affinity is used (amd64 compatible workers)
affinity: ""

# antiAffinity specification of the anti-affinity for Watson Assistant operator pods
antiAffinity:
  # antiAffinity.policy -  Policy for anti affinity.
  #      If **soft** is set, the scheduler tries to create the pods on nodes (with the default topology key) not to co-locate them,
  #         but it will not be guaranteed.
  #      If **hard**, the scheduler tries to create the pods on nodes not to co-locate them and will not create the pods in case of co-location.
  #      If the other value, anti affinity is disabled.
  #  Support templates
  policy: "soft"

  # antiAffinity.topologyKey - Key for the node label that the system uses to denote a topology domain.
  #  Support templates
  topologyKey: "kubernetes.io/hostname"

# topologySpreadConstraints configures how the pods are distributed across multiple reziliency/failure zones.
#  Requires kubernetes 1.16+ with enabled MZR support.
#  See https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/ to get more info about topologyContraints.
topologySpreadConstraints:
  # topologySpreadConstraints.enabled - Specifies if the topology spread contraints should be added to Watson Assistant operator pods
  enabled:           false

  # topologySpreadConstraints.maxSkew - How much the failure/availity zones can differ in number of pods.
  maxSkew:           1

  # topologySpreadConstraints.topologyKey - Label of nodes defining failure zone;
  #     the nodes with the same values of the label are consider to belong to the same failure zone.
  topologyKey:       "failure-domain.beta.kubernetes.io/zone"

  # topologySpreadConstraints.whenUnsatisfiable - Specifies action in case new pod cannot be scheduled because of topology contraints.
  #   Possible values are DoNotSchedule and ScheduleAnyway
  whenUnsatisfiable: "ScheduleAnyway"

# Metering either multiline string or dictionary that overrides (all) metering related annotations.
metering: ""
#metering:
#  productID:
#  productName:
#  productVersion:
#  cloudpakName:
#  cloudpakId:
#  cloudpakInstanceId:
#  productChargedContainers:
#  productMetric:

# annotations: either multiline string or dictionary that specifies addtional annotations that will be added to the operator pod
annotations: ""

# clusterDomain - the suffix of all the cluster DNS names like service_name.service_namespace.svc.cluster.local.  Supports templated values like "{{ .Values.global.clusterDomain }}"
clusterDomain: "cluster.local"

# license must be set to "true" in order to accept the terms of the IBM license for Helm CLI install.
license: false
