{{- $compName := "r-publish-content-api" -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: r-publish-content
  annotations:
    {{- if .Values.global.annotations }}
{{ toYaml .Values.global.annotations | trim | indent 4 }}
    {{- end }} 
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    app.kubernetes.io/name: "{{ .Release.Name }}-{{$compName}}"
    helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
    {{- include "zenhelper.labels" (list . $compName) | indent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "zenhelper.labels" (list . $compName) | indent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{.Release.Service | quote }}
        app.kubernetes.io/instance: {{.Release.Name | quote }}
        app.kubernetes.io/name: "{{ .Release.Name }}-{{$compName}}"
        helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
        {{- include "zenhelper.labels" (list . $compName) | indent 8 }}
      annotations:
        {{- include "zenhelper.annotations" .  | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true         
        runAsUser: {{ .Values.global.runAsUser }} 
      serviceAccount: {{ .Values.global.editor.sa }}
      serviceAccountName: {{ .Values.global.editor.sa }}
      terminationGracePeriodSeconds: 0
      affinity:
        {{- include "zenhelper.nodeArchAffinity" . | indent 8 }}
      {{- if .Values.global.baseInstaller }}
      nodeSelector:
        is_storage: "true"
      {{- end }}
      containers:
      - name: r-publish-content-api
        image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.shinyServer.image.name }}:{{ .Values.shinyServer.image.tag }}
        imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy | quote }}
        volumeMounts:
        - mountPath: /cc-home
          name: cc-home-mount
        imagePullPolicy: Always
        command: ["/scripts/startup.sh"]
        env:
        - name: SHARED_SHINY_RE
          value: "true"
        - name: CLOUDANT_USERNAME
          valueFrom:
            secretKeyRef:
              name: cloudant-secrets
              key: service_cloudant_username
        - name: CLOUDANT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cloudant-secrets
              key: service_cloudant_password
        ports:
        - containerPort: 7330
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /shiny-health-monitor/monitor.html
            port: 7330
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /shiny-health-monitor/monitor.html
            port: 7330
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          limits:
            cpu: 500m
            memory: 4Gi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            runAsNonRoot: true             
            runAsUser: {{ .Values.global.runAsUser }}
            capabilities:
              drop:
              - ALL 
      volumes:
      - name: cc-home-mount
        persistentVolumeClaim:
          claimName: cc-home-pvc