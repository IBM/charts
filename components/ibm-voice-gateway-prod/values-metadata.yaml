---
global:
  __metadata:
    label: 'Global'
    description: 'Global configuration'
  sch:
    enabled:
      __metadata:
        name: ''
        label: ''
        description: 'Enable sch'
        type: 'boolean'
        hidden: true
  dockerRegistryPrefix:
    __metadata:
      label: "Repository for Voice Gateway images."
      description: "Docker Repository where the Voice Gateway chart pulls images."
      hidden: true
  storageClassName:
    __metadata:
      label: "The default storage class."
      description: "The name of the default storage class that the Voice Gateway chart will use."
      hidden: true
  image:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry"
        description: "Docker registry to pull the images from"
        type: "string"
        immutable: false
        required: true
    pullSecrets:
      __metadata:
        name: 'pullSecrets'
        label: 'Image pull secrets'
        description: 'Docker repository image pull secret'
        type: 'string'
        immutable: false
        required: false
  disableSslCertValidation:
    __metadata:
      name: 'disableSslCertValidation'
      label: 'Disable SSL Certificate Validation'
      description: 'Disable SSL Certificate Validation for connecting to Watson Services. Should not be used for production environment'
      type: 'boolean'
      immutable: false
      required: true

arch:
  __metadata:
    label: 'Architechture'
    description: 'Architechture to use'
    type: 'string'
    immutable: true
    required: true
runAsUser:
  __metadata:
    label: 'Run as user id'
    description: 'User id to use when running the deployment/containers'
    immutable: false
    required: false
schConfigName:
  __metadata:
    label: 'sch template name'
    description: 'Template name to render the component names'
    immutable: false
    required: false
    hidden: true

sip:
  __metadata:
    name: 'sip'
    label: 'Voice gateway configuration'
    description: 'Voice gateway configuration parameters'
  enable:
    __metadata:
      name: 'enable'
      label: 'Enable Voice Gateway'
      description: 'Enable Voice Gateway. This will create the pod, service and containers for voice gateway.'
      type: 'boolean'
      immutable: false
      required: true
  nodeSelector:
    __metadata:
      name: "nodeSelector"
      label: "Node selector"
      description: "Node labels for sip pod assignment"
      type: "string"
      immutable: false
      required: false
  resources:
    requests:
      cpu:
        __metadata:
          label: 'CPU request'
          description: 'The requested CPU'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory request'
          description: 'The memory request'
          type: 'string'
          required: true
    limits:
      cpu:
        __metadata:
          label: 'CPU limit'
          description: 'The CPU limit'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory limit'
          description: 'The memory limit'
          type: 'string'
          required: true
  codecs:
    g729:
      enable:
        __metadata:
          name: 'g729.enable'
          label: 'Enable G729 Codec Service'
          description: 'Enables G729 Codec Service. This will create the container for G729 Service.'
          type: 'boolean'
          immutable: false
          required: true
      image:
        repository:
          __metadata:
            name: "repository"
            label: "Docker image registry for G729 Codec Service"
            description: "Docker registry to pull the G729 Codec Service image"
            type: "string"
            immutable: false
            required: true
        name:
          __metadata:
            name: 'g729.name'
            label: 'G729 Codec Service docker image name'
            description: 'Docker image name for the G729 Codec Service'
            type: 'string'
            immutable: false
            required: true
        containerName:
          __metadata:
            name: 'g729.containerName'
            label: 'G729 Codec Service container name'
            description: 'Name for the G729 Codec Service container'
            type: 'string'
            immutable: false
            required: true
        tag:
          __metadata:
            name: 'g729.tag'
            label: 'G729 tag'
            description: 'G729 Codec Service docker image tag'
            type: 'string'
            immutable: false
            required: true
      resources:
        requests:
          cpu:
            __metadata:
              label: 'CPU request'
              description: 'The requested CPU'
              type: 'string'
              required: true
          memory:
            __metadata:
              label: 'Memory request'
              description: 'The memory request'
              type: 'string'
              required: true
        limits:
          cpu:
            __metadata:
              label: 'CPU limit'
              description: 'The CPU limit'
              type: 'string'
              required: true
          memory:
            __metadata:
              label: 'Memory limit'
              description: 'The memory limit'
              type: 'string'
              required: true
      envVariables:
        webSocketServerPort:
          __metadata:
            name: 'webSocketServerPort'
            label: 'WebSocket Server Port'
            description: 'The port to listen to for WebSocket requests for G729 transcoding.'
            type: 'string'
            immutable: false
            required: true
        logLevel:
          __metadata:
            name: 'logLevel'
            label: 'Log Level for G729 Codec Service'
            description: 'Specifies the log level for the G729 codec service.'
            type: 'string'
            immutable: false
            required: true

# Replica Count
replicaCount:
  __metadata:
    name: 'replicaCount'
    label: 'Number of replicas'
    description: 'The number of desired replica pods that run simultaneously'
    type: 'string'
    immutable: false
    required: true

# Tenant configuration secret name
tenantConfigSecretName:
  __metadata:
    name: 'tenantConfigSecretName'
    label: 'Tenant Config secret name'
    description: 'Tenant config secret name for Voice Gateway deployment'
    type: 'string'
    immutable: false
    required: true

image:
  __metadata:
    label: 'Image'
    description: 'Docker image configuration for Voice Gateway images'
  sipOrchestrator:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry for Sip Orchestrator"
        description: "Docker registry to pull the Sip Orchestrator image"
        type: "string"
        immutable: false
        required: true
    name:
      __metadata:
        name: 'sipOrchestrator.name'
        label: 'Sip Orchestrator docker image name'
        description: 'Docker image name for the Sip Orchestrator'
        type: 'string'
        immutable: false
        required: true
    containerName:
      __metadata:
        name: 'sipOrchestrator.containerName'
        label: 'Sip Orchestrator container name'
        description: 'Name for the Sip Orchestrator container'
        type: 'string'
        immutable: false
        required: true
    tag:
      __metadata:
        name: 'sipOrchestrator.tag'
        label: 'Sip Orchestrator tag'
        description: 'Sip Orchestrator docker image tag'
        type: 'string'
        immutable: false
        required: true
  mediaRelay:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry for Media Relay"
        description: "Docker registry to pull the Media Relay image"
        type: "string"
        immutable: false
        required: true
    name:
      __metadata:
        name: 'mediaRelay.name'
        label: 'Media Relay docker image name'
        description: 'Docker image name for the Media Relay'
        type: 'string'
        immutable: false
        required: true
    containerName:
      __metadata:
        name: 'mediaRelay.containerName'
        label: 'Media Relay container name'
        description: 'Name for the Media Relay container'
        type: 'string'
        immutable: false
        required: true
    tag:
      __metadata:
        name: 'mediaRelay.tag'
        label: 'Media Relay tag'
        description: 'Media Relay docker image tag'
        type: 'string'
        immutable: false
        required: true
  pullPolicy:
    __metadata:
      name: 'pullPolicy'
      label: 'Image pull policy'
      description: 'Image pull policy for the docker images'
      type: 'string'
      immutable: false
      required: true
      options:
        - label: 'Always'
          value: 'Always'
        - label: 'Never'
          value: 'Never'
        - label: 'IfNotPresent'
          value: 'IfNotPresent'

# Persistence options
persistence:
  __metadata:
    label: 'Persistent volume for recording and/or logs'
    description: 'Configuration for persistent volume for recording and/or logs'
  useDynamicProvisioning:
    __metadata:
      name: 'useDynamicProvisioning'
      label: 'Use dynamic provisioning for persistent volume'
      description: 'Automatically provision the requested volume if set to true. Defaults to false'
      type: 'boolean'
      immutable: false
      required: true
  # Recordings volume claim options
  recordingsVolume:
    enablePersistentRecordings:
      __metadata:
        name: 'enablePersistentRecordings'
        label: 'Enable Persistent Recordings'
        description: 'Set to true to store recordings in a persistent volume'
        type: 'boolean'
        immutable: false
        required: true
    name:
      __metadata:
        name: 'name'
        label: 'Name of the persistent volume claim'
        description: 'By default a persistent volume claim will be created with this name'
        type: 'string'
        immutable: false
        required: false
    storageClassName:
      __metadata:
        name: 'storageClassName'
        label: 'Existing storage class name'
        description: 'Choose a specific storage class name. Defaults to the default storage class in the cluster'
        type: 'string'
        immutable: false
        required: false
    size:
      __metadata:
        name: 'size'
        label: 'Size of the volume claim'
        description: 'Defaults to 2Gi of storage request. Choose a different size of disk if needed'
        type: 'string'
        immutable: false
        required: false
  logsVolume:
    enablePersistentLogs:
      __metadata:
        name: 'enablePersistentLogs'
        label: 'Enable Persistent Logs'
        description: 'Set to true to store logs in a persistent volume'
        type: 'boolean'
        immutable: false
        required: true
    name:
      __metadata:
        name: 'name'
        label: 'Name of the persistent volume claim'
        description: 'By default a persistent volume claim will be created with this name'
        type: 'string'
        immutable: false
        required: false
    storageClassName:
      __metadata:
        name: 'storageClassName'
        label: 'Existing storage class name'
        description: 'Choose a specific storage class name. Defaults to the default storage class in the cluster'
        type: 'string'
        immutable: false
        required: false
    size:
      __metadata:
        name: 'size'
        label: 'Size of the volume claim'
        description: 'Defaults to 2Gi of storage request. Choose a different size of disk if needed'
        type: 'string'
        immutable: false
        required: false

# Media Relay Environment Variables
mediaRelayEnvVariables:
  __metadata:
    name: 'mediaRelayEnvVariables'
    label: 'Media Relay Environment Variables'
    description: 'Environment Variables for the Media Relay container'
  sdpAddress:
    __metadata:
      name: 'sdpAddress'
      label: 'Media Relay SDP Address'
      description: 'The address to use in the Answer SDP for SIP'
      type: 'string'
      immutable: false
      required: true
  mediaRelayWsHost:
    __metadata:
      name: 'mediaRelayWsHost'
      label: 'Media Relay WS Host'
      description: 'The IP address or host name that the Media Relay listens to requests from the SIP Orchestrator on'
      type: 'string'
      immutable: false
      required: true
  mediaRelayWsPort:
    __metadata:
      name: 'mediaRelayWsPort'
      label: 'Media Relay WS Port'
      description: 'The port that the SIP Orchestrator uses to open a WebSocket session'
      type: 'string'
      immutable: false
      required: true
  rtpUdpPortRange:
    __metadata:
      name: 'rtpUdpPortRange'
      label: 'RTP UDP Port Range'
      description: 'Port range for UDP, set as a String'
      type: 'string'
      immutable: false
      required: true
  clusterWorkers:
    __metadata:
      name: 'clusterWorkers'
      label: 'Cluster Workers'
      description: 'Number of cluster workers to spawn. When set to 0, a number of workers equal to one less than the number of CPUs is spawned'
      type: 'string'
      immutable: false
      required: true
  maxSessions:
    __metadata:
      name: 'maxSessions'
      label: 'Max Sessions'
      description: 'The maximum number of simultaneous media sessions that the Media Relay handles before it stops the creation of new media sessions'
      type: 'string'
      immutable: false
      required: true
  enableRecording:
    __metadata:
      name: 'enableRecording'
      label: 'Enable Recording'
      description: 'Set to true to enable call audio recording on the Media Relay'
      type: 'boolean'
      immutable: false
      required: true
  stereoRecording:
    __metadata:
      name: 'stereoRecording'
      label: 'Stereo Recording'
      description: 'Set to true to record the call audio'
      type: 'boolean'
      immutable: false
      required: true

  readinessProbe:
    initialDelaySeconds:
      __metadata:
        name: 'initialDelaySeconds'
        label: 'Readiness Probe Initial Delay Seconds'
        description: 'This is the initialDelaySeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
    periodSeconds:
      __metadata:
        name: 'periodSeconds'
        label: 'Readiness Probe Period Seconds'
        description: 'This is the periodSeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
    timeoutSeconds:
      __metadata:
        name: 'timeoutSeconds'
        label: 'Readiness Probe Timeout Seconds'
        description: 'This is the timeoutSeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
  livenessProbe:
    initialDelaySeconds:
      __metadata:
        name: 'initialDelaySeconds'
        label: 'Liveness Probe Initial Delay Seconds'
        description: 'This is the initialDelaySeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false
    periodSeconds:
      __metadata:
        name: 'periodSeconds'
        label: 'Liveness Probe Period Seconds'
        description: 'This is the periodSeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false
    timeoutSeconds:
      __metadata:
        name: 'timeoutSeconds'
        label: 'Liveness Probe Timeout Seconds'
        description: 'This is the timeoutSeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false

  mediaRelayLogLevel:
    __metadata:
      name: 'mediaRelayLogLevel'
      label: 'Media Relay Log Level'
      description: 'The log level. Set the log level to INFO, DEBUG, or TRACE'
      type: 'string'
      immutable: false
      required: true
  mediaRelayLogRotationFileCount:
    __metadata:
      name: 'mediaRelayLogRotationFileCount'
      label: 'Media Relay Log Rotation File Count'
      description: 'The number of Media Relay log files to keep in rotation for the Bunyan logging module'
      type: 'string'
      immutable: false
      required: true
  mediaRelayLogRotationPeriod:
    __metadata:
      name: 'mediaRelayLogRotationPeriod'
      label: 'Media Relay Log Rotation Period'
      description: 'The period at which the Bunyan logging module rotates the log files. By default, log files are rotated on a 24-hour basis'
      type: 'string'
      immutable: false
      required: true
  rtpPacketLossReportingThreshold:
    __metadata:
      name: 'rtpPacketLossReportingThreshold'
      label: 'RTP Packet Loss Reporting Threshold'
      description: 'The number of lost packets that are detected before the Media Relay logs a warning message'
      type: 'string'
      immutable: false
      required: true

  proxyType:
    __metadata:
      name: 'proxyType'
      label: 'Media Relay Proxy Type'
      description: 'Defines the protocol to use for the proxy connection, either http or https'
      type: 'string'
      immutable: false
      required: false
  proxyHost:
    __metadata:
      name: 'proxyHost'
      label: 'Media Relay Proxy Host'
      description: 'Host of the forward proxy server'
      type: 'string'
      immutable: false
      required: false
  proxyPort:
    __metadata:
      name: 'proxyPort'
      label: 'Media Relay Proxy Port'
      description: 'Port of the forward proxy server'
      type: 'string'
      immutable: false
      required: false
  proxyUsername:
    __metadata:
      name: 'proxyUsername'
      label: 'Media Relay Proxy Username'
      description: 'User name for proxy authentication'
      type: 'string'
      immutable: false
      required: false
  proxyPasswordSecret:
    __metadata:
      name: 'proxyPasswordSecret'
      label: 'Proxy Password secret name'
      description: 'Media Relay Proxy Password for proxy authentication'
      type: 'string'
      immutable: false
      required: false
  watsonSttEnableProxy:
    __metadata:
      name: 'watsonSttEnableProxy'
      label: 'Watson STT Enable Proxy'
      description: 'Indicates whether connections to the Watson Speech to Text service are routed through the configured proxy'
      type: 'boolean'
      immutable: false
      required: true
  watsonTtsEnableProxy:
    __metadata:
      name: 'watsonTtsEnableProxy'
      label: 'Watson TTS Enable Proxy'
      description: 'Indicates whether connections to the Watson Text to Speech service are routed through the configured proxy'
      type: 'boolean'
      immutable: false
      required: true
  musicOnHoldEnableProxy:
    __metadata:
      name: 'musicOnHoldEnableProxy'
      label: 'Music On Hold Enable Proxy'
      description: 'Indicates whether connections to any music on hold or one-time audio URLs are routed through the configured proxy'
      type: 'boolean'
      immutable: false
      required: true

  enableMrcp:
    __metadata:
      name: 'enableMrcp'
      label: 'Enable MRCPv2'
      description: 'Enable MRCPv2 connections'
      type: 'boolean'
      immutable: false
      required: true
  unimrcpConfigSecretName:
    __metadata:
      name: 'unimrcpConfigSecretName'
      label: 'unimrcpConfig secret name'
      description: 'Name of secret created for unimrcpConfig'
      type: 'string'
      immutable: false
      required: false
  mrcpv2SipPort:
    __metadata:
      name: 'mrcpv2SipPort'
      label: 'MRCPv2 SIP Port'
      description: 'SIP port to use for MRCPv2 connections'
      type: 'string'
      immutable: false
      required: false

  enableSsl:
    __metadata:
      name: 'enableSsl'
      label: 'Enable SSL'
      description: 'Secure connections using SSL'
      type: 'boolean'
      immutable: false
      required: true
  sslClientCACertSecret:
    __metadata:
      name: 'sslClientCACertSecret'
      label: 'SSL client CA certificate secret'
      description: 'Name of the SSL client CA certificate secret'
      type: 'string'
      immutable: false
      required: false

  enableMutualAuth:
    __metadata:
      name: 'enableMutualAuth'
      label: 'Enable Mutual Authentication'
      description: 'Secure connections using Mutual Authentication'
      type: 'boolean'
      immutable: false
      required: true
  sslClientPkcs12FileSecret:
    __metadata:
      name: 'sslClientPkcs12FileSecret'
      label: 'SSL client PKCS12 file secret'
      description: 'Kubernetes secret for the SSL client PKCS12 file'
      type: 'string'
      immutable: false
      required: false
  sslClientPassphraseSecret:
    __metadata:
      name: 'sslClientPassphraseSecret'
      label: 'SSL client passphrase secret name'
      description: 'Kubernetes secret for the SSL client passphrase'
      type: 'string'
      immutable: false
      required: false

sipOrchestratorEnvVariables:
  __metadata:
    name: 'sipOrchestratorEnvVariables'
    label: 'Sip Orchestrator Environment Variables'
    description: 'Environment Variables for the Sip Orchestrator container'

  httpHost:
    __metadata:
      name: 'httpHost'
      label: 'HTTP Host'
      description: 'Set to * to expose one of the REST APIs; inbound SMS, monitoring, outbound calls.'
      type: 'string'
      immutable: false
      required: true
  httpPort:
    __metadata:
      name: 'httpPort'
      label: 'HTTP Port'
      description: 'HTTP port for External Connections.'
      type: 'string'
      immutable: false
      required: true
  httpPortTls:
    __metadata:
      name: 'httpPortTls'
      label: 'HTTP Host for TLS'
      description: 'HTTP port for TLS External Connections.'
      type: 'string'
      immutable: false
      required: true
  secureAdminInterface:
    __metadata:
      name: 'secureAdminInterface'
      label: 'Secure admin interface with credentials'
      description: 'Set to true to enable authentication for the admin interface'
      type: 'boolean'
      immutable: false
      required: true
  adminCredentialSecret:
    __metadata:
      name: 'adminCredentialSecret'
      label: 'Admin Credential secret'
      description: 'Kubernetes secret for username and password for admin interface. Required if secureAdminInterface is set to true'
      type: 'string'
      immutable: false
      required: true
  mediaRelayHost:
    __metadata:
      name: 'mediaRelayHost'
      label: 'Media Relay Host'
      description: 'Host name of the Media Relay, which the WebSocket server and UDP socket are bound to'
      type: 'string'
      immutable: false
      required: true
  sipHost:
    __metadata:
      name: 'sipHost'
      label: 'SIP Host'
      description: 'External IP of the SIP Orchestrator where the SIP server is listening'
      type: 'string'
      immutable: false
      required: true
  sipPort:
    __metadata:
      name: 'sipPort'
      label: 'SIP Port'
      description: 'External SIP port for User Datagram Protocol (UDP). Must be same as SIP Port for TCP'
      type: 'string'
      immutable: false
      required: true
  sipPortTcp:
    __metadata:
      name: 'sipPortTcp'
      label: 'SIP Port for TCP'
      description: 'External SIP port for Transmission Control Protocol (TCP). Must be same as SIP Port'
      type: 'string'
      immutable: false
      required: true
  sipPortTls:
    __metadata:
      name: 'sipPortTls'
      label: 'SIP Port for TLS'
      description: 'External SIP port for Transport Layer Security (TLS)'
      type: 'string'
      immutable: false
      required: true

  readinessProbe:
    initialDelaySeconds:
      __metadata:
        name: 'initialDelaySeconds'
        label: 'Readiness Probe Initial Delay Seconds'
        description: 'This is the initialDelaySeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
    periodSeconds:
      __metadata:
        name: 'periodSeconds'
        label: 'Readiness Probe Period Seconds'
        description: 'This is the periodSeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
    timeoutSeconds:
      __metadata:
        name: 'timeoutSeconds'
        label: 'Readiness Probe Timeout Seconds'
        description: 'This is the timeoutSeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
  livenessProbe:
    initialDelaySeconds:
      __metadata:
        name: 'initialDelaySeconds'
        label: 'Liveness Probe Initial Delay Seconds'
        description: 'This is the initialDelaySeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false
    periodSeconds:
      __metadata:
        name: 'periodSeconds'
        label: 'Liveness Probe Period Seconds'
        description: 'This is the periodSeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false
    timeoutSeconds:
      __metadata:
        name: 'timeoutSeconds'
        label: 'Liveness Probe Timeout Seconds'
        description: 'This is the timeoutSeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false

  logLevel:
    __metadata:
      name: 'logLevel'
      label: 'Log Level'
      description: 'This is the log level for the SIP Orchestrator'
      type: 'string'
      immutable: false
      required: true
  logMaxFiles:
    __metadata:
      name: 'logMaxFiles'
      label: 'Log Max Files'
      description: 'The maximum number of log files, trace files, and exception summary log files'
      type: 'string'
      immutable: false
      required: true
  logMaxFileSize:
    __metadata:
      name: 'logMaxFileSize'
      label: 'Log Max File Size'
      description: 'The maximum size in megabytes (MB) that a log file can reach before a new file is created'
      type: 'string'
      immutable: false
      required: true
  enableAuditMessages:
    __metadata:
      name: 'enableAuditMessages'
      label: 'Enable Audit Messages'
      description: 'Set to false to disable audit messages'
      type: 'boolean'
      immutable: false
      required: true
  enableTranscriptionAuditMessages:
    __metadata:
      name: 'enableTranscriptionAuditMessages'
      label: 'Enable Transcription Audit Messages'
      description: 'Set to true to enable audit transcription messages'
      type: 'boolean'
      immutable: false
      required: true
  latencyReportingThreshold:
    __metadata:
      name: 'latencyReportingThreshold'
      label: 'Latency Reporting Threshold'
      description: 'Threshold in milliseconds for reporting round-trip Conversation latency'
      type: 'string'
      immutable: false
      required: true
  relayLatencyReportingThreshold:
    __metadata:
      name: 'relayLatencyReportingThreshold'
      label: 'Relay Latency Reporting Threshold'
      description: 'Threshold in milliseconds for reporting Media Relay related latencies'
      type: 'string'
      immutable: false
      required: true

  proxyHost:
    __metadata:
      name: 'proxyHost'
      label: 'Sip Orchestrator Proxy Host'
      description: 'Defines the host of the forward proxy server'
      type: 'string'
      immutable: false
      required: false
  proxyPort:
    __metadata:
      name: 'proxyPort'
      label: 'Sip Orchestrator Proxy Port'
      description: 'Defines the port of the forward proxy server'
      type: 'string'
      immutable: false
      required: false
  proxyUsername:
    __metadata:
      name: 'proxyUsername'
      label: 'Sip Orchestrator Proxy Username'
      description: 'User name for proxy authentication'
      type: 'string'
      immutable: false
      required: false
  proxyPasswordSecret:
    __metadata:
      name: 'proxyPasswordSecret'
      label: 'Proxy Password secret name'
      description: 'Sip Orchestrator Proxy Password for proxy authentication'
      type: 'string'
      immutable: false
      required: false
  trustedIpList:
    __metadata:
      name: 'trustedIpList'
      label: 'Trusted IP List'
      description: 'A comma-separated list of IP addresses'
      type: 'string'
      immutable: false
      required: false

  cmrHealthCheckFailErrCode:
    __metadata:
      name: 'cmrHealthCheckFailErrCode'
      label: 'CMR Health Check Fail Err Code'
      description: 'The error code to send in a SIP OPTIONS response when the voice gateway is temporarily unavailable'
      type: 'string'
      immutable: false
      required: false

  consoleLogFormat:
    __metadata:
      name: 'consoleLogFormat'
      label: 'Console logging format'
      description: 'Specifies container log output format'
      type: 'string'
      immutable: false
      required: true
      options:
        - label: 'json'
          value: 'json'
        - label: 'basic'
          value: 'basic'
  consoleLogLevel:
    __metadata:
      name: 'consoleLogLevel'
      label: 'Console logging level'
      description: 'Controls the granularity of messages that go to the container log'
      type: 'string'
      immutable: false
      required: true
  consoleLogSource:
    __metadata:
      name: 'consoleLogSource'
      label: 'Console logging sources'
      description: 'Specify sources that are written to the container log. Use a comma separated list for multiple sources'
      type: 'string'
      immutable: false
      required: true

  enableSslorMutualAuth:
    __metadata:
      name: 'enableSslorMutualAuth'
      label: 'Enable SSL or Mutual Authentication'
      description: 'Secure connections using SSL or Mutual Authentication'
      type: 'boolean'
      immutable: false
      required: true
  sslKeyTrustStoreSecret:
    __metadata:
      name: 'sslKeyTrustStoreSecret'
      label: 'SSL key trust store secret'
      description: 'SSL keystore file secret name'
      type: 'string'
      immutable: false
      required: false
  sslFileType:
    __metadata:
      name: 'sslFileType'
      label: 'SSL file type'
      description: 'The file type of the keystore file. Valid values are JKS, JCEKS, and PKCS12'
      type: 'string'
      immutable: false
      required: false
      options:
        - label: 'JKS'
          value: 'JKS'
        - label: 'JCEKS'
          value: 'JCEKS'
        - label: 'PKCS12'
          value: 'PKCS12'
  sslPassphraseSecret:
    __metadata:
      name: 'sslPassphraseSecret'
      label: 'SSL passphrase secret name'
      description: 'Kubernetes secret for the keystore file passphrase'
      type: 'string'
      immutable: false
      required: false
  enableMetricsAuth:
    __metadata:
      name: 'enableMetricsAuth'
      label: 'Enable authentication for the monitoring API'
      description: 'Set to true to enable authentication for the monitoring API'
      type: 'boolean'
      immutable: false
      required: true
  metricsSamplingInterval:
    __metadata:
      name: 'metricsSamplingInterval'
      label: 'Metrics Sampling Interval in seconds'
      description: 'Indicates the interval for updating the monitoring metrics.'
      type: 'string'
      immutable: false
      required: true

metering:
  __metadata:
    name: 'metering'
    label: 'Metering Configuration (ICP platform only)'
    description: 'Environment Variables for Voice Gateway Metering'
  apiKeySecret:
    __metadata:
      name: 'apiKeySecret'
      label: 'Metering API Key Secret'
      description: 'The kubernetes secret name for the metering service API key credential'
      type: 'string'
      immutable: false
      required: true
  enable:
    __metadata:
      name: 'enable'
      label: 'Enable Metering'
      description: 'Enable Metering for Voice Gateway'
      type: 'boolean'
      immutable: true
      required: true
      hidden: true
  icpMasterNodeIP:
    __metadata:
      name: 'icpMasterNodeIP'
      label: 'ICP Master Node Domain/IP'
      description: 'ICP Master Node Domain name or IP address'
      type: 'string'
      immutable: false
      required: true
  serverURL:
    __metadata:
      name: 'serverURL'
      label: 'Metering Server URL'
      description: 'The metering service URL'
      type: 'string'
      immutable: false

# SMS Gateway

sms:
  __metadata:
    name: 'sms'
    label: 'SMS Gateway container deployment and the environment variables'
    description: 'vgw-sms-gateway container deployment and environment variables for the container'
  enable:
    __metadata:
      name: 'enable'
      label: 'Enable SMS container deployment'
      description: 'Enable SMS container deployment. This will add another pod and deploy sms container.'
      type: 'boolean'
      immutable: false
      required: true

  # Replica Count
  replicas:
    __metadata:
      name: 'replicas'
      label: 'Number of replicas'
      description: 'The number of desired replica pods that run simultaneously'
      type: 'string'
      immutable: false
      required: true

  nodeSelector:
    __metadata:
      name: "nodeSelector"
      label: "Node selector"
      description: "Node labels for sms pod assignment"
      type: "string"
      immutable: false
      required: false

  image:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry for SMS Gateway"
        description: "Docker registry to pull the SMS Gateway image"
        type: "string"
        immutable: false
        required: true
    name:
      __metadata:
        name: 'sms.name'
        label: 'Sms name'
        description: 'Docker image name for the SMS Gateway'
        type: 'string'
        immutable: false
        required: true
    containerName:
      __metadata:
        name: 'sms.containerName'
        label: 'Sms container name'
        description: 'Name for the Sms container'
        type: 'string'
        immutable: false
        required: true
    tag:
      __metadata:
        name: 'sms.tag'
        label: 'Sms tag'
        description: 'Sms docker image tag'
        type: 'string'
        immutable: false
        required: true
    containerPort:
      __metadata:
        name: 'containerPort'
        label: 'ContainerPort'
        description: 'TCP containerPort.'
        type: 'string'
        immutable: false
        required: true
    servicePort:
      __metadata:
        name: 'servicePort'
        label: 'Service Port'
        description: 'Service Port for TCP connection'
        type: 'string'
        immutable: false
        required: true
    containerPortTls:
      __metadata:
        name: 'containerPortTls'
        label: 'ContainerPortTls'
        description: 'TCP containerPortTls.'
        type: 'string'
        immutable: false
        required: true
    servicePortTls:
      __metadata:
        name: 'servicePortTls'
        label: 'TLS Service Port'
        description: 'Service Port for TLS connection'
        type: 'string'
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        name: 'pullPolicy'
        label: 'Image pull policy'
        description: 'Image pull policy for the docker images'
        type: 'string'
        immutable: false
        required: true
        options:
          - label: 'Always'
            value: 'Always'
          - label: 'Never'
            value: 'Never'
          - label: 'IfNotPresent'
            value: 'IfNotPresent'

  resources:
    requests:
      cpu:
        __metadata:
          label: 'CPU request'
          description: 'The requested CPU'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory request'
          description: 'The memory request'
          type: 'string'
          required: true
    limits:
      cpu:
        __metadata:
          label: 'CPU limit'
          description: 'The CPU limit'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory limit'
          description: 'The memory limit'
          type: 'string'
          required: true

  networkPolicy:
    smsProviderPort:
      __metadata:
        name: 'smsProviderPort'
        label: 'SMS Provider Port'
        description: 'HTTP port of the SMS Provider.'
        type: 'string'
        immutable: false
        required: true
    smsProviderPortTls:
      __metadata:
        name: 'smsProviderPortTls'
        label: 'SMS Provider TLS Port'
        description: 'HTTPS port of the SMS Provider.'
        type: 'string'
        immutable: false
        required: true
    disableNonSecurePort:
      __metadata:
        name: 'disableNonSecurePort'
        label: 'Disable Non Secure Port'
        description: 'Disable HTTP port. Only allow access to HTTPS port.'
        type: 'boolean'
        immutable: false
        required: true

  # Tenant configuration secret name
  tenantConfigSecretName:
    __metadata:
      name: 'tenantConfigSecretName'
      label: 'Tenant Config secret name'
      description: 'Tenant config secret name for sms deployment'
      type: 'string'
      immutable: false
      required: true

  redissonConfigSecretName:
    __metadata:
      name: 'redissonConfigSecretName'
      label: 'Redisson Config secret name'
      description: 'Redisson config secret name for sms high availability deployment'
      type: 'string'
      immutable: false
      required: false

  # Persistence options
  persistence:
    volume:
      useDynamicProvisioning:
        __metadata:
          name: 'useDynamicProvisioning'
          label: 'Use dynamic provisioning for persistent volume'
          description: 'Automatically provision the requested volume if set to true. Defaults to false'
          type: 'boolean'
          immutable: false
          required: true
      logs:
        enable:
          __metadata:
            name: 'enable'
            label: 'Enable Persistent Logs'
            description: 'Set to true to store logs in a persistent volume'
            type: 'boolean'
            immutable: false
            required: true
        name:
          __metadata:
            name: 'Name'
            label: 'Name of the persistent volume claim'
            description: 'By default a persistent volume claim will be created with this name'
            type: 'string'
            immutable: false
            required: false
        storageClassName:
          __metadata:
            name: 'storageClassName'
            label: 'Existing storage class name'
            description: 'Choose a specific storage class name. Defaults to the default storage class in the cluster'
            type: 'string'
            immutable: false
            required: false
        size:
          __metadata:
            name: 'size'
            label: 'Size of the volume claim'
            description: 'Defaults to 2Gi of storage request. Choose a different size of disk if needed'
            type: 'string'
            immutable: false
            required: false

      transReports:
        enable:
          __metadata:
            name: 'enable'
            label: 'Enable Transcription Report'
            description: 'Set to true to store reports in a persistent volume'
            type: 'boolean'
            immutable: false
            required: true
        name:
          __metadata:
            name: 'name'
            label: 'Name of the persistent volume claim'
            description: 'By default a persistent volume claim will be created with this name'
            type: 'string'
            immutable: false
            required: false
        storageClassName:
          __metadata:
            name: 'storageClassName'
            label: 'Existing storage class name'
            description: 'Choose a specific storage class name. Defaults to the default storage class in the cluster'
            type: 'string'
            immutable: false
            required: false
        size:
          __metadata:
            name: 'size'
            label: 'Size of the volume claim'
            description: 'Defaults to 2Gi of storage request. Choose a different size of disk if needed'
            type: 'string'
            immutable: false
            required: false
      usageReports:
        enable:
          __metadata:
            name: 'enable'
            label: 'Enable Usage report'
            description: 'Set to true to store Usage report in a persistent volume'
            type: 'boolean'
            immutable: false
            required: true
        name:
          __metadata:
            name: 'name'
            label: 'Name of the persistent volume claim'
            description: 'By default a persistent volume claim will be created with this name'
            type: 'string'
            immutable: false
            required: false
        storageClassName:
          __metadata:
            name: 'storageClassName'
            label: 'Existing storage class name'
            description: 'Choose a specific storage class name. Defaults to the default storage class in the cluster'
            type: 'string'
            immutable: false
            required: false
        size:
          __metadata:
            name: 'size'
            label: 'Size of the volume claim'
            description: 'Defaults to 2Gi of storage request. Choose a different size of disk if needed'
            type: 'string'
            immutable: false
            required: false

  # Readiness credentials
  secureReadinessInterface:
    __metadata:
      name: 'secureReadinessInterface'
      label: 'Secure readiness interface with admin credentials'
      description: 'Set to true to enable authentication for the readiness interface'
      type: 'boolean'
      immutable: false
      required: true
  readinessCredentialSecret:
    __metadata:
      name: 'readinessCredentialSecret'
      label: 'Readiness Credential secret'
      description: 'Kubernetes secret for admin username and password for Readiness interface. Required if secureReadinessInterface is set to true'
      type: 'string'
      immutable: false
      required: false

  readinessProbe:
    initialDelaySeconds:
      __metadata:
        name: 'initialDelaySeconds'
        label: 'Readiness Probe Initial Delay Seconds'
        description: 'This is the initialDelaySeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
    periodSeconds:
      __metadata:
        name: 'periodSeconds'
        label: 'Readiness Probe Period Seconds'
        description: 'This is the periodSeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
    timeoutSeconds:
      __metadata:
        name: 'timeoutSeconds'
        label: 'Readiness Probe Timeout Seconds'
        description: 'This is the timeoutSeconds defined for Readiness Probe'
        type: 'string'
        immutable: false
        required: false
  livenessProbe:
    initialDelaySeconds:
      __metadata:
        name: 'initialDelaySeconds'
        label: 'Liveness Probe Initial Delay Seconds'
        description: 'This is the initialDelaySeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false
    periodSeconds:
      __metadata:
        name: 'periodSeconds'
        label: 'Liveness Probe Period Seconds'
        description: 'This is the periodSeconds defined for liveness Probe'
        type: 'string'
        immutable: false
        required: false

  # Tracing and logging
  logging:
    level:
      __metadata:
        name: 'level'
        label: 'Log Level'
        description: 'This is the log level for the SIP Orchestrator'
        type: 'string'
        immutable: false
        required: true
    maxFiles:
      __metadata:
        name: 'maxFiles'
        label: 'Log Max Files'
        description: 'The maximum number of log files, trace files, and exception summary log files'
        type: 'string'
        immutable: false
        required: true
    maxFileSize:
      __metadata:
        name: 'maxFileSize'
        label: 'Log Max File Size'
        description: 'The maximum size in megabytes (MB) that a log file can reach before a new file is created'
        type: 'string'
        immutable: false
        required: true
    enableTranscriptionMessages:
      __metadata:
        name: 'enableTranscriptionMessages'
        label: 'Enable Transcription Messages'
        description: 'Set to true to enable transcription messages'
        type: 'boolean'
        immutable: false
        required: true
    latencyReportingThreshold:
      __metadata:
        name: 'latencyReportingThreshold'
        label: 'Latency Reporting Threshold'
        description: 'Threshold in milliseconds for reporting round-trip Conversation latency'
        type: 'string'
        immutable: false
        required: false
    hideCallerID:
      __metadata:
        name: 'hideCallerID'
        label: 'Mask caller ID information in the SMS Gateway message logs'
        description: 'To mask caller ID information in the SMS Gateway message logs. Set to true to mask.'
        type: 'boolean'
        immutable: false
        required: false

  # SMS provider caching server
  cache:
    redis:
      enable:
        __metadata:
          name: 'enable'
          label: 'Enable Redis caching server'
          description: 'Enable support for Redis caching server'
          type: 'boolean'
          immutable: false
          required: true

  # SMS provider proxy
  providerProxy:
    enable:
      __metadata:
        name: 'enable'
        label: 'Enable SMSProviderProxy'
        description: 'Enable proxy for SMS provider'
        type: 'boolean'
        immutable: false
        required: true
    host:
      __metadata:
        name: 'host'
        label: 'SMS Provider Proxy Host'
        description: 'Defines the host of the forward proxy server'
        type: 'string'
        immutable: false
        required: false
    port:
      __metadata:
        name: 'port'
        label: 'SMS Provider Proxy Port'
        description: 'Defines the port of the forward proxy server'
        type: 'string'
        immutable: false
        required: false
    username:
      __metadata:
        name: 'username'
        label: 'SMS Provider Proxy Username'
        description: 'User name for proxy authentication'
        type: 'string'
        immutable: false
        required: false
    passwordSecret:
      __metadata:
        name: 'passwordSecret'
        label: 'SMS Provider password secret name'
        description: 'SMS Provider Proxy Password for proxy authentication'
        type: 'string'
        immutable: false
        required: false

  # Watson Conversation proxy

  assistantProxy:
    enable:
      __metadata:
        name: 'enable'
        label: 'Enable Watson Assistant Proxy'
        description: 'Enable proxy for Watson Assistant'
        type: 'boolean'
        immutable: false
        required: true
    host:
      __metadata:
        name: 'host'
        label: 'Watson Assistant Proxy Host'
        description: 'Defines the host of the forward proxy server'
        type: 'string'
        immutable: false
        required: false
    port:
      __metadata:
        name: 'port'
        label: 'Watson Assistant Proxy Port'
        description: 'Defines the port of the forward proxy server'
        type: 'string'
        immutable: false
        required: false
    username:
      __metadata:
        name: 'username'
        label: 'Watson Assistant Proxy Username'
        description: 'User name for proxy authentication'
        type: 'string'
        immutable: false
        required: false
    passwordSecret:
      __metadata:
        name: 'passwordSecret'
        label: 'Watson Assistant password secret name'
        description: 'Watson Assistant Proxy Password for proxy authentication'
        type: 'string'
        immutable: false
        required: false

  # CloudantProxy

  cloudantProxy:
    enable:
      __metadata:
        name: 'enable'
        label: 'Enable Cloudant Proxy'
        description: 'Enable proxy for Cloudant'
        type: 'boolean'
        immutable: false
        required: true
    url:
      __metadata:
        name: 'url'
        label: 'Cloudant Proxy URL'
        description: 'Defines the url of the forward proxy server'
        type: 'string'
        immutable: false
        required: false
    username:
      __metadata:
        name: 'username'
        label: 'Cloudant Proxy Username'
        description: 'User name for proxy authentication'
        type: 'string'
        immutable: false
        required: false
    passwordSecret:
      __metadata:
        name: 'passwordSecret'
        label: 'Cloudant password secret name'
        description: 'Cloudant Proxy Password for proxy authentication'
        type: 'string'
        immutable: false
        required: false

  # Security to connect to WA / SMS provider
  ssl:
    enable:
      __metadata:
        name: 'enable'
        label: 'Enable SSL'
        description: 'Secure connections using SSL'
        type: 'boolean'
        immutable: false
        required: true
    keyStoreFileSecret:
      __metadata:
        name: 'keyStoreFileSecret'
        label: 'SSL key store secret'
        description: 'Kubernetes secret for the SSL certificate file'
        type: 'string'
        immutable: false
        required: false
    keyStorePassphraseSecret:
      __metadata:
        name: 'keyStorePassphraseSecret'
        label: 'SSL passphrase secret name'
        description: 'Kubernetes secret for the keystore file passphrase'
        type: 'string'
        immutable: false
        required: false
    keyFileType:
      __metadata:
        name: 'keyFileType'
        label: 'SSL file type'
        description: 'The file type of the keystore file. Valid values are JKS, JCEKS, and PKCS12'
        type: 'string'
        immutable: false
        required: false
        options:
          - label: 'JKS'
            value: 'JKS'
          - label: 'JCEKS'
            value: 'JCEKS'
          - label: 'PKCS12'
            value: 'PKCS12'
    trustStoreFileSecret:
      __metadata:
        name: 'trustStoreFileSecret'
        label: 'SSL trust store secret'
        description: 'Kubernetes secret for the SSL client certificate file'
        type: 'string'
        immutable: false
        required: false
    trustStorePassphraseSecret:
      __metadata:
        name: 'trustStorePassphraseSecret'
        label: 'SSL passphrase secret name'
        description: 'Kubernetes secret for the truststore file passphrase'
        type: 'string'
        immutable: false
        required: false
    trustFileType:
      __metadata:
        name: 'trustFileType'
        label: 'SSL file type'
        description: 'The file type of the trust store file. Valid values are JKS, JCEKS, and PKCS12'
        type: 'string'
        immutable: false
        required: false
        options:
          - label: 'JKS'
            value: 'JKS'
          - label: 'JCEKS'
            value: 'JCEKS'
          - label: 'PKCS12'
            value: 'PKCS12'

  # Reporting
  reporting:
    enable:
      __metadata:
        name: 'enable'
        label: 'Enable SSL'
        description: 'Secure connections using SSL'
        type: 'boolean'
        immutable: false
        required: true
    host:
      __metadata:
        name: 'host'
        label: 'Host name or IP address value included in the report'
        description: 'Required to enable reporting. Either the host name or IP address value that is included in the report'
        type: 'string'
        immutable: false
        required: false
    enableLimitOnReportingBackupFiles:
      __metadata:
        name: 'enableLimitOnReportingBackupFiles'
        label: 'Enable limit on number of backup files'
        description: 'Enable or disable a limit on the number of files that can be backed up for the reporting events'
        type: 'boolean'
        immutable: false
        required: false
    usageReportingMaxBackupFiles:
      __metadata:
        name: 'usageReportingMaxBackupFiles'
        label: 'Max Usage report files'
        description: 'When the enableLimitOnReportingBackupFiles is set to true, the default is set to 100 files for usage reports per tenant'
        type: 'string'
        immutable: false
        required: false
    transcriptionReportingMaxBackupFiles:
      __metadata:
        name: 'transcriptionReportingMaxBackupFiles'
        label: 'Max transcription report files'
        description: 'When the enableLimitOnReportingBackupFiles is set to true, the default is set to 1000 files for usage reports per tenant'
        type: 'string'
        immutable: false
        required: false
    maxEventsToBatch:
      __metadata:
        name: 'maxEventsToBatch'
        label: 'Max reporting events in one publish'
        description: 'The maximum reporting events that can be batched per tenant when publishing once.'
        type: 'string'
        immutable: false
        required: false

addon:
  __metadata:
    label: 'Addon'
    description: 'Addon configuration'
    hidden: true
  displayName:
    __metadata:
      label: 'Addon name'
      description: 'Addon name to use in the addons page'
      type: 'string'
      immutable: false
      required: true
  productID:
    __metadata:
      label: "Product ID"
      description: "Catalog ID of chart's product"
      type: "string"
      required: true
  serviceId:
    __metadata:
      label: 'The service id to be used in public urls'
      description: 'The service id to be used in public urls like tooling'
      type: 'string'
      immutable: false
      required: true
  version:
    __metadata:
      label: 'The version of the addon'
      description: 'The version of the addon that will be shown to users'
      type: 'string'
      immutable: false
      required: false
  longDescription:
    __metadata:
      label: 'Detailed explanation of the addon'
      description: 'Detailed explanation of the addon to be exposed in the Addon details page'
      type: 'string'
      immutable: false
      required: false
  shortDescription:
    __metadata:
      label: 'Short description of the addon'
      description: 'Short description (up to 140 characters) of the addon to be exposed in the addons grid page'
      type: 'string'
      immutable: false
      required: false
  productDocs:
    __metadata:
      label: 'Link to a page describing how to deploy the addon'
      description: 'Link to a page describing how to deploy the addon in ICP for Data'
      type: 'string'
      immutable: false
      required: false
  deployDocs:
    __metadata:
      label: 'Link to a page describing how to deploy the addon'
      description: 'Link to a page describing how to deploy the addon in ICP for Data'
      type: 'string'
      immutable: false
      required: false
  zenNamespace:
    __metadata:
      label: 'Zen namespace'
      description: 'The namespace where ICP for Data is running'
      type: 'string'
      immutable: false
      required: false
  icon:
    __metadata:
      label: 'Addon icon URL'
      description: "The url to the addon's icon"
      type: 'string'
      immutable: false
      required: false

test:
  __metadata:
    name: 'test'
    label: 'Test configuration'
    description: 'Parameters to configure the tests'
    hidden: true

  image:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry for test image"
        description: "Docker registry to pull the test image"
        type: "string"
        immutable: false
        required: true
    name:
      __metadata:
        name: 'test.name'
        label: 'Test docker image name'
        description: 'Docker image name for test image'
        type: 'string'
        immutable: false
        required: true
    tag:
      __metadata:
        name: 'test.tag'
        label: 'test image tag'
        description: 'Test docker image tag'
        type: 'string'
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        name: 'pullPolicy'
        label: 'Image pull policy'
        description: 'Image pull policy for the docker images'
        type: 'string'
        immutable: false
        required: true
        options:
          - label: 'Always'
            value: 'Always'
          - label: 'Never'
            value: 'Never'
          - label: 'IfNotPresent'
            value: 'IfNotPresent'

dvt:
  __metadata:
    name: 'dvt'
    label: 'DVT configuration'
    description: 'Parameters to configure the Deployment Verification Tests'
    hidden: true

  image:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry for dvt image"
        description: "Docker registry to pull the dvt image"
        type: "string"
        immutable: false
        required: true
    name:
      __metadata:
        name: 'dvt.name'
        label: 'DVT docker image name'
        description: 'Docker image name for dvt image'
        type: 'string'
        immutable: false
        required: true
    tag:
      __metadata:
        name: 'dvt.tag'
        label: 'dvt image tag'
        description: 'DVT docker image tag'
        type: 'string'
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        name: 'pullPolicy'
        label: 'Image pull policy'
        description: 'Image pull policy for the docker images'
        type: 'string'
        immutable: false
        required: true
        options:
          - label: 'Always'
            value: 'Always'
          - label: 'Never'
            value: 'Never'
          - label: 'IfNotPresent'
            value: 'IfNotPresent'
