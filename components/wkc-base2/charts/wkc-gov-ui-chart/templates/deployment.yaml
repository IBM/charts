---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "wkc-gov-ui-chart.fullname" . }}
  labels:
    app: {{ template "wkc-gov-ui-chart.fullname" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "wkc-gov-ui-chart.fullname" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.minReplicas }}
  selector:
    matchLabels:
      app: {{ template "wkc-gov-ui-chart.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "wkc-gov-ui-chart.fullname" . }}
        date: "date"
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        icpdsupport/app: "ui"
        app.kubernetes.io/name: {{ template "wkc-gov-ui-chart.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        helm.sh/chart: {{ .Chart.Name }}
        {{ .Values.global.serviceabilityLabelName }}: {{ .Values.global.serviceabilityLabelValue }}
      annotations:
        {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | trim | indent 8 }}
        {{- end }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
      {{- if .Values.securityContext.runAsUser }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      {{- if eq .Values.global.deploymentTarget "icp4data" }}
      volumes:
        - name: certificate
          secret:
            secretName: ca-certificate-chain-trust
      {{- end }}
      containers:
      - name: {{ template "wkc-gov-ui-chart.fullname" . }}
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- if eq .Values.global.deploymentTarget "icp4data" }}
        volumeMounts:
          - name: certificate
            mountPath: /etc/certificate
        {{- end }}
        ports:
        - containerPort: {{ .Values.ports.targetPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: {{ .Values.environment.BM_APP_VERSION_ENDPOINT }}
            port: {{ .Values.ports.targetPort }}
            scheme: "HTTPS"
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.environment.BM_APP_VERSION_ENDPOINT }}
            port: {{ .Values.ports.targetPort }}
            scheme: "HTTPS"
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        env:
        - name: "BM_APP_NAME"
          value: {{ .Values.environment.BM_APP_NAME }}
        - name: "BM_APP_HOST"
          value: {{ .Values.environment.BM_APP_HOST }}
        - name: "DOMAIN"
          value: {{ .Values.environment.DOMAIN }}
        - name: "BM_APP_VERSION"
          value: "{{ .Values.image.tag }}"
        - name: "BM_APP_VERSION_ENDPOINT"
          value: {{ .Values.environment.BM_APP_VERSION_ENDPOINT }}
        {{- if .Values.environment.wdpHostDomain }}
        - name: "CUSTOM_DOMAIN"
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.environment.wdpHostDomain.configMapName }}
              key: {{ .Values.environment.wdpHostDomain.hostKey }}
        - name: "ZEN_DOMAIN"
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.environment.wdpHostDomain.configMapName }}
              key: {{ .Values.environment.wdpHostDomain.icp4dHostKey }}
        {{- end }}
        - name: WDP_SERVICE_ID_CREDENTIAL
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id-credentials
              optional: true
        - name: "{{ .Values.environment.config__session__secret.name }}"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.environment.config__session__secret.secret }}"
              key: "{{ .Values.environment.config__session__secret.key }}"
              optional: true
        - name: "{{ .Values.environment.config__composeRedis__url.name }}"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.environment.config__composeRedis__url.secret }}"
              key: "{{ .Values.environment.config__composeRedis__url.key }}"
              optional: true
        - name: "{{ .Values.environment.config__composeRedis__cryptoPassword.name }}"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.environment.config__composeRedis__cryptoPassword.secret }}"
              key: "{{ .Values.environment.config__composeRedis__cryptoPassword.key }}"
              optional: true
        - name: "{{ .Values.environment.auth__crypto__password.name }}"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.environment.auth__crypto__password.secret }}"
              key: "{{ .Values.environment.auth__crypto__password.key }}"
              optional: true
        {{- if .Values.environment.config__composeRedis__tlsServer }}
        - name: "{{ .Values.environment.config__composeRedis__tlsServer.name }}"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.environment.config__composeRedis__tlsServer.secret }}"
              key: "{{ .Values.environment.config__composeRedis__tlsServer.key }}"
              optional: true
        {{- end }}
        {{- if .Values.environment.config__composeRedis__certificate }}
        - name: "{{ .Values.environment.config__composeRedis__certificate.name }}"
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.environment.config__composeRedis__certificate.secret }}"
              key: "{{ .Values.environment.config__composeRedis__certificate.key }}"
              optional: true
        {{- end }}
        {{- if eq .Values.global.deploymentTarget "icp4data" }}
        - name: NODE_EXTRA_CA_CERTS
          value: {{ .Values.environment.NODE_EXTRA_CA_CERTS }}
        {{- end }}
        - name: PRODUCT_NAME
        {{- if .Values.global.ibmProduct }}
          value: {{ .Values.global.ibmProduct | quote }}
        {{- else }}
          value: {{ .Values.environment.PRODUCT_NAME | default "" | quote }}
        {{- end }}
        - name: "DEPLOY_TARGET"
          value: {{ .Values.environment.DEPLOY_TARGET }}
        - name: "DEPLOYMENT_TARGET"
          value: {{ .Values.environment.DEPLOYMENT_TARGET }}
        - name: "COMPONENT_ID"
          value: {{ .Values.environment.COMPONENT_ID }}
        - name: "STAGE"
          value: {{ .Values.environment.STAGE }}
        - name: "NODE_ENV"
          value: {{ .Values.environment.NODE_ENV }}
        - name: "NODE_MODULES_CACHE"
          value: "{{ .Values.environment.NODE_MODULES_CACHE }}"
        - name: "PRODUCTION"
          value: "{{ .Values.environment.PRODUCTION }}"
        - name: "config__session__key"
          value: {{ .Values.environment.config__session__key }}
        - name: NODE_OPTIONS
          value: "--max-http-header-size=32768"
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        {{- if .Values.securityContext.runAsUser }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
        {{- end }}
          capabilities:
            drop:
            - ALL
    {{- if .Values.repository.secret.name }}
      imagePullSecrets:
      - name: {{ .Values.repository.secret.name }}
    {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le