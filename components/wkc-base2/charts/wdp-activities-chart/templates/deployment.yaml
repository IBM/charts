---
{{- include "sch.config.init" (list . "wdp-activities.sch.chart.config.values") -}}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "wdp-activities.fullname" . }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  replicas: {{ .Values.minReplicas }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "" (dict "icpdsupport/app" "apis" .Values.global.serviceabilityLabelName .Values.global.serviceabilityLabelValue)) | indent 8 }}
      annotations:
        {{- if .Values.global.podAnnotations }}
{{ toYaml .Values.global.podAnnotations | trim | indent 8 }}
        {{- end }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      containers:
      - name: {{ template "wdp-activities.fullname" . }}
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.global.installCerts }}
        volumeMounts:
        - name: wdp-certs
          mountPath: "/etc/wdp_certs"
          readOnly: true
{{- end }}
        ports:
        - containerPort: {{ .Values.ports.targetPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: "/v2/data_flows/version"
            port: {{ .Values.ports.targetPort }}
            scheme: "HTTPS"
            httpHeaders:
            - name: Host
              value: $(GATEWAY_URL)
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: "/v2/data_flows/version"
            port: {{ .Values.ports.targetPort }}
            scheme: "HTTPS"
            httpHeaders:
            - name: Host
              value: $(GATEWAY_URL)
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        env:
        - name: ALLOWED_SERVICE_IDS
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id
        - name: ALLOWED_VERSION_INCDEP
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id
        - name: CLOUDAMQP_URL
          valueFrom:
            secretKeyRef:
              name: rabbitmq-url
              key: rabbitmq-url.txt
        - name: CLOUDANT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wdp-cloudant-creds
              key: password
        - name: CLOUDANT_URL
          valueFrom:
            secretKeyRef:
              name: wdp-cloudant-url
              key: cloudant-url.txt
        - name: CLOUDANT_USER
          valueFrom:
            secretKeyRef:
              name: wdp-cloudant-creds
              key: username
        - name: COMPONENT_ID
          value: {{ .Values.environment.componentId }}
        - name: ENABLE_DEBUG
          value: {{ .Values.environment.enableDebug }}
        - name: ENGINE_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: wdp-config
              key: host-url
        - name: ENVIRONMENT_NAME
          value: {{ .Values.global.deploymentTarget }}
        - name: GATEWAY_URL
          valueFrom:
            configMapKeyRef:
              name: wdp-config
              key: host-url
        - name: IAM_URL
          value: {{ .Values.environment.iamUrl }}
        - name: ICP4D_URL
          valueFrom:
            configMapKeyRef:
              name: wdp-config
              key: icp4d-host-url
        - name: IGNORE_ENTITLEMENT_CHECK
          value: {{ .Values.environment.ignoreEntitlementCheck }}
        - name: PRODUCT_NAME
          value: {{ .Values.global.ibmProduct }}
        - name: PROFILING_SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-url
              key: redis-url.txt
        - name: SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id-credentials
        - name: TRANSFORM_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: wdp-config
              key: host-url
        - name: TRUST_ALL_SSL_CERT
          value: {{ .Values.environment.trustAllSsl }}
        - name: WDP_TEMP_SEC_KEY
          valueFrom:
            secretKeyRef:
              name: wdp-crypto-secret
              key: wdp-temp-sec-key
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
{{- if .Values.global.installCerts }}
      volumes:
      - name: wdp-certs
        projected:
          sources:
          - secret:
              name: internal-nginx-svc-tls
              items:
              - key: certificate.pem
                path: internal-nginx.cert.pem
              optional: true
          - secret:
              name: wdp-cloudant-cert
              items:
              - key: ca.crt.pem
                path: cloudant.ca.cert.pem
              optional: true
          - secret:
              name: rabbitmq-ha-cert
              items:
              - key: cert.pem
                path: rabbitmq.cert.pem
              optional: true
{{- end }}
{{- if .Values.repository.secret.name }}
      imagePullSecrets:
      - name: {{ .Values.repository.secret.name }}
{{- end }}
