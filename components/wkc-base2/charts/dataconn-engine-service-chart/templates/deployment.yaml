---
{{ include "sch.config.init" (list . "engine-service.sch.chart.config.values") }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "dataconn-engine-service.fullname" . }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
    app: {{ include "sch.names.appName" (list .)  | quote}}
    chart: {{ .Chart.Name | quote }}
    heritage: {{ .Release.Service | quote }}
    {{- if .Values.global.podLabels }}
{{ tpl (toYaml .Values.global.podLabels) . | trim | indent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.minReplicas }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "sch.names.appName" (list .)  | quote}}
        date: "date"
        chart: {{ .Chart.Name | quote }}
        heritage: {{ .Release.Service | quote }}
        {{- if .Values.global.podLabels }}
{{ tpl (toYaml .Values.global.podLabels) . | trim | indent 8 }}
        {{- end }}
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
      annotations:
        {{- if .Values.global.podAnnotations }}
{{ tpl (toYaml .Values.global.podAnnotations) . | trim | indent 8 }}
        {{- end }}
    spec:
      {{- if ne .Values.global.deploymentTarget "cloud" }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      {{- end }}
      containers:
      - name: {{ template "dataconn-engine-service.fullname" . }}
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.image.repository }}:{{ .Values.image.tag }}
{{- if ne .Values.global.deploymentTarget "cloud" }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.global.installCerts }}
        volumeMounts:
        - name: wdp-certs
          mountPath: "/etc/wdp_certs"
          readOnly: true
{{- end }}
{{- end }}
        ports:
        - containerPort: {{ .Values.ports.targetPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: "/v2/dataconn/engine/version"
            port: {{ .Values.ports.targetPort }}
            scheme: HTTPS
            {{- if .Values.host }}
            httpHeaders:
            - name: Host
              value: {{ .Values.host }}
            {{- end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: "/v2/dataconn/engine/version"
            port: {{ .Values.ports.targetPort }}
            scheme: "HTTPS"
            {{- if .Values.host }}
            httpHeaders:
            - name: Host
              value: {{ .Values.host }}
            {{- end }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        env:
        - name: BATCH_OPTIMIZATION_ENABLED
          value: "false"
        - name: BATCH_WORKLOAD_POLICY
          value: WEIGHT:BaseFlow=2,ProfilingFlow=1;QUEUE:HighConcurrencyLinkedQueue;RETRY:100
        - name: BATCH_WORKLOAD_POLICY_ENABLED
          value: "true"
        - name: COMPONENT_ID
          value: WDP-Engine
        - name: ENABLE_DEBUG
          value: {{ .Values.environment.enableDebug | quote }}
        - name: IAM_TOKEN_ENDPOINT
          value: {{ .Values.environment.iamTokenEndpoint }}
        - name: OPERATION_METRICS_ENABLED
          value: {{ .Values.environment.operationMetricsEnabled | quote }}
        - name: QUEUE_PERSISTENCE_ENABLED
          value: {{ .Values.environment.queuePersistenceEnabled | quote }}
        - name: SAVE_LOG
          value: {{ .Values.environment.saveLog | quote}}
        - name: SAVE_R_CODE
          value: {{ .Values.environment.saveRCode | quote}}
{{- if eq .Values.global.deploymentTarget "cloud" }}
{{- if .Values.environment.allowedServiceIds.VaultMultiKeys }}
        - name: ALLOWED_SERVICE_IDS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.allowedServiceIds.secret }}
              key:  {{ .Values.environment.allowedServiceIds.key }}
{{- end }}
        - name: DEPLOY_TARGET
          value: armada
        - name: ENABLE_NEWRELIC
          value: "true"
        - name: ENVIRONMENT_NAME
          value: {{ .Values.environment.environmentName }}
        - name: ETCD_V3_DEPLOYMENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.etcdV3DeploymentId.secret }}
              key: {{ .Values.environment.etcdV3DeploymentId.key }}
        - name: ETCD_V3_SSL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.etcdV3Ssl.secret }}
              key: {{ .Values.environment.etcdV3Ssl.key }}
        - name: ETCD_V3_URLS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.etcdV3Urls.secret }}
              key: {{ .Values.environment.etcdV3Urls.key }}
        - name: GATEWAY_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.gatewayUrl.secret }}
              key: {{ .Values.environment.gatewayUrl.key }}
        - name: HUMMINGBIRD_APIKEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.hummingbirdApiKey.secret }}
              key: {{ .Values.environment.hummingbirdApiKey.key }}
        - name: HUMMINGBIRD_INSTANCE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.hummingbirdInstanceId.secret }}
              key: {{ .Values.environment.hummingbirdInstanceId.key }}
        {{- if .Values.environment.hummingbirdLogFileCheckInterval }}
        - name: HUMMINGBIRD_LOG_FILE_CHECK_INTERVAL
          value: {{ .Values.environment.hummingbirdLogFileCheckInterval | quote }}
        {{- end }}
        - name: HUMMINGBIRD_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.hummingbirdUrl.secret }}
              key: {{ .Values.environment.hummingbirdUrl.key }}
        - name: IAM_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.iamUrl.secret }}
              key: {{ .Values.environment.iamUrl.key }}
        - name: INSTANCE_COUNT
          value: {{ .Values.environment.instanceCount | quote }}
        - name: KMS_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.kmsApiKey.secret }}
              key: {{ .Values.environment.kmsApiKey.key }}
        {{ if .Values.environment.kmsIamUrl.secret }}
        - name: KMS_IAM_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.kmsIamUrl.secret }}
              key: {{ .Values.environment.kmsIamUrl.key }}
        {{- end }}
        - name: KMS_INSTANCE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.kmsInstanceId.secret }}
              key: {{ .Values.environment.kmsInstanceId.key }}
        - name: KMS_ROOT_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.kmsRootKeyId.secret }}
              key: {{ .Values.environment.kmsRootKeyId.key }}
        - name: KMS_SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.kmsServiceId.secret }}
              key: {{ .Values.environment.kmsServiceId.key }}
        - name: KMS_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.kmsUrl.secret }}
              key: {{ .Values.environment.kmsUrl.key }}
        - name: LOGDNA_LOG_SOURCE_CRN
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.logDnaLogSourceCrn.secret }}
              key: {{ .Values.environment.logDnaLogSourceCrn.key }}
        - name: LOGDNA_SAVE_SERVICE_COPY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.logDnaSaveServiceCopy.secret }}
              key: {{ .Values.environment.logDnaSaveServiceCopy.key }}
        - name: MONITORING_SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.monitoringServiceId.secret }}
              key: {{ .Values.environment.monitoringServiceId.key }}
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.newRelicLicenseKey.secret }}
              key: {{ .Values.environment.newRelicLicenseKey.key }}
        - name: RABBITMQ_PRIMARY_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.rabbitMqPrimaryUrl.secret }}
              key: {{ .Values.environment.rabbitMqPrimaryUrl.key }}
        - name: RABBITMQ_SSL
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.rabbitMqSsl.secret }}
              key: {{ .Values.environment.rabbitMqSsl.key }}
        - name: SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.serviceApiKey.secret }}
              key: {{ .Values.environment.serviceApiKey.key }}
        - name: SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.environment.serviceId.secret }}
              key: {{ .Values.environment.serviceId.key }}
        - name: SPARK_CAPACITY_PER_NODE
          value: {{ .Values.environment.sparkCapacityPerNode | quote }}
        - name: SPARK_DRIVER_MEMORY
          value: {{ .Values.environment.sparkDriverMemory | quote }}
        - name: SPARK_ENGINE_TYPE
          value: {{ .Values.environment.sparkEngineType }}
        - name: SPARK_MAX_CORES
          value: {{ .Values.environment.sparkMaxCores }}
{{- else }}
        - name: ALLOWED_SERVICE_IDS
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id
        - name: CLUSTER_APP_HOST
          value: {{ .Values.environment.clusterAppHost }}
        - name: CLUSTER_APP_KUBERNETES
          value: {{ .Values.environment.clusterAppKubernetes | quote }}
        - name: CLUSTER_APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wdp-crypto-secret
              key: wdp-spark-access-password
        - name: CLUSTER_APP_PORT
          value: {{ .Values.environment.clusterAppPort | quote }}
        - name: CLUSTER_APP_USER
          value: {{ .Values.environment.clusterAppUser }}
        - name: ENVIRONMENT_NAME
          value: {{ .Values.global.deploymentTarget }}
        - name: GATEWAY_URL
          valueFrom:
            configMapKeyRef:
              name: wdp-config
              key: host-url
        - name: ICP4D_URL
          valueFrom:
            configMapKeyRef:
              name: wdp-config
              key: icp4d-host-url
        - name: MONITORING_SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id
        - name: productName
          value: {{ .Values.global.ibmProduct }}
        - name: RABBITMQ_PRIMARY_URL
          valueFrom:
            secretKeyRef:
              name: rabbitmq-url
              key: rabbitmq-url.txt
        - name: REDIS_CERT
          valueFrom:
            secretKeyRef:
              name: redis-ha-cert
              key: cacertb64.pem
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-ha
              key: redis-url-ssl
        - name: SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id-credentials
        - name: SERVICE_ID
          valueFrom:
            secretKeyRef:
              name: wdp-service-id
              key: service-id-credentials
        - name: SPARK_CAPACITY_PER_NODE
          value: {{ .Values.environment.sparkCapacityPerNode | quote }}
        - name: SPARK_DRIVER_MEMORY
          value: {{ .Values.environment.sparkDriverMemory }}
        - name: SPARK_ENGINE_TYPE
          value: {{ .Values.environment.sparkEngineType }}
        - name: SPARK_MAX_CORES
          value: {{ .Values.environment.sparkMaxCores | quote }}
        - name: TRUST_ALL_SSL_CERT
          value: {{ .Values.environment.trustAllSsl | quote }}
        - name: WDP_TEMP_SEC_KEY
          valueFrom:
            secretKeyRef:
              name: wdp-crypto-secret
              key: wdp-temp-sec-key
{{- end }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
{{- if ne .Values.global.deploymentTarget "cloud" }}
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      {{- if .Values.global.installCerts }}
      - name: wdp-certs
        projected:
          sources:
          - secret:
              name: internal-nginx-svc-tls
              items:
              - key: certificate.pem
                path: internal-nginx.cert.pem
              optional: true
          - secret:
              name: rabbitmq-ha-cert
              items:
              - key: cert.pem
                path: rabbitmq.cert.pem
              optional: true
      {{- end }}
{{- end }}
{{- if .Values.repository.secret.name }}
      imagePullSecrets:
      - name: {{ .Values.repository.secret.name }}
{{- end }}
