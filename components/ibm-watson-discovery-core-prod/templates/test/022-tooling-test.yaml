{{- include "sch.config.init" (list . "discovery.sch.chart.config.values") -}}
{{- $compTestName := .sch.chart.components.toolingTest.name -}}
apiVersion: v1
kind: Pod
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compTestName) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compTestName) | indent 4 }}
  annotations:
    "helm.sh/hook": test-success
spec:
  activeDeadlineSeconds: {{ .Values.core.test.activeDeadlineSeconds }}
  serviceAccountName: {{ include "discovery.admin.serviceAccount" . }}
  hostNetwork: false
  hostPID: false
  hostIPC: false
{{ include "sch.security.securityContext" (list . .sch.chart.restrictedPodSecurityContext) | indent 2 }}
  affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 4 }}
  restartPolicy: Never
  containers:
  - name: {{ include "sch.names.fullCompName" (list . $compTestName) }}
    image: {{ .Values.global.dockerRegistryPrefix }}/
      {{- .Values.tooling.image.name }}:
      {{- .Values.tooling.image.tag }}
{{ include "sch.security.securityContext" (list . .sch.chart.restrictedSecurityContext) | indent 4 }}
    resources:
{{ toYaml .Values.tooling.resources | indent 6 }}
    command:
    - "bash"
    - "-c"
    - |
      while true; do
        echo "Waiting for Tooling startup"
        curl -k --fail https://{{ include "sch.names.fullCompName" (list . "tooling") }}:4000/health
        if [ $? -eq 0 ]; then
          echo "Tooling is ready"
          break
        fi
      done
      echo "OK"
