apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: is-en-conductor
  labels:
    app: iis-en-cond
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: iis-en-cond
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  serviceName: en-cond
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: iis-en-cond
  template:
    metadata:
      labels:
        app: iis-en-cond
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        app.kubernetes.io/name: iis-en-cond
        helm.sh/chart: {{ .Chart.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        istier: conductor
        icpdsupport/podSelector: "Engine"
        icpdsupport/addOnKey: "ugi"
        icpdsupport/app: "apis"
        {{ .Values.global.serviceabilityLabelName }}: {{ .Values.global.serviceabilityLabelValue }}
      annotations:
      {{- include "product-metering" . | indent 8 }}
        checksum/config: {{ include (print $.Template.BasePath "/iis-server-ug-configMap.yaml") . | sha256sum }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            preference:
              matchExpressions:
              - key: wkc-privileged
                operator: In
                values:
                - {{ .Values.nodeLabel }}
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.archx86_64 }}
                - {{ .Values.archppc64le }}
        podAffinity:
         preferredDuringSchedulingIgnoredDuringExecution:
         - weight: 100
           podAffinityTerm:
             labelSelector:
               matchExpressions:
               - key: istier
                 operator: NotIn
                 values:
                 - xmeta
                 - services
                 - compute
             topologyKey: kubernetes.io/hostname
      initContainers:
      - name: load-data
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.iis.engine.repository }}:{{ .Values.release.image.iis.engine.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        resources:
          requests:
            memory: "{{ .Values.engineResources.initContainer.requests.memory }}"
            cpu: "{{ .Values.engineResources.initContainer.requests.cpu }}"
          limits:
            memory: "{{ .Values.engineResources.initContainer.limits.memory }}"
            cpu: "{{ .Values.engineResources.initContainer.limits.cpu }}"
        securityContext:
          {{- if .Values.release.image.iis.engine.runAsUser }}
          runAsUser: {{ .Values.release.image.iis.engine.runAsUser }}
          {{- end }}
          {{- if .Values.release.image.iis.engine.fsGroup }}
          fsGroup: {{ .Values.release.image.iis.engine.fsGroup }}
          {{- end }}
          privileged: false
          allowPrivilegeEscalation: true
          runAsNonRoot: true
          readOnlyRootFilesystem: false
        env:
        - name: DEDICATED_ENGINE_VOLPATH
          value: "/mnt/dedicated_vol/Engine"
        - name: IA_CUSTOM_DATA_CLASSES
          value: "/opt/ia/custom"
        - name: HOSTNAME
          value: "is-en-conductor-0"
        command: ['/bin/bash', '-c', '--']
        args: [ "BKP_FILE=\"engine-services.tar.gz\";
                 installdir=/opt/IBM/InformationServer;
                 if [[  ! -d \"${DEDICATED_ENGINE_VOLPATH}/${HOSTNAME}/Server/Projects\" ]];
                 then
                 echo \"${DEDICATED_ENGINE_VOLPATH}/${HOSTNAME}/Server/Projects does not exist .. creating \";
                 ${installdir}/initScripts/initEngineVolumeData.sh;
                 fi;"
              ]
        volumeMounts:
        - name: engine-dedicated-volume
          mountPath: /mnt/dedicated_vol/Engine
      - name: wait-services
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.wkcinitcontainer.repository }}:{{ .Values.release.image.wkcinitcontainer.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: {{ .Values.release.image.wkcinitcontainer.requests.cpu }}
            memory: {{ .Values.release.image.wkcinitcontainer.requests.memory }}
          limits:
            cpu: {{ .Values.release.image.wkcinitcontainer.limits.cpu }}
            memory: {{ .Values.release.image.wkcinitcontainer.limits.memory }}
        command: ['sh', '-c', '--']
        args: [ "iis_status=1;
                 while [ $iis_status != 0  ];
                 do sleep 30;
                 iis_status=`nc is-servicesdocker 9446 < /dev/null; echo $?`;
                 done;"
              ]
      containers:
       - name: iis-en-conductor
         command: [ "/bin/bash", "-c", "--" ]
         args: [ "/opt/ug-setup-engine.sh;
                  while true; do sleep 30; done;"
                ]
         image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.iis.engine.repository }}:{{ .Values.release.image.iis.engine.tag }}
         imagePullPolicy: {{ .Values.release.image.pullPolicy }}
         lifecycle:
           preStop:
             exec:
               command: ["/bin/sh","-c","/opt/ds-pre-stop.sh"]
         resources:
            requests:
               memory: "{{ .Values.engineResources.requests.memory }}"
               cpu: "{{ .Values.engineResources.requests.cpu }}"
            limits:
               memory: "{{ .Values.engineResources.limits.memory }}"
               cpu: "{{ .Values.engineResources.limits.cpu }}"
         securityContext:
           {{- if .Values.release.image.iis.engine.runAsUser }}
           runAsUser: {{ .Values.release.image.iis.engine.runAsUser }}
           {{- end }}
           {{- if .Values.release.image.iis.engine.fsGroup }}
           fsGroup: {{ .Values.release.image.iis.engine.fsGroup }}
           {{- end }}
           privileged: false
           allowPrivilegeEscalation: true
           runAsNonRoot: true
           readOnlyRootFilesystem: false
         env:
         - name: MY_NODE_NAME
           valueFrom:
             fieldRef:
               fieldPath: spec.nodeName
         - name: MY_POD_NAME
           valueFrom:
              fieldRef:
                fieldPath: metadata.name
         - name: MY_POD_NAMESPACE
           valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
         - name: ISADMIN_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: isadmin_password
         - name: XMETA_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: xmeta_password
         - name: XMETASR_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: xmetasr_password
         - name: DSADM_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: dsadm_password
         - name: DB2INST1_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: db2inst1_password
         - name: DSODB_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: dsodb_password
         - name: IAUSER_PASSWORD
           valueFrom:
             secretKeyRef:
               name: iis-usr-secrets
               key: iauser_password
         - name: DEDICATED_ENGINE_VOLPATH
           value: "/mnt/dedicated_vol/Engine"
         - name: IA_CUSTOM_DATA_CLASSES
           value: "/opt/ia/custom"
         - name: QSM_DISABLE_DISTRIBUTE_COMPONENT
           value: {{ .Values.release.image.iis.engine.qsmDisableDistributeComponent | quote }}
         livenessProbe:
            exec:
             command:
             - /bin/bash
             - -c
             - /opt/IBM/InformationServer/initScripts/probe.sh
            initialDelaySeconds: 900
            periodSeconds: 120
            failureThreshold: 3
         #readinessProbe:
            #exec:
             #command:
             #- /bin/bash
             #- -c
             #- /opt/IBM/InformationServer/initScripts/probe.sh
             #initialDelaySeconds: 900
             #periodSeconds: 120
             #failureThreshold: 3
         volumeMounts:
         - mountPath: /user-home
           name: user-home-mount
         - mountPath: "/mnt/dedicated_vol/Engine"
           name: engine-dedicated-volume
         - name: config-postscript
           mountPath: /opt/ug-setup-engine.sh
           subPath: ug-setup-engine.sh
         - name: config-postscript
           mountPath: /opt/ds-pre-stop.sh
           subPath: ds-pre-stop.sh
         - name: config-postscript
           mountPath: /opt/iadb-db2-connector-imam-import-params.xml
           subPath: iadb-db2-connector-imam-import-params.xml
         - name: config-postscript
           mountPath: /opt/UGDefaultWorkspace.xml
           subPath: UGDefaultWorkspace.xml
         - name: config-postscript
           mountPath: /opt/useAutomaticConfiguration.json
           subPath: useAutomaticConfiguration.json
         - name: config-postscript
           mountPath: /opt/PIIWorkspace.xml
           subPath: PIIWorkspace.xml
         - name: config-postscript
           mountPath: /opt/PIIDQConfiguration.json
           subPath: PIIDQConfiguration.json
         - name: config-postscript
           mountPath: /opt/PIICAConfiguration.json
           subPath: PIICAConfiguration.json
         - name: config-postscript
           mountPath: /opt/DataLakeWorkspace.xml
           subPath: DataLakeWorkspace.xml
         - name: config-postscript
           mountPath: /opt/DataLakeDQConfiguration.json
           subPath: DataLakeDQConfiguration.json
         - name: config-postscript
           mountPath: /opt/DataLakeCAConfiguration.json
           subPath: DataLakeCAConfiguration.json
         - name: config-postscript
           mountPath: /opt/InDepthAnalysisWorkspace.xml
           subPath: InDepthAnalysisWorkspace.xml
         - name: config-postscript
           mountPath: /opt/InDepthAnalysisDQConfiguration.json
           subPath: InDepthAnalysisDQConfiguration.json
         - name: config-postscript
           mountPath: /opt/InDepthAnalysisCAConfiguration.json
           subPath: InDepthAnalysisCAConfiguration.json
         - mountPath: "/sampledata"
           name: sampledata-pv-volume
         - name: logs-volume
           mountPath: /opt/IBM/InformationServer/ASBNode/logs
         - mountPath: /home/dsadm
           name: engine-dedicated-volume
           subPath: is-en-conductor-0/EngineClients/db2_client/dsadm
         - mountPath: /opt/ia/custom
           name: engine-dedicated-volume
           subPath: is-en-conductor-0/ia/custom
      {{- if .Values.release.image.iis.engine.serviceAccountName }}
      serviceAccountName: {{ .Values.release.image.iis.engine.serviceAccountName }}
      {{- end }}
      {{- include "image-secret" . | indent 6 }}
      volumes:
       - name: engine-dedicated-volume
         persistentVolumeClaim:
         {{- if .Values.engineDedicatedVolumeInfo.volumeClaim.existingClaimName }}
           claimName: {{ .Values.engineDedicatedVolumeInfo.volumeClaim.existingClaimName }}
         {{- else }}
           claimName: {{ .Release.Name }}-{{ .Values.engineDedicatedVolumeInfo.volumeClaim.name }}
         {{- end }}
       - name: config-postscript
         configMap:
            name: iis-server
            defaultMode: 0755
       - name: logs-volume
         emptyDir: {}
       - name: sampledata-pv-volume
         persistentVolumeClaim:
          {{- if .Values.sampleData.volumeClaim.existingClaimName }}
            claimName: {{ .Values.sampleData.volumeClaim.existingClaimName }}
          {{- else }}
            claimName: {{ .Release.Name }}-{{ .Values.sampleData.volumeClaim.name }}
          {{- end }}
       {{- include "user-home-pvc" .  | indent 7 }}
