#Licensed Materials - Property of IBM
# 5724-Q36
# Copyright IBM Corp. 2017, 2018
# US Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
---
apiVersion: batch/v1
kind: Job
metadata:
  name: solr-configset-collection
  namespace: "{{ .Release.Namespace }}"
  labels:
    app: solr-configset-collection
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: solr-configset-collection
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      labels:
        app: solr-configset-collection
        chart: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/name: solr-configset-collection
        helm.sh/chart: {{ .Chart.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        helm.sh/hook: test-success
      {{- include "product-metering" . | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      initContainers:
      - name: solr-wait
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.wkcinitcontainer.repository }}:{{ .Values.release.image.wkcinitcontainer.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        resources:
          requests:
            memory: "{{ .Values.release.image.wkcinitcontainer.requests.memory }}"
            cpu: "{{ .Values.release.image.wkcinitcontainer.requests.cpu }}"
          limits:
            memory: "{{ .Values.release.image.wkcinitcontainer.limits.memory }}"
            cpu: "{{ .Values.release.image.wkcinitcontainer.limits.cpu }}"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        command: ['sh', '-c', '--']
        args: [ "solr_status=1;
                 while [ $solr_status != 0  ];
                 do sleep 2;
                 solr_status=`nc solr 8983 < /dev/null; echo $?`;
                 done;"
              ]
      - name: copy-configsets
        command: [ "sh", "-c", "--" ]
        args: [ "cp -rpf /tmp/configsets /configsets;"
              ]
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.wkcugconfig.repository }}:{{ .Values.release.image.wkcugconfig.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        resources:
          requests:
            memory: "{{ .Values.release.image.wkcugconfig.requests.memory }}"
            cpu: "{{ .Values.release.image.wkcugconfig.requests.cpu }}"
          limits:
            memory: "{{ .Values.release.image.wkcugconfig.limits.memory }}"
            cpu: "{{ .Values.release.image.wkcugconfig.limits.cpu }}"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /configsets
          name: configsets-tmpdir
      containers:
      - name: solr-init
        image: {{ if .Values.global.dockerRegistryPrefix }}{{ trimSuffix "/" .Values.global.dockerRegistryPrefix }}/{{ end }}{{ .Values.release.image.Solr.repository }}:{{ .Values.release.image.Solr.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        resources:
          requests:
            memory: "{{ .Values.solrResources.requests.memory }}"
            cpu: "{{ .Values.solrResources.requests.cpu }}"
          limits:
            memory: "{{ .Values.solrResources.limits.memory }}"
            cpu: "{{ .Values.solrResources.limits.cpu }}"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        command: [ "sh", "-c", "--" ]
        args: [ " sleep 90;
                  /usr/bin/configset_collection.sh;
                "
              ]
        env:
          - name: SOLR_ZOOKEEPER_CONNECT
            value: "zookeeper:2181/solr"
          - name: SOLR_HOST
            value: "solr"
          - name: IS_INSTALL
            value: "{{ .Release.IsInstall }}"
        volumeMounts:
        - mountPath: /configsets
          name: configsets-tmpdir
        - name: config-script
          mountPath: /usr/bin/configset_collection.sh
          subPath: configset_collection.sh
      securityContext:
        {{- if .Values.release.image.Solr.runAsUser }}
        runAsUser: {{ .Values.release.image.Solr.runAsUser }}
        {{- end }}
        {{- if .Values.release.image.Solr.fsGroup }}
        fsGroup: {{ .Values.release.image.Solr.fsGroup }}
        {{- end }}
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}
      {{- include "image-secret" . | indent 6 }}
      volumes:
        - name: config-script
          configMap:
            name: solr-configset-collection
            defaultMode: 0755
        - name: configsets-tmpdir
          emptyDir: {}
      restartPolicy: Never
  backoffLimit: 5
  activeDeadlineSeconds: 1800
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: solr-configset-collection
  labels:
    app: solr-configset-collection
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: solr-configset-collection
    helm.sh/chart: {{ .Chart.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "before-hook-creation"
data:
  configset_collection.sh: |-
    #!/bin/bash
    if [ $IS_INSTALL = "true" ]; then
      echo 'Install step - Upload configs to zookeeper';
      # dqecExceptionSets_configs and shop4infoMain not required for Nootka, can be removed
      solr zk -upconfig -z ${SOLR_ZOOKEEPER_CONNECT} -n da-datasets_configs -d /configsets/configsets/da-datasets_configs;
      solr zk -upconfig -z ${SOLR_ZOOKEEPER_CONNECT} -n analysis -d /configsets/configsets/analysis;
      solr zk -upconfig -z ${SOLR_ZOOKEEPER_CONNECT} -n discovery -d /configsets/configsets/discovery;
      solr zk -upconfig -z ${SOLR_ZOOKEEPER_CONNECT} -n ia-analysis -d /configsets/configsets/ia-analysis;
      ## configsets search and feature_updates are preloaded in zookeeper
      echo 'Creating collections';
      solr create_collection -c da-datasets -shards 2 -replicationFactor 1 -confname da-datasets_configs -confdir /configsets/configsets/da-datasets_configs -p 8983;
      solr create_collection -c analysis -shards 2 -replicationFactor 1 -confname analysis -confdir /configsets/configsets/analysis -p 8983;
      solr create_collection -c featureScoreUpdates -shards 2 -replicationFactor 1 -confname feature_updates -confdir /configsets/configsets/feature_updates -p 8983;
      solr create_collection -c discovery -shards 2 -replicationFactor 1 -confname discovery -confdir /configsets/configsets/discovery -p 8983;
      solr create_collection -c ia-analysis -shards 2 -replicationFactor 1 -confname ia-analysis -confdir /configsets/configsets/ia-analysis -p 8983;
    else
      echo 'Drop da-datasets collection data';
      curl -H "Content-Type: application/json" -d '{ "delete": {"query":"*:*"} }' http://solr:8983/solr/da-datasets/update?commit=true
      echo 'Upgrade step - Reload collections';
      ## new entry for Nootka
      curl "http://solr:8983/solr/admin/collections?action=RElOAD&name=analysis&wt=json"
      curl "http://solr:8983/solr/admin/collections?action=RElOAD&name=da-datasets&wt=json"
      curl "http://solr:8983/solr/admin/collections?action=RElOAD&name=discovery&wt=json"
      iaAnalysisColl=$(curl 'http://solr:8983/solr/admin/collections?action=LIST&name=ia-analysis&wt=json' | grep -i ia-analysis)
      rc=$?
      if [[ rc -eq 1 ]]
      then
        # ia-analysis does not exists, create it
        echo 'Creating collections';
        solr zk -upconfig -z ${SOLR_ZOOKEEPER_CONNECT} -n ia-analysis -d /configsets/configsets/ia-analysis;
        solr create_collection -c ia-analysis -shards 2 -replicationFactor 1 -confname ia-analysis -confdir /configsets/configsets/ia-analysis -p 8983;
      else
        # ia-analysis already exists, just reload it
        echo 'Reloading collections';
        curl "http://solr:8983/solr/admin/collections?action=RElOAD&name=ia-analysis&wt=json"
      fi
    fi
    exit 0
