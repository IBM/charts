{{ if .Release.IsUpgrade -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: upgrade-xmeta-job-{{ .Chart.Version }}
  labels:
     app: upgrade-job
     chart: "{{ .Chart.Name }}"
     release: "{{ .Release.Name }}"
     heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: upgrade-job
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      #annotations:
      #  "helm.sh/hook": post-upgrade
      #  "helm.sh/hook-weight": "5"
      #  "helm.sh/hook-delete-policy": hook-succeeded
    spec:
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      restartPolicy: Never
      initContainers:
      {{- include "wait-xmeta" . | indent 6 }}
      containers:
      - name: upgrade-xmeta
        command: [ "/bin/bash", "-c", "--" ]
        args: [ "/opt/IBM/InformationServer/initScripts/updateXmetaDbSchema.sh
                " ]
        image: {{ .Values.release.image.iis.services.repository }}:{{ .Values.release.image.iis.services.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        securityContext:
          runAsUser: 0
      {{- include "image-secret" . | indent 6 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: configure-iis-job-{{ .Chart.Version }}
  labels:
     app: upgrade-job
     chart: "{{ .Chart.Name }}"
     release: "{{ .Release.Name }}"
     heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: upgrade-job
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      restartPolicy: Never
      initContainers:
      {{- include "wait-xmeta" . | indent 6 }}
      containers:
      - name: upgrade-iis
        command: [ "/bin/bash", "-cv", "--" ]
        args: [ " /opt/IBM/InformationServer/ASBServer/bin/iisAdmin.sh -set -key cas.agent.timeout -value 30000;
                  /opt/IBM/InformationServer/ASBServer/bin/iisAdmin.sh -set -key com.ibm.iis.ug.host.name -value is-servicesdocker;
                  /opt/IBM/InformationServer/ASBServer/bin/iisAdmin.sh -set -key com.ibm.iis.isf.security.directory.DirectoryUpdateSynchronized -val true;
                "
              ]
        image: {{ .Values.release.image.iis.services.repository }}:{{ .Values.release.image.iis.services.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        securityContext:
          runAsUser: 0
      {{- include "image-secret" . | indent 6 }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: clean-iis-cert-{{ .Chart.Version }}
  labels:
     app: upgrade-job
     chart: "{{ .Chart.Name }}"
     release: "{{ .Release.Name }}"
     heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: upgrade-job
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      restartPolicy: Never
      containers:
      - name: clean-iis-cert
        command: [ "sh", "-cv", "--" ]
        args: [ " /bin/rm /tmp/jwtkey.cer;
                  echo 'cleaned existing iis cert';
                "
              ]
        image: {{ .Values.release.image.wkcinitcontainer.repository }}:{{ .Values.release.image.wkcinitcontainer.tag }}
        imagePullPolicy: {{ .Values.release.image.pullPolicy }}
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: secrets-pv-volume
          mountPath: /tmp
      {{- include "image-secret" . | indent 6 }}
      volumes:
       - name: secrets-pv-volume
         persistentVolumeClaim:
          {{- if .Values.iisService.volumeClaim.existingClaimName }}
            claimName: {{ .Values.iisService.volumeClaim.existingClaimName }}
          {{- else }}
            claimName: iis-secrets-pv
          {{- end }}
{{- end }}

