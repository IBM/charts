kind: ConfigMap
apiVersion: v1
metadata:
  name: iis-secret-generation-config
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-101"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  init.sh: |
    function generateRandomString() {
      length=${1}
      < /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-${length}};echo;
    }

    # Check if iis-usr-secrets exists
    iis_exists=$(kubectl get secret iis-usr-secrets);
    rc=$?
    if [[ rc -eq 1 ]]
    then
      #Generate Passwords
       isadmin_sec=$(generateRandomString 10);
       db2inst1_sec=$(generateRandomString 10);
       db2fenc1_sec=$(generateRandomString 10);
       xmeta_sec=$(generateRandomString 10);
       xmetasr_sec=$(generateRandomString 10);
       dsodb_sec=$(generateRandomString 10);
       srduser_sec=$(generateRandomString 10);
       iauser_sec=$(generateRandomString 10);
       dasusr1_sec=$(generateRandomString 10);
       dsadm_sec=$(generateRandomString 10);
       finley_sec=$(generateRandomString 10);

       echo "generating iis-usr-secrets...";
       kubectl create secret generic iis-usr-secrets --from-literal=isadmin_password="$isadmin_sec" --from-literal=db2inst1_password="$db2inst1_sec" --from-literal=db2fenc1_password="$db2fenc1_sec" --from-literal=xmeta_password="$xmeta_sec" --from-literal=xmetasr_password="$xmetasr_sec" --from-literal=dsodb_password="$dsodb_sec" --from-literal=srduser_password="$srduser_sec" --from-literal=iauser_password="$iauser_sec" --from-literal=dasusr1_password="$dasusr1_sec" --from-literal=dsadm_password="$dsadm_sec" --from-literal=finley_token="$finley_sec";
       kubectl label secret iis-usr-secrets -n $ICPD_CONTROLPLANE_NAMESPACE release={{ .Release.Name }} app={{ .Chart.Name }} heritage={{ .Release.Service }} chart={{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }};
    else
       echo "iis-usr-secrets secret already exists";
       echo "check if finley_token secret exists or not"
       finley_token_exists=$(kubectl get secret iis-usr-secrets -o yaml | grep finley_token)
       if [[ $? -eq 1 ]]
       then
          echo finley_token does not exist, add it
          finley_sec=$(generateRandomString 10 | base64 -w 0);
          kubectl patch secret iis-usr-secrets --type='json' -p="[{'op': 'add', 'path':'/data/finley_token', 'value': '$finley_sec'}]"
       else
          echo finley_token already exists, not adding it
       fi
    fi
