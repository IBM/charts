{{- $compName := "remove-dataview-secrets" -}}
{{- if .Values.secret }}
{{- $files := $.Files }}
{{- $imagesList := $files.Get "imagesList.yaml" }}
{{- $imageDetails := fromYaml $imagesList }}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{ $compName }}
  labels:
    app: {{ $compName }}
    chart: {{ template "dataview.chart" $ }}
    release: {{ $.Chart.Name }}
    run: {{ $compName }}
    heritage: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
    icpdsupport/addOnId: "ccs"
    icpdsupport/app: {{ $compName }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
{{- if and ($.Values.global.annotations) (eq $.Values.deployment.env "icp4d") }}
{{ toYaml $.Values.global.annotations | trim | indent 4 }}
{{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ $compName }}
        chart: {{ $compName }}
        component: {{ $compName }}
        release: {{ $.Chart.Name }}
        heritage: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{.Chart.Name}}-{{.Chart.Version | replace "+" "_" }}
        icpdsupport/addOnId: "ccs"
        icpdsupport/app: {{ $compName }}
{{- if and ($.Values.global.annotations) (eq $.Values.deployment.env "icp4d") }}
      annotations:
        hook.deactivate.cpd.ibm.com/command: "[]"
        hook.activate.cpd.ibm.com/command: "[]"
{{- if ($.Values.global.cloudpakInstanceId) }}
        cloudpakInstanceId: {{ .Values.global.cloudpakInstanceId | default "" | quote }}
{{- end }}

{{ toYaml $.Values.global.annotations | trim | indent 8 }}
{{- end }}
    spec:
      serviceAccount: "cpd-editor-sa"
      serviceAccountName: "cpd-editor-sa"
      restartPolicy: Never
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - {{ .Values.resources.architecture }}
      containers:
        - name: {{ $compName }}
          image: "{{ $.Values.global.dockerRegistryPrefix }}/{{ (index $imageDetails "dataview-secrets-job").image.repository }}:{{ .Values.dataviewSecret.image.tag }}"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "500m"
              memory: "4Gi"
            requests:
              cpu: "100m"
              memory: "128Mi"
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000320999
            capabilities:
              drop:
              - ALL
          command:
            ["/home/node/scripts/generate-ws-secrets.sh", "--isUninstall=true"]
{{- end }}
