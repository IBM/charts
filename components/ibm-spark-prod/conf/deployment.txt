ctmServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/ctm/v1/cluster-template
clusterServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/ClusterService/v1/cluster
deployerServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/deployer/v1/deploymentRequest
kernelServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/ae/v1
volumeServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/ctm/v1/volume
namespaceServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/namespace_service/v1/namespace
dataplaneServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/dataplane_manager/v1/dataplane
instanceServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/instance_manager/v1/instance
meteringServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/metering_service/v1/metering
sparkServiceUrl={{ .Values.microService.dataplaneScheme }}://localhost:{{ .Values.microService.port }}/ClusterService/v1/spark
jkgServiceUrl={{ .Values.microService.dataplaneScheme }}://localhost:{{ .Values.microService.port }}/ClusterService/v1/jkg
jobServiceUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/jobService/v2
serviceProviderUrl={{ .Values.microService.scheme }}://localhost:{{ .Values.microService.port }}/v1
chartUrl-SparkCluster={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/spark-1.1.1.tgz
chartUrl-namespace={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/kernel-namespace-1.1.1.tgz
chartUrl-kernel={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/{{ .Values.charts.createKernel }}
chartUrl-deleteKernel={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/{{ .Values.charts.deleteKernel }}
chartUrl-jkg={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/jkg-1.1.1.tgz
chartUrl-HistoryServer={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/spark-history-icp4d-1.0.0.tgz
chartUrl-job={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/{{ .Values.charts.createJobV1 }}
chartUrl-jobV2={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/{{ .Values.charts.createJobV2 }}
chartUrl-jobV2-cp4d={{ .Values.microService.dataplaneScheme }}://{{ .Values.environment.name }}-helm-repo-headless.{{ .Release.Namespace }}.svc.cluster.local:9080/helm/stable/{{ .Values.charts.createJobV3 }}
service_broker_type={{ .Values.serviceBroker.type }}
zen_core_tiller_url={{ .Values.zenCore.tillerEndpoint }}
zenCoreApiServiceUrl=http://internal-nginx-svc:12080
controlPlaneGatewayUrl={{ .Values.icp4d.nginxUrl }}/ae
mqKernelDeleteQueueName=kernel.delete.queue.{{ .Release.Namespace }}
mqKernelDeleteRoutingKey=kernel.delete.routingkey.{{ .Release.Namespace }}
swiftEndPointUrl=http://swift-swift:9855/tiller/v2
ENV_SERVICE_URL={{ .Values.icp4d.environmentUrl }}/v2/environments
ENV=DEV
DeploymentMode=local
dockerRegistry={{ .Values.global.dockerRegistryPrefix }}
sparkHistoryServerImage={{ .Values.sparkHistory.image }}:{{ .Values.spark.image.tag24 }}
Namespace={{ .Release.Namespace }}
asyncDelete=false
isFipsEnabled={{ .Values.icp4d.isFipsEnabled }}
architecture={{ .Values.global.architecture }}
