apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.environment.name }}-init-preload-jkg-image
  annotations:
    "helm.sh/hook-delete-policy": "hook-succeeded,hook-failed"
    "hook.deactivate.cpd.ibm.com/command": "[]"
    "hook.activate.cpd.ibm.com/command": "[]"
  labels:
    app: {{ .Values.environment.name }}-init-preload-jkg-image
{{- include "helm.labels" . | indent 4 }}
{{- include "cloudpak.labels" . | indent 4 }}
    run: {{ .Values.environment.name }}-init-preload-jkg-image
spec:
  backoffLimit: 2
  activeDeadlineSeconds: 7200
  parallelism: {{ .Values.preloadImage.cronjob.jobReplica }}
  completions: {{ .Values.preloadImage.job.jobCompletion }}
  template:
    metadata:
      annotations:
{{- include "zenhelper.annotations" . | indent 8 }}
      labels:
        app: {{ .Values.environment.name }}-init-preload-jkg-image
{{- include "helm.labels" . | indent 8 }}
{{- include "cloudpak.labels" . | indent 8 }}
        run: {{ .Values.environment.name }}-init-preload-jkg-image
    spec:
      serviceAccount: {{ .Values.sa.viewer }}
      serviceAccountName: {{ .Values.sa.viewer }}
      restartPolicy: OnFailure
      securityContext:
        runAsUser: {{ .Values.user.uid }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.global.architecture }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: run
                  operator: In
                  values: 
                  - {{ .Values.environment.name }}-init-preload-jkg-image
            topologyKey: kubernetes.io/hostname
      containers:
      - name: {{ .Values.environment.name }}-preload-jkg-image1
        image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.preloadImage.image }}:{{ .Values.spark.image.tag30 }}"
        imagePullPolicy: {{ .Values.microService.pullPolicy }}
        securityContext:
          runAsUser: {{ .Values.user.uid }}
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ .Values.preloadImage.requests.cpu }}
            memory: {{ .Values.preloadImage.requests.memory }}
          limits:
            cpu: {{ .Values.preloadImage.limits.cpu }}
            memory: {{ .Values.preloadImage.limits.memory }}
        command: ["echo", "Image {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.preloadImage.image }}:{{ .Values.spark.image.tag30 }} preloaded"]
      - name: {{ .Values.environment.name }}-preload-jkg-image2
        image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.preloadImage.image }}:{{ .Values.spark.image.tag24 }}"
        securityContext:
          runAsUser: {{ .Values.user.uid }}
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ .Values.preloadImage.requests.cpu }}
            memory: {{ .Values.preloadImage.requests.memory }}
          limits:
            cpu: {{ .Values.preloadImage.limits.cpu }}
            memory: {{ .Values.preloadImage.limits.memory }}
        command: ["echo", "Image {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.preloadImage.image }}:{{ .Values.spark.image.tag24 }} preloaded"]