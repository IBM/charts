{{- if ( eq .Values.runtime "ICP4Data" ) }}
kind: Deployment
metadata:
  name: {{ .Release.Name }}-api
  labels:
    app.kubernetes.io/name: {{ include "informix-ibm.name" . }}-api
    app.kubernetes.io/instance: {{ .Release.Name }}-api
    app.kubernetes.io/managed-by: helm
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}-api
    release: {{ .Release.Name }}-api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "informix-ibm.name" . }}-api
      app.kubernetes.io/instance: {{ .Release.Name }}-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "informix-ibm.name" . }}-api
        app.kubernetes.io/instance: {{ .Release.Name }}-api
        app.kubernetes.io/managed-by: helm
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}-api
        release: {{ .Release.Name }}-api
      annotations:
        {{- include "informix.annotations" . | indent 8 }} 
    spec:   
      serviceAccount: informix  
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        fsGroup: 200
        runAsNonRoot: true
        runAsUser: 200
        runAsGroup: 200
      containers:
        - name: {{ .Chart.Name }}-api
          image: {{ include "informix-ibm.api-repo-image" . }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          {{- include "securityContext.containers.ifx" . | indent 10 }}
          env:
           - name: SERVICE_NAME
             value: {{ .Values.servicename }}
           - name: NAMESPACE
             value:  {{ .Values.baseNamespace }}
          {{- if .Values.tls }}
           - name: TLS_CONNECTIONS 
             value: "ON"
          {{- end }}             
          ports:
            - name: http
              containerPort: {{ .Values.service.port.api }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port.api }}
            initialDelaySeconds: 90
            periodSeconds: 30
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port.api }}
            initialDelaySeconds: 60
            periodSeconds: 30
          resources:
            requests:
              cpu: "100m"
              memory: "100Mi"
            limits:
              cpu: "100m"
              memory: "100Mi"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- include "affinity.node" . | indent 6 }}      
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
apiVersion: apps/v1
{{- end }}
