{{- $coreReleaseName := include "ibm-fci-conduct-surveillance.core-release-name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-ecomm-liberty
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "ecomm-liberty" ) (include "ibm-fci-conduct-surveillance.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  {{   if .Values.surveillance_ecomm.enabled }}
  replicas: 1
  {{   else }}
  replicas: 0
  {{   end }}
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "ecomm-liberty" ) .Release.Name ) | indent 6 }}
  template:
    metadata:
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "ecomm-liberty" ) (include "ibm-fci-conduct-surveillance.chart" .) .Release.Name .Release.Service ) | indent 8 }}
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      serviceAccountName: fci-kube-api-fowner
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      volumes:
        - name: file-secrets
          secret:
            secretName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secret-files
        - name: fccs-ecomm-liberty-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-ecomm-liberty
        - name: fccs-shared-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-shared
        - name: keytab-file
          secret:
            secretName: {{ .Release.Name }}-keytab
{{- if hasKey .Values "surveillance_ecomm" }}
{{-   if hasKey .Values.surveillance_ecomm "swidtag" }}
{{-     if hasKey .Values.surveillance_ecomm.swidtag "file" }}
        - name: swidtags
          configMap:
            name: {{ .Release.Name }}-swidtag-files
{{-     end }}
{{-   end }}
{{- end }}
      initContainers:
        - name: init-svc-depend
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          command: [ "/common-scripts/init-container-svc-depend.sh" ]
          args: [ "{{ .Release.Namespace }}/{{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty","{{ .Release.Namespace }}/{{ template "ibm-fci-conduct-surveillance.fullname" . }}-rms-designstudio" ]
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
        {{- if or .Values.global.deployOnIBMCloud .Values.global.deployOnEKS }}
        - name: pv-permissions
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
          securityContext:
{{ include "common.RootFownerContainerSecurityContext" . | indent 12 }}
          args:
          - chmod -R g+w /mount;
          command:
          - /bin/sh
          - -c
          volumeMounts:
          - mountPath: /mount
            name: fccs-ecomm-liberty-volume
        {{- end }}
      containers:
        - name: fccs-ecomm
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.surveillance_ecomm.ecomm.image.repository }}:{{ .Values.surveillance_ecomm.ecomm.image.tag }}"
          imagePullPolicy: {{ .Values.surveillance_ecomm.ecomm.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
            runAsUser: {{ .Values.global.runAsUser}}
          readinessProbe:
            httpGet:
              path: /ecommservices/health
              port: 9443
              scheme: HTTPS
{{ toYaml .Values.readinessProbe | indent 12 }}
          livenessProbe:
            httpGet:
              path: /ecommservices/health
              port: 9443
              scheme: HTTPS
{{ toYaml .Values.livenessProbe | indent 12 }}
          envFrom:
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}
          env:
          - name: hbase_zookeeper_quorum
            valueFrom:
              configMapKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-ibm-fci-platform-prod-krb
                key: HDP_ZOOKEEPER_SERVERS
          - name: hbase_zookeeper_property_clientPort
            valueFrom:
              configMapKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-ibm-fci-platform-prod-krb
                key: HDP_ZOOKEEPER_PORT
          - name: fci_jks_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: JWT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: JWT_KEY
          - name: fci_kafka_msg_jks_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_KAFKA_MSG_JKS_PASSWORD
          - name: FCI_KAFKA_MSG_KS_ALIASNAME	
            valueFrom:	
              secretKeyRef:	
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env	
                key: FCI_KAFKA_MSG_JKS_ALIASNAME
          - name: SERVER_TRUSTSTORE_PWD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: fciadmin_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: com_fci_password
          - name: fci_db2_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-secrets-env
                key: FCIAUTHID_PASSWORD
          ports:
          - containerPort: 9080
          - containerPort: 9443
          volumeMounts:
{{- if hasKey .Values "surveillance_ecomm" }}
{{-   if hasKey .Values.surveillance_ecomm "swidtag" }}
{{-     if hasKey .Values.surveillance_ecomm.swidtag "file" }}
            - name: swidtags
              mountPath: /opt/ibm/fccs/swidtag/{{ .Values.surveillance_ecomm.swidtag.file }}
              subPath: {{ .Values.surveillance_ecomm.swidtag.file }}
{{-     end }}
{{-   end }}
{{- end }}
            - name: fccs-ecomm-liberty-volume
              mountPath: /home/liberty-anchor
            - name: fccs-shared-volume
              mountPath: /fccs-shared
            - name: keytab-file
              mountPath: /etc/security/keytabs
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets	
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.truststore.jks	
              subPath: fci_universal_ks.jks	
            - name: file-secrets	
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.keystore.jks	
              subPath: fci_universal_ks.jks	
            - name: file-secrets	
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_kafka_msg.p12	
              subPath: fci_kafka_msg.p12
          resources:
{{ toYaml .Values.surveillance_ecomm.ecomm.resources | indent 12 }}
        - name: message-log
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          args: [/bin/sh, -c, 'sleep 60; tail -n+1 -F /fccs-mount/logs/messages.log']
          resources:
{{ toYaml .Values.sideCarContainers.resources | indent 12 }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
{{ include "common.sideCarHealthCheck" . | indent 10 }}
          volumeMounts:
          - name: fccs-ecomm-liberty-volume
            mountPath: /fccs-mount
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
