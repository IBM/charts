{{- $coreReleaseName := include "ibm-fci-conduct-surveillance.core-release-name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty
  labels:
    app: {{ template "ibm-fci-conduct-surveillance.name" . }}-liberty
    chart: {{ template "ibm-fci-conduct-surveillance.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "ibm-fci-conduct-surveillance.name" . }}-liberty
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ibm-fci-conduct-surveillance.name" . }}-liberty
        release: {{ .Release.Name }}
        chart: {{ template "ibm-fci-conduct-surveillance.chart" . }}
        heritage: {{ .Release.Service }}
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
    spec:
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      serviceAccountName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-common-scripts
      hostAliases:
{{- if eq .Values.config.hdp_env_type "dev" }}
      - hostnames:
        - {{ .Values.config.HDP_MASTER_HOST }}
        ip: {{ .Values.config.HDP_MASTER_IP }}
      - hostnames:
        - {{ .Values.config.HDP_AMBARI_HOST }}
        ip: {{ .Values.config.HDP_AMBARI_IP }}
      - hostnames:
        - {{ .Values.config.HDP_GATEWAY_HOST }}
        ip: {{ .Values.config.HDP_GATEWAY_IP }}
{{- else if eq .Values.config.hdp_env_type "prod" }}
      - hostnames:
        - {{ .Values.config.HDP_MASTER_HOST }}
        ip: {{ .Values.config.HDP_MASTER_IP }}
      - hostnames:
        - {{ .Values.config.HDP_AMBARI_HOST }}
        ip: {{ .Values.config.HDP_AMBARI_IP }}
      - hostnames:
        - {{ .Values.config.HDP_GATEWAY_HOST }}
        ip: {{ .Values.config.HDP_GATEWAY_IP }}
      - hostnames:
        - {{ .Values.config.HDP_SECONDARY_HOST }}
        ip: {{ .Values.config.HDP_SECONDARY_IP }}
      - hostnames:
        - {{ .Values.config.HDP_SLAVE1_HOST }}
        ip: {{ .Values.config.HDP_SLAVE1_IP }}
      - hostnames:
        - {{ .Values.config.HDP_SLAVE2_HOST }}
        ip: {{ .Values.config.HDP_SLAVE2_IP }}
{{- end }}
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      volumes:
{{- if hasKey .Values "global" }}
{{-   if hasKey .Values.global "swidtag" }}
{{-     if hasKey .Values.global.swidtag "file" }}
        - name: swidtags
          configMap:
            name: {{ .Release.Name }}-swidtag-files
{{-     end }}
{{-   end }}
{{- end }}
        - name: file-secrets
          secret:
            secretName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secret-files
        - name: db2-instance
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-scripts-{{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-{{ .Values.dbConfig.DB_SERVICE }}
        - name: sifs-liberty-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 6 }}
      {{- end }}
      {{- if .Values.global.swidtag }}
        - name: swidtag-volume
          configMap:
            name: {{ .Release.Name }}-swidtag-files
      {{- end }}
      initContainers:
        - name: init-svc-depend
          image: "{{ required "global.dockerRepository must specify from which repository the docker image should be fetched." .Values.global.dockerRepository }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          command: [ "/common-scripts/init-container-svc-depend.sh" ]
          args: [ "{{ .Release.Namespace }}/{{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-{{ .Values.dbConfig.DB_SERVICE }}" ]
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
        - name: sifs-data-store-client
          image: "{{ .Values.global.dockerRepository }}/{{ .Values.db2Container.image.repository }}:{{ .Values.db2Container.image.tag }}"
          imagePullPolicy: {{ .Values.db2Container.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          command: ["/bin/sh","-c"]
          args: ["mkdir -p /db2Instance/fcsifs; cp -r /flyway/mountable/fcsifs/* /db2Instance/fcsifs/; /flyway/flyway migrate"]
          envFrom:
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-db
          env:
          - name: FLYWAY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: DB2INST1_PASSWORD
          - name: SSL_KEYSTORE_PASSWORD_CONFIG
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: FLYWAY_URL
            value: "{{ printf "jdbc:db2://%s-%s:56000/fcidb:sslConnection=true;sslTrustStoreLocation=/fci_universal_ks.jks;sslTrustStorePassword=$(SSL_KEYSTORE_PASSWORD_CONFIG);" $coreReleaseName .Values.dbConfig.DB_SERVICE }}"
          volumeMounts:
            - name: file-secrets
              mountPath: /fci_universal_ks.jks
              subPath: fci_universal_ks.jks
            - name: db2-instance
              mountPath: /db2Instance
          resources:
{{ toYaml .Values.db2Container.resources | indent 12 }}
      containers:
        - name: sifs-liberty-1
          image: "{{ .Values.global.dockerRepository }}/{{ .Values.surveillanceLiberty.image.repository }}:{{ .Values.surveillanceLiberty.image.tag }}"
          imagePullPolicy: {{ .Values.surveillanceLiberty.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "if [ -e /opt/ibm/fci/sifs/liberty/healthcheck.sh ]; then /opt/ibm/fci/sifs/liberty/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "if [ -e /opt/ibm/fci/sifs/liberty/healthcheck.sh ]; then /opt/ibm/fci/sifs/liberty/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          envFrom:
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}
          env:
          - name: db2_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCIAUTHID_PASSWORD
          - name: fciauthid_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCIAUTHID_PASSWORD
          - name: fci_jks_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: JWT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: JWT_KEY
          - name: SSL_TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: SSL_KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: fci_kafka_msg_jks_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_KAFKA_MSG_JKS_PASSWORD
          - name: FCI_KAFKA_MSG_KS_ALIASNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_KAFKA_MSG_JKS_ALIASNAME
          - name: SERVER_TRUSTSTORE_PWD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: fciadmin_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: com_fci_password
          - name: HDP_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-secrets
                key: HDP_MASTER_PASSWORD
          - name: HDP_AMBARI_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-secrets
                key: HDP_AMBARI_PASSWORD
          - name: fci_db2_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCIAUTHID_PASSWORD
          ports:
          - containerPort: 9080
          - containerPort: 9443
          volumeMounts:
            - name: sifs-liberty-volume
              mountPath: /home/liberty-anchor
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.pvtk.pem
              subPath: fci_universal_ks.pvtk.pem
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.crt.pem
              subPath: fci_universal_ks.crt.pem
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.kdb
              subPath: fci_universal_ks.kdb
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.sth
              subPath: fci_universal_ks.sth
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.truststore.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets
              mountPath: /eopt/ibm/wlp/usr/servers/fciServer/resourcestc/security/kafka.client.keystore.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_kafka_msg.p12
              subPath: fci_kafka_msg.p12
{{- if hasKey .Values "global" }}
{{-   if hasKey .Values.global "swidtag" }}
{{-     if hasKey .Values.global.swidtag "EComm" }}
            - name: swidtag-volume
              mountPath: /opt/ibm/fci/sifs/swidtag/{{ .Values.global.swidtag.EComm }}
              subPath: {{ .Values.global.swidtag.ecomm }}
{{-     end }}
{{-     if hasKey .Values.global.swidtag "Voice" }}
            - name: swidtag-volume
              mountPath: /opt/ibm/fci/sifs/swidtag/{{ .Values.global.swidtag.Voice }}
              subPath: {{ .Values.global.swidtag.voice }}
{{-     end }}
{{-     if hasKey .Values.global.swidtag "Trade" }}
            - name: swidtag-volume
              mountPath: /opt/ibm/fci/sifs/swidtag/{{ .Values.global.swidtag.Trade }}
              subPath: {{ .Values.global.swidtag.trade }}
{{-     end }}
{{-     if hasKey .Values.global.swidtag "Complaints" }}
            - name: swidtag-volume
              mountPath: /opt/ibm/fci/sifs/swidtag/{{ .Values.global.swidtag.Complaints }}
              subPath: {{ .Values.global.swidtag.complaints }}
{{-     end }}
{{-   end }}
{{- end }}
          resources:
{{ toYaml .Values.surveillanceLiberty.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
