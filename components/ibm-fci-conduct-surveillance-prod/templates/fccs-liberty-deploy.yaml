{{- $coreReleaseName := include "ibm-fci-conduct-surveillance.core-release-name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "liberty" ) (include "ibm-fci-conduct-surveillance.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "liberty" ) .Release.Name ) | indent 6 }}
  template:
    metadata:
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "liberty" ) (include "ibm-fci-conduct-surveillance.chart" .) .Release.Name .Release.Service ) | indent 8 }}
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      serviceAccountName: fci-kube-api-fowner
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      volumes:
        - name: file-secrets
          secret:
            secretName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secret-files
        - name: db2-instance
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-scripts-{{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-{{ .Values.dbConfig.DB_SERVICE }}
        - name: sifs-liberty-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty
        - name: fccs-shared-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-shared
        - name: keytab-file
          secret:
            secretName: {{ .Release.Name }}-keytab
        - name: fci-shared-cm-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-case-manager-fci-solution
      initContainers:
        - name: init-svc-depend
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          command: [ "/common-scripts/init-container-svc-depend.sh" ]
          args: [ "{{ .Release.Namespace }}/{{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-{{ .Values.dbConfig.DB_SERVICE }}" ]
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
        {{- if or .Values.global.deployOnIBMCloud .Values.global.deployOnEKS }}
        - name: pv-permissions
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
          securityContext:
{{ include "common.RootFownerContainerSecurityContext" . | indent 12 }}
          args:
          - chmod -R g+w /fccs-mounts;
          command:
          - /bin/sh
          - -c
          volumeMounts:
          - mountPath: /fccs-mounts/mount1
            name: sifs-liberty-volume
          - mountPath: /fccs-mounts/mount2
            name: fccs-shared-volume
        {{- end }}
        - name: sifs-data-store-client
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.db2Container.image.repository }}:{{ .Values.db2Container.image.tag }}"
          imagePullPolicy: {{ .Values.db2Container.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
            runAsUser: {{ .Values.global.runAsUser}}
          command: ["/bin/sh","-c"]
          args: ["mkdir -p /db2Instance/fcsifs; cp -r /flyway/mountable/fcsifs/* /db2Instance/fcsifs/; /flyway/flyway migrate"]
          envFrom:
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-db
          env:
          - name: FLYWAY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-secrets-env
                key: DB2INST1_PASSWORD
          - name: SSL_KEYSTORE_PASSWORD_CONFIG
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: FLYWAY_URL
            value: "{{ printf "jdbc:db2://%s-%s:56000/fcidb:sslConnection=true;sslTrustStoreLocation=/fci_universal_ks.jks;sslTrustStorePassword=$(SSL_KEYSTORE_PASSWORD_CONFIG);" $coreReleaseName .Values.dbConfig.DB_SERVICE }}"
          volumeMounts:
            - name: file-secrets
              mountPath: /fci_universal_ks.jks
              subPath: fci_universal_ks.jks
            - name: db2-instance
              mountPath: /db2Instance
          resources:
{{ toYaml .Values.db2Container.resources | indent 12 }}
      containers:
        - name: sifs-liberty-1
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.surveillanceLiberty.image.repository }}:{{ .Values.surveillanceLiberty.image.tag }}"
          imagePullPolicy: {{ .Values.surveillanceLiberty.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
            runAsUser: {{ .Values.global.runAsUser}}
          readinessProbe:
            httpGet:
              path: /SIFSServices/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /SIFSServices/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          envFrom:
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}
          env:
          - name: db2_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-secrets-env
                key: FCIAUTHID_PASSWORD
          - name: fciauthid_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-secrets-env
                key: FCIAUTHID_PASSWORD
          - name: fci_jks_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: JWT_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: JWT_KEY
          - name: SSL_TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: SSL_KEYSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: fci_kafka_msg_jks_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_KAFKA_MSG_JKS_PASSWORD
          - name: FCI_KAFKA_MSG_KS_ALIASNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_KAFKA_MSG_JKS_ALIASNAME
          - name: SERVER_TRUSTSTORE_PWD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: FCI_JKS_PASSWORD
          - name: fciadmin_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secrets-env
                key: com_fci_password
          - name: fci_db2_password
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-db2-secrets-env
                key: FCIAUTHID_PASSWORD
          ports:
          - containerPort: 9080
          - containerPort: 9443
          volumeMounts:
            - name: sifs-liberty-volume
              mountPath: /home/liberty-anchor
            - name: fccs-shared-volume
              mountPath: /fccs-shared
            - name: keytab-file
              mountPath: /etc/security/keytabs
            - name: fci-shared-cm-volume
              mountPath: /fci-shared
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.pvtk.pem
              subPath: fci_universal_ks.pvtk.pem
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.crt.pem
              subPath: fci_universal_ks.crt.pem
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.kdb
              subPath: fci_universal_ks.kdb
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_universal_ks.sth
              subPath: fci_universal_ks.sth
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.truststore.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/kafka.client.keystore.jks
              subPath: fci_universal_ks.jks
            - name: file-secrets
              mountPath: /opt/ibm/wlp/usr/servers/fciServer/resources/security/fci_kafka_msg.p12
              subPath: fci_kafka_msg.p12
          resources:
{{ toYaml .Values.surveillanceLiberty.resources | indent 12 }}
        - envFrom:
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-ibm-fci-platform-prod-krb
          - configMapRef:
              name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-krb
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.kerberosClient.image.repository }}:{{ .Values.kerberosClient.image.tag }}"
          imagePullPolicy: {{ .Values.kerberosClient.image.pullPolicy }}
          livenessProbe:
{{ toYaml .Values.kerberosClient.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.kerberosClient.readinessProbe | indent 12 }}
          name: hdp-client
          resources:
{{ toYaml .Values.sideCarContainers.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: {{ .Values.global.runAsUser }}
          volumeMounts:
          - mountPath: /etc/security/keytabs
            name: keytab-file
          - name: fccs-shared-volume
            mountPath: /home/liberty-anchor
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
