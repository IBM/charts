apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-logstash
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "logstash" ) (include "ibm-fci-conduct-surveillance.chart" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "logstash" ) .Release.Name ) | indent 6 }}
  template:
    metadata:
      labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "ibm-fci-conduct-surveillance.name" .) "logstash" ) (include "ibm-fci-conduct-surveillance.chart" .) .Release.Name .Release.Service ) | indent 8 }}
      annotations:
{{ include "common.meteringAnnotations" . | indent 8 }}
    spec:
{{ include "common.configureHostAliases" . | indent 6 }}
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      serviceAccountName: fci-kube-api-fowner
      affinity:
{{ include "common.ArchNodeAffinity" . | indent 8 }}
      volumes:
        - name: file-secrets
          secret:
            secretName: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-platform-secret-files
        - name: sifs-logstash-volume
          persistentVolumeClaim:
            claimName: {{ template "ibm-fci-conduct-surveillance.fullname" . }}-logstash
      initContainers:      
        - name: init-svc-depend
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          command: [ "/common-scripts/init-container-svc-depend.sh" ]
          args: [ "{{ .Release.Namespace }}/{{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty" ]
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
        {{- if or .Values.global.deployOnIBMCloud .Values.global.deployOnEKS }}
        - name: pv-permissions
          image: "{{ .Values.global.dockerRegistryPrefix }}/{{ .Values.global.commonScripts.image.repository }}:{{ .Values.global.commonScripts.image.tag }}"
          resources:
{{ toYaml .Values.initContainerResource.resources | indent 12 }}
          securityContext:
{{ include "common.RootFownerContainerSecurityContext" . | indent 12 }}
          args:
          - chmod -R g+w /mount;
          command:
          - /bin/sh
          - -c
          volumeMounts:
          - mountPath: /mount
            name: sifs-logstash-volume
        {{- end }}
      containers:
        - name: sifs-logstash-1
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.surveillanceLogstash.image.repository }}:{{ .Values.surveillanceLogstash.image.tag }}
          imagePullPolicy: {{ .Values.surveillanceLogstash.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
            runAsUser: {{ .Values.global.runAsUser}}
          env:
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-elastic-secrets-env
                key: ELASTIC_ADMIN_PASSWORD
          - name: ELASTICSEARCH_HOST
            value: {{ template "ibm-fci-conduct-surveillance.core-release-name" . }}-elasticsearch
          - name: ELASTICSEARCH_USERNAME
            value: {{ .Values.global.config.esUsername }}
          - name: HDP_RM_HOST
            value: {{ .Values.global.config.HDP_MASTER_HOST }}
          - name: ELASTICSEARCH_PORT
            value: "9200"
          - name: ECOMM_USERPASS
            value: ibmrest1:ibmrest@pwd1
          - name: SIFS_LIBERTY
            value: "{{ template "ibm-fci-conduct-surveillance.fullname" . }}-liberty:9443"
          - name: VOICE_LIBERTY
            value: "{{ template "ibm-fci-conduct-surveillance.fullname" . }}-voice-liberty:9443"
          - name: ECOMM_LIBERTY
            value: "{{ template "ibm-fci-conduct-surveillance.fullname" . }}-ecomm-liberty:9443"
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "if [ -e /opt/ibm/sifs/logstash/healthcheck.sh ]; then /opt/ibm/sifs/logstash/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "if [ -e /opt/ibm/sifs/logstash/healthcheck.sh ]; then /opt/ibm/sifs/logstash/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          ports:
          - containerPort: 5044
          volumeMounts:
            - name: sifs-logstash-volume
              mountPath: /home/logstash-anchor
          resources:
{{ toYaml .Values.surveillanceLogstash.resources | indent 12 }}
        - name: logstash-proxy
          image: {{ .Values.global.dockerRegistryPrefix }}/{{ .Values.surveillanceLogstashproxy.image.repository }}:{{ .Values.surveillanceLogstashproxy.image.tag }}
          imagePullPolicy: {{ .Values.surveillanceLogstashproxy.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
            runAsUser: {{ .Values.global.runAsUser}}
          env:
          - name: "SERVICE_HOST_ENV_NAME"
            value: "localhost"
          - name: "SERVICE_PORT_ENV_NAME"
            value: "5044"
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - "if [ -e /opt/ibm/sifs/logstash/healthcheck.sh ]; then /opt/ibm/sifs/logstash/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - "if [ -e /opt/ibm/sifs/logstash/healthcheck.sh ]; then /opt/ibm/sifs/logstash/healthcheck.sh; else exit {{ default 0 .Values.global.enforceHealthCheck }}; fi"
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          volumeMounts:
          - name: file-secrets
            mountPath: /etc/secrets/proxykey
            subPath: fci_universal_ks.pvtk.pem
          - name: file-secrets
            mountPath: /etc/secrets/proxycert
            subPath: fci_universal_ks.crt.pem
          resources:
{{ toYaml .Values.surveillanceLogstashproxy.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
