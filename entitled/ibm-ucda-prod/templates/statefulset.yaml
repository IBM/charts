{{- include "sch.config.init" (list . "ibm-ucda-prod.sch.chart.config.values") -}}
{{- $fullName := include "sch.names.fullName" (list .) -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $fullName }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  serviceName: {{ $fullName }}-hl
  replicas: 1
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
        ucdcomp: {{ .Release.Name }}-agent
      annotations:
        productName: "UrbanCode Deploy Agent"
        productID: "CC0QVML"
        productVersion: "7.0.5.0"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      affinity:
      {{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ucdcomp
                  operator: In
                  values:
                  - {{ .Release.Name }}-agent
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ regexReplaceAll "(^cp\\.(stg\\.)?icr\\.io/)" .Values.image.repository "${1}cp/" }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - /usr/local/bin/agentLiveness.sh
          initialDelaySeconds: 30
          periodSeconds: 30
        env:
          - name: RELAY_URI
            value: {{ .Values.relayUri }}
          - name: CODESTATION_URL
            value: {{ .Values.codestationUrl }}
          - name: SERVER_URI
            value: {{ .Values.serverUri }}
          - name: AGENT_TEAMS
            value: {{ .Values.agentTeams }}
        volumeMounts:
          - name: "{{ $fullName }}-{{ .Values.confVolume.name }}"
            mountPath: "/opt/ibm-ucd/agent/configs"
        resources:
          {{- if .Values.resources.constraints.enabled}}
          limits:
{{ toYaml .Values.resources.limits | indent 12 }}
          requests:
{{ toYaml .Values.resources.requests | indent 12 }}
          {{- end }}
      {{- if .Values.image.secret }}
      imagePullSecrets:
      - name: {{ .Values.image.secret }}
      {{- end }}
      volumes:
      - name: "{{ $fullName }}-{{ .Values.confVolume.name }}"
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
        {{- if .Values.confVolume.existingClaimName }}
          claimName: {{ .Values.confVolume.existingClaimName }}
        {{- else }}
          claimName: {{ $fullName }}-{{ .Values.confVolume.name }}
        {{- end }}
      {{- else }}
        emptyDir: {}
      {{- end }}

