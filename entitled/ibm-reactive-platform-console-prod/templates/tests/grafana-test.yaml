{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{- $grafana := .sch.chart.components.esGrafana.service.name -}}
{{- $grafanaName :=  (include "sch.names.fullCompName" (list . $grafana)) -}}

apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-grafana-test"
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": test-success
  labels:
    app: "{{ .Release.Name }}-grafana-test"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  {{ if .Values.podUID }}
  securityContext:
    runAsNonRoot: true
    runAsUser: {{ .Values.podUID }}
  {{ end }}
  affinity:
{{- include "ibm-reactive-platform-console-prod.nodeaffinity" . | indent 6 }}
  containers:
  - name: {{ .Release.Name }}-grafana-test
    image: "{{ .Values.alpineImage }}:{{ .Values.alpineVersion }}"
    imagePullPolicy: {{ .Values.imagePullPolicy }}
    resources:
      requests:
        memory: "64Mi"
        cpu: "100m"
      limits:
        memory: "64Mi"
    securityContext:
      privileged: false
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: {{ .Values.podUID }} 
      capabilities:
        drop:
          - ALL
    command:
       - /bin/sh
       - -c
       - "echo Connecting to Grafana service {{ $grafana }} 3000; \
         nc -w2 -v {{ $grafanaName }} 3000; \
         echo Test complete"
  restartPolicy: Never
