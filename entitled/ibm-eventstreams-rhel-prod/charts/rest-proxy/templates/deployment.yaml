###############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
# Defines the pod that runs nginx as a rest proxy
###############################################################################
{{- include "sch.config.init" (list . "ports.sch.chart.config.values") | trim -}}
{{ $namePrefix := .sch.chart.components.restproxy.deployment.name -}}
{{ $name := include "sch.names.fullCompName" (list . $namePrefix ) -}}
# Component is 'restproxy'
{{ $compName := .sch.chart.components.restproxy.compName -}}
{{ $labels := include "sch.metadata.labels.standard" (list . $compName (dict "serviceSelector" $namePrefix)) -}}
# Service Account to grant Kubernetes access
{{ $serviceAccount := .sch.chart.components.restproxy.serviceAccount.name -}}
{{ $serviceAccountName := include "sch.names.fullCompName" (list . $serviceAccount ) -}}
# Rest api to connect to
{{ $restService := .sch.chart.components.rest.service.name -}}
{{ $restServiceName := include "sch.names.fullCompName" (list . $restService) -}}
# Rest producer to connect to
{{ $restProducer := .sch.chart.components.restproducer.service.name -}}
{{ $restProducerName := include "sch.names.fullCompName" (list . $restProducer) }}
# Schema Registry to connect to
{{ $schemaRegistryService:= .sch.chart.components.schemaregistry.service.name -}}
{{ $schemaRegistryServiceName := include "sch.names.fullCompName" (list . $schemaRegistryService) }}
# Secret containing certs
{{ $secret := .sch.chart.components.proxy.secret.name -}}
{{ $secretName := include "sch.names.fullCompName" (list . $secret) | quote -}}
# Import port definitions
{{ $ports := .sch.config.ports }}
# Default user for security context
{{ $defaultUser := .sch.securityContext.defaultUser -}}
# k8s configuration
{{ $clusterName := .Values.global.k8s.clusterName -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name | quote }}
  labels:
{{ $labels | indent 4 }}
spec:
  selector:
    matchLabels:
      release: {{ .Release.Name | quote }}
      serviceSelector: {{ $namePrefix | quote }}
  replicas: 1
  template:
    metadata:
      namespace: {{ include "restrict.namespace" (list . .Release.Namespace) }}
      labels:
{{ $labels | indent 8 }}
      annotations:
{{ include "metering" (list . ) | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName | quote }}
      affinity:
{{ include "customNodeaffinity"  (list .) | indent 8 }}
      volumes:
      {{- include "license.accept.ref" . | indent 6 }}
        - name: secret-volume
          secret:
            secretName: {{ $secretName }}
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ $defaultUser }}
      containers:
      - name: "rest-proxy"
        image: {{ include "eventstreams.image" (list . "eventstreams-rest-proxy" .Values.global.image.imageTags.restProxyTag) | quote }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        resources:
          limits:
{{ toYaml .Values.global.resources.restProxy.limits | indent 12 }}
          requests:
{{ toYaml .Values.global.resources.restProxy.requests | indent 12 }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: {{ $defaultUser }}
          capabilities:
              drop:
              - ALL
        ports:
        - name: restendpoint
          containerPort: {{ $ports.restproxy.internal }}
        readinessProbe:
          httpGet:
            path: "/ready"
            port: {{ $ports.restproxy.health }}
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: "/live"
            port: {{ $ports.restproxy.health }}
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 15
        volumeMounts:
        - mountPath: /etc/nginx/ssl
          name: secret-volume
        env:
        - name: API_URL
          value: "https://{{ $restServiceName }}.{{ .Release.Namespace }}.svc.{{ $clusterName }}:{{ $ports.rest.server }}"
        - name: REST_PRODUCER_URL
          value: "https://{{ $restProducerName }}.{{ .Release.Namespace }}.svc.{{ $clusterName }}:{{ $ports.restproducer.server }}/topics"
        - name: SCHEMA_REGISTRY_URL
          value: "https://{{ $schemaRegistryServiceName }}.{{ .Release.Namespace }}.svc.{{ $clusterName }}:{{ $ports.schemaregistry.server }}"
        {{- include "license.accept.env.ref" . | indent 6 }}
