##############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
# Routes for the metrics-proxy (any defined route will be treated as kafka traffic)
###############################################################################
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
# Define a tlsEnabled var from Values.
{{- include "sch.config.init" (list . "tls.sch.chart.config.values") -}}
# import port definitions
{{- include "sch.config.init" (list . "ports.sch.chart.config.values") | trim -}}
{{ $namePrefix := .sch.chart.components.kafka.mproxyConfigMap.name -}}
{{ $name := include "sch.names.fullCompName" (list . $namePrefix) -}}
# Component is 'kafka' as this makes up part of implementing kafka
{{ $compName := .sch.chart.components.kafka.compName -}}
{{ $labels := include "sch.metadata.labels.standard" (list . $compName) -}}
# Index manager service name required by kafka-metrics-proxy
{{ $indexmgrService := .sch.chart.components.indexmgr.service.name -}}
{{ $indexmgrServiceName := include "sch.names.fullCompName" (list . $indexmgrService) -}}
# Collector service name required by kafka-metrics-proxy
{{ $collectorService := .sch.chart.components.collector.service.name -}}
{{ $collectorServiceName := include "sch.names.fullCompName" (list . $collectorService) -}}
{{ $portdefs := .sch.config.ports }}
{{ $tlsEnabled := .sch.config.tlsInternal.enabled | quote }}
{{ $httpProtocol := .sch.config.tlsInternal.httpProtocol }}
# k8s configuration
{{ $clusterName := .Values.global.k8s.clusterName -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $name | quote }}
  labels:
{{ $labels | indent 4 }}
data:
  connectionTimeoutMs: "3600000"
  # Set revision to current time (filling remaining nanoseconds) so config-map is re-read on upgrade
  revision: "{{ .Release.Time.Seconds }}999999999"
  tlsHandshakeTimeoutMs: "10000"
  tarpitDuration: "0"
  traceLevel: "0"
  logFormat: "json"
  updateURL: "{{ $httpProtocol }}://{{ $indexmgrServiceName }}.{{ $.Release.Namespace }}.svc.{{ $clusterName }}:{{ $portdefs.indexmgr.metrics }}/update"
  deletionURL: "{{ $httpProtocol }}://{{ $indexmgrServiceName }}.{{ $.Release.Namespace }}.svc.{{ $clusterName }}:{{ $portdefs.indexmgr.metrics }}/topicDelete"
  sendmetricsURL: "{{ $httpProtocol }}://{{ $collectorServiceName }}.{{ $.Release.Namespace }}.svc.{{ $clusterName }}:{{ $portdefs.collector.api }}/sendmetrics"
  intercept: "true"
  interceptHeaders: "false"
  closeOnSwitch: "true"
  routes: |
    [
     {
        "Port": {{ $portdefs.kafka.externalProxySecure }},
        "Service": "127.0.0.1:{{ $portdefs.kafka.externalSecure }}",
        "TLSIn": {{ $tlsEnabled }},
        "TLSOut": "disabled"
      },
      {
        "Port": {{ $portdefs.kafka.internalEventStreamsSecureIntercept }},
        "Service": "127.0.0.1:{{ $portdefs.kafka.internalEventStreamsSecure }}",
        "TLSIn": "enabled",
        "TLSOut": "disabled"
      },
      {
        "Port": {{ $portdefs.kafka.internalLoopbackIntercept }},
        "Service": "127.0.0.1:{{ $portdefs.kafka.internalLoopback }}",
        "TLSIn": {{ $tlsEnabled }},
        "TLSOut": "disabled"
      }
    ]

