###############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2018, 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
# Kafka network access policy
# Ingress : Proxy, REST on ports defined in advertised listeners, except the INTERNAL one
# Kafka brokers can connect to each other on 9092
###############################################################################
{{ if eq .Values.license "accept" -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{ $namePrefix := .sch.chart.components.kafka.networkPolicy -}}
{{ $name := include "sch.names.fullCompName" (list . $namePrefix ) }}
# import port definitions
{{- include "sch.config.init" (list . "ports.sch.chart.config.values") | trim -}}
{{ $ports := .sch.config.ports }}
{{ $compName := .sch.chart.components.kafka.compName -}}
{{ $compNameZookeeper := .sch.chart.components.zookeeper.compName -}}
{{ $compNameProxy := .sch.chart.components.proxy.compName -}}
{{ $compNameRest := .sch.chart.components.rest.compName -}}
{{ $compNameRestProducer := .sch.chart.components.restproducer.compName -}}
# Only set up network policy for replicator if enabled
{{- $features := fromYaml (include "ibm-eventstreams.features" . ) -}}
{{- $replicatorEnabled := index $features "replicator" "enabled" -}}
{{ $compNameReplicator := .sch.chart.components.replicator.compName -}}
{{ $compNameIndexMgr := .sch.chart.components.indexmgr.compName -}}
{{ $compNameSecurity := .sch.chart.components.security.compName -}}
{{ $compNameCollector := .sch.chart.components.collector.compName -}}
{{ $compNamePrometheus := .sch.chart.components.prometheus.compName -}}
{{ $labels := include "sch.metadata.labels.standard" (list . $compName) }}
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: {{ $name | quote }}
  labels:
{{ $labels | indent 4 }}
spec:
  podSelector:
    matchLabels:
      component: {{ $compName | quote }}
      release: {{ .Release.Name }}
  policyTypes:
  - Ingress
  ingress:
  # connections from the proxy/rest/replicator to the broker
  # there will be a number of these equal to the number of brokers
  - from:
    - podSelector:
        matchLabels:
          component: {{ $compNameRest | quote }}
    ports:
      - protocol: TCP
        port: {{ $ports.kafka.internalEventStreamsSecureIntercept }}
  - from:
    - podSelector:
        matchLabels:
          component: {{ $compNameRestProducer | quote }}
    {{- if $replicatorEnabled }}
    - podSelector:
        matchLabels:
          component: {{ $compNameReplicator | quote }}
    {{- end }}
    ports:
      - protocol: TCP
        port: {{ $ports.kafka.internalLoopbackIntercept }}
  - from:
    - podSelector:
        matchLabels:
          component: {{ $compNameRest | quote }}
    ports:
      - protocol: TCP
        port: {{ $ports.kafka.healthcheck }}
  - from:
    - podSelector:
        matchLabels:
          component: {{ $compNameProxy | quote }}
    ports:
      - protocol: TCP
        port: {{ $ports.kafka.externalProxySecure }}
  # internal broker communication
  - from:
    - podSelector:
        matchLabels:
          component: {{ $compName | quote }}
    ports:
      - protocol: TCP
        port: {{ $ports.kafka.internalKafkaIntercept }}
    {{- if eq .Values.global.security.tlsInternal "disabled" }}
      - protocol: TCP
        port: {{ $ports.kafka.internalKafka }}
    {{- end }}
  # prometheus connections
  - from:
    ports:
      - protocol: TCP
        port: {{ $ports.prometheus.collectorKafka }}
  # jmx connections
  {{- if .Values.kafka.openJMX }}
  - from:
    ports:
      - protocol: TCP
        port: {{ $ports.kafka.jmx }}
  {{- end }}
{{ end -}}
