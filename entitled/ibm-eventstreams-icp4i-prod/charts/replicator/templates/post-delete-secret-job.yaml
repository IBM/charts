###############################################################################
#
# Licensed Materials - Property of IBM
#
# 5737-H33
#
# (C) Copyright IBM Corp. 2018, 2019  All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
# Runs a job to delete the secret used for storing geo-replicator credentials
# (The secret is managed by Jobs outside of the helm lifecycle so the secret
#  is not reset by helm updates & upgrades)
###############################################################################
{{- $features := fromYaml (include "ibm-eventstreams.features" . ) -}}
{{- $replicatorEnabled := index $features "replicator" "enabled" -}}
{{ if $replicatorEnabled -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{- include "sch.config.init" (list . "securitycontext.sch.chart.config.values") | trim -}}
###############################################################################
{{ $namePrefix := .sch.chart.components.replicator.secretDeleterJob.name -}}
{{ $name := include "sch.names.fullCompName" (list . $namePrefix ) -}}
# Component is 'replicator'
{{ $compName := .sch.chart.components.replicator.compName -}}
{{ $labels := include "sch.metadata.labels.standard" (list . $compName) -}}
# Name of the secret to delete
{{ $secretNamePrefix := .sch.chart.components.replicator.credentialsSecret.name -}}
{{ $secretName := include "sch.names.fullCompName" (list . $secretNamePrefix) -}}
# Name of the temporary service account that has permission to delete secrets
{{ $serviceAccount := .sch.chart.components.essential.postDeleteSA.name -}}
{{ $serviceAccountName := include "sch.names.fullCompName" (list . $serviceAccount) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $name | quote }}
  labels:
{{ $labels | indent 4 }}
  annotations:
    # This needs to run after the rest of the release has been
    # deleted, as the replicator deployment depends on the
    # secret this job will delete
    "helm.sh/hook": post-delete
    # We don't delete this if it fails, as the logs may be useful to
    # diagnose a failed install
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
    # The job needs to run after the service account is created
    "helm.sh/hook-weight": "3"
spec:
  activeDeadlineSeconds: 100
  template:
    metadata:
      name: {{ $name | quote }}
      labels:
{{ $labels | indent 8 }}
        job: "post-delete-secret"
    spec:
      serviceAccountName: {{ $serviceAccountName | quote }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
{{- include "sch.security.securityContext" (list . .sch.chart.securitycontexts.pod) | indent 8 }}
      affinity:
{{ include "ibm-eventstreams.customNodeaffinity"  (list .) | indent 8 }}
      restartPolicy: Never
      containers:
        - name: {{ $namePrefix }}
          image: {{ include "eventstreams.image" (list . "eventstreams-kubectl" .Values.global.image.imageTags.kubectlTag) | quote }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          env:
            {{- include "license.accept.env.ref" . | indent 12 }}
          securityContext:
{{- include "sch.security.securityContext" (list . .sch.chart.securitycontexts.containerReadOnlyFilesystem) | indent 12 }}
          command:
            - sh
            - -c
            - >
              if kubectl get secret -n {{ .Release.Namespace }} {{ $secretName }}; then
                echo 'Replicator secret exists in Namespace, deleting secret'
                kubectl delete secret -n {{ .Release.Namespace }} {{ $secretName }}
                echo Done
              else
                echo 'Replicator secret does not exist, delete not required'
              fi
###############################################################################
{{ end -}}
