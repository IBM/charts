###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2017. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
image:
  __metadata:
    label: "Image"
    description: "Image"
  repository:
    __metadata:
      name: "repository"
      label: "Repository"
      description: "Docker image location"
      type: "string"
      immutable: false
      required: true
  tag:
    __metadata:
      name: "tag"
      label: "Tag"
      description: "Docker image tag"
      type: "string"
      immutable: false
      required: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Defaults to 'Always' when the latest tag is specified. Otherwise the default is 'IfNotPresent'."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
      - label: "IfNotPresent"
        value: "IfNotPresent"
  license:
    __metadata:
      name: "license"
      label: "License"
      description: "The license state of the image being deployed. Empty (default) for development or 'accept' if you have previously accepted the production license."
      type: "string"
      immutable: false
      required: false
      options:
      - label: "development"
        value: ""
      - label: "accept"
        value: "accept"
      - label: "core"
        value: "core"
      - label: "base"
        value: "base"
      - label: "nd"
        value: "nd"
  readinessProbe:
    __metadata:
      name: "readinessProbe"
      label: "Readiness Probe"
      description: "Configure when container is ready to start accepting traffic."
      type: "string"
      immutable: false
      required: false
  livenessProbe:
    __metadata:
      name: "livenessProbe"
      label: "Liveness Probe"
      description: "Configure when to restart container."
      type: "string"
      immutable: false
      required: false
  extraEnvs:
    __metadata:
      label: "Additional Environment Variables"
      description: "Additional environment variables that will be set."
      type: "string"
      immutable: false
      required: false
  lifecycle:
    __metadata:
      name: "lifecycle"
      label: "Lifecycle"
      description: "Handlers for the PostStart and PreStop lifecycle events of container."
      type: "string"
      immutable: false
      required: false
  serverOverridesConfigMapName:
    __metadata:
      name: "serverOverridesConfigMapName"
      label: "ConfigMap with server configuration overrides"
      description: "Name of the ConfigMap that contains server configuration overrides (within key 'server-overrides.xml') to configure your Liberty server at deployment."
      type: "string"
      immutable: false
      required: false
  extraVolumeMounts:
    __metadata:
      label: "Extra Volume Mounts"
      description: "Additional Volume Mounts for server pods."
      type: "string"
      immutable: false
      required: false
  security:
    __metadata:
      label: "Security"
      description: "Configure the security attributes of the image"
      type: "string"
      immutable: false
      required: false

resourceNameOverride:
  __metadata:
    label: "Resource Name Override"
    description: "This name will be appended to the release name to form the name of resources created by the chart."
    type: "string"
    required: false

deployment:
  __metadata:
    label: "Deployment"
    description: "Configure Deployment (or StatefulSet if persistence is enabled)"
  annotations:
    __metadata:
      name: "deploymentAnnotations"
      label: "Deployment Annotations"
      description: "Custom deployment annotations."
      type: "string"
      immutable: false
      required: false
  labels:
    __metadata:
      name: "deploymentLabels"
      label: "Deployment Labels"
      description: "Custom deployment labels."
      type: "string"
      immutable: false
      required: false

pod:
  __metadata:
    label: "Pod"
    description: "Configure pods"
  annotations:
    __metadata:
      name: "podAnnotations"
      label: "Pod Annotations"
      description: "Custom pod annotations."
      type: "string"
      immutable: false
      required: false
  labels:
    __metadata:
      name: "podLabels"
      label: "Pod Labels"
      description: "Custom pod labels."
      type: "string"
      immutable: false
      required: false
  extraInitContainers:
    __metadata:
      name: "extraInitContainers"
      label: "Extra Init Containers"
      description: "Additional Init Containers which are run before the containers are started."
      type: "string"
      immutable: false
      required: false
  extraContainers:
    __metadata:
      name: "extraContainers"
      label: "Extra containers"
      description: "Additional containers to be added to the server pods."
      type: "string"
      immutable: false
      required: false
  extraVolumes:
    __metadata:
      label: "Extra Volumes"
      description: "Additional Volumes for server pods."
      type: "string"
      immutable: false
      required: false
  security:
    __metadata:
      label: "Security"
      description: "Configure the security attributes of the pod"
      type: "string"
      immutable: false
      required: false

# Service
service:
  __metadata:
    label: "Service"
    description: "Service"
  type:
    __metadata:
      name: "type"
      label: "Service Type"
      description: "Type of service"
      type: "string"
      immutable: false
      required: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  name:
    __metadata:
      name: "name"
      label: "Name"
      description: "The name of the service."
      type: "string"
      immutable: false
      required: false
  port:
    __metadata:
      name: "port"
      label: "HTTP Port"
      description: "The HTTP port that the container will expose."
      type: "number"
      immutable: false
      required: true
  targetPort:
    __metadata:
      name: "targetPort"
      label: "HTTP Target Port"
      description: "A service can map an incoming HTTP port to the targetPort."
      type: "string"
      immutable: false
      required: false
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable HTTP"
      description: "Specifies whether HTTP protocol is enabled."
      type: "boolean"
      immutable: false
      required: true
  annotations:
    __metadata:
      name: "annotations"
      label: "Service Annotations"
      description: "Custom service annotations"
      type: "string"
      immutable: false
      required: false
  labels:
    __metadata:
      name: "labels"
      label: "Service Label"
      description: "Custom service labels"
      type: "string"
      immutable: false
      required: false
  extraPorts:
    __metadata:
      name: "extraPorts"
      label: "Additional Service Ports"
      description: "List of additional ports that are exposed by this service."
      type: "string"
      immutable: false
      required: false
  extraSelectors:
    __metadata:
      name: "extraSelectors"
      label: "Additional Selectors"
      description: "List of additional label keys and values."
      type: "string"
      immutable: false
      required: false

jmsService:
  __metadata:
    label: "JMS Service"
    description: "JMS Service"
  type:
    __metadata:
      name: "type"
      label: "Service Type"
      description: "Type of service"
      type: "string"
      immutable: false
      required: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  port:
    __metadata:
      name: "port"
      label: "Port"
      description: "The JMS port that the container will expose. This port uses SSL encryption if you enable SSL for this chart."
      type: "number"
      immutable: false
      required: true
  targetPort:
    __metadata:
      name: "targetPort"
      label: "Target port"
      description: "A service can map an incoming JMS port to the targetPort. This port uses SSL encryption if you enable SSL for this chart."
      type: "string"
      immutable: false
      required: false
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable JMS"
      description: "Specifies whether JMS port is enabled."
      type: "boolean"
      immutable: false
      required: true

iiopService:
  __metadata:
    label: "IIOP Service"
    description: "IIOP Service"
  type:
    __metadata:
      name: "type"
      label: "Service Type"
      description: "Type of service"
      type: "string"
      immutable: false
      required: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  nonSecurePort:
    __metadata:
      name: "nonSecurePort"
      label: "Port"
      description: "The IIOP port that the container will expose."
      type: "number"
      immutable: false
      required: true
  nonSecureTargetPort:
    __metadata:
      name: "nonSecureTargetPort"
      label: "Target port"
      description: "A service can map an incoming IIOP port to the targetPort."
      type: "string"
      immutable: false
      required: false
  securePort:
    __metadata:
      name: "securePort"
      label: "Secure Port"
      description: "The secure IIOP port that the container will expose."
      type: "number"
      immutable: false
      required: true
  secureTargetPort:
    __metadata:
      name: "secureTargetPort"
      label: "Secure Target port"
      description: "A service can map an incoming secure IIOP port to the targetPort."
      type: "string"
      immutable: false
      required: false
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable IIOP"
      description: "Specifies whether IIOP port is enabled."
      type: "boolean"
      immutable: false
      required: true

ssl:
  __metadata:
    label: "SSL settings"
    description: "SSL settings"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable SSL"
      description: "Specifies whether SSL is enabled. Set to true if SSL will be enabled via generated SSL configuration or if Liberty is configured to use SSL in the Docker image."
      type: "boolean"
      immutable: false
      required: true
  useClusterSSLConfiguration:
    __metadata:
      name: "useClusterSSLConfiguration"
      label: "Use cluster SSL configuration"
      description: "Set to true if you want to use the generated SSL ConfigMap and secrets. This setting requires you to check 'Create cluster SSL configuration' the very first use. The benefit of reusing the generated SSL configuration between multiple Liberty servers is so that they can easily communicate with each other over SSL. Set to false if the Docker image already has SSL configured."
      type: "boolean"
      immutable: false
      required: true
  createClusterSSLConfiguration:
    __metadata:
      name: "createClusterSSLConfiguration"
      label: "Create cluster SSL configuration"
      description: "Specifies whether to generate Liberty SSL ConfigMap and secrets to be used in the cluster. Only generate the SSL configuration one time. If you generate the configuration a second time, errors might occur."
      type: "boolean"
      immutable: false
      required: true

ingress:
  __metadata:
    label: "Ingress settings"
    description: "Ingress settings"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable Ingress"
      description: "Specifies whether to use Ingress."
      type: "boolean"
      immutable: false
      required: true
  rewriteTarget:
    __metadata:
      name: "rewriteTarget"
      label: "Rewrite target"
      description: "In some scenarios the exposed URL in the backend service differs from the specified path in the Ingress rule. Without a rewrite any request will return 404. To circumvent this, you can set rewrite target to the path expected by the service."
      type: "string"
      immutable: false
      required: true
  path:
    __metadata:
      name: "path"
      label: "Path"
      description: "Path must match the content of an incoming request before the loadbalancer directs traffic to the backend."
      type: "string"
      immutable: false
      required: true
  host:
    __metadata:
      name: "host"
      label: "Host"
      description: "Hostname used to access Liberty via Ingress (e.g. liberty.<icp proxy node address>.nip.io). See chart readme documentation for more details."
      type: "string"
      immutable: false
      required: false
  secretName:
    __metadata:
      name: "secretName"
      label: "Secret name"
      description: "Name of the secret containing Ingress TLS certificate and key. See chart readme documentation for more details."
      type: "string"
      immutable: false
      required: false
  annotations:
    __metadata:
      name: "annotations"
      label: "Ingress Annotations"
      description: "Custom Ingress annotations"
      type: "string"
      immutable: false
      required: false
  labels:
    __metadata:
      name: "labels"
      label: "Ingress Label"
      description: "Custom Ingress labels"
      type: "string"
      immutable: false
      required: false

# Persistence
persistence:
  __metadata:
    label: "Persistence"
    description: "Persistence"
  name:
    __metadata:
      name: "name"
      label: "Name"
      description: "A prefix for the name of the persistence volume claim (PVC). A PVC will not be created unless either 'Persist logs' or 'Persist transaction logs' is checked."
      type: "string"
      immutable: false
      required: true
  size:
    __metadata:
      name: "size"
      label: "Size"
      description: "Size of the volume to hold all the persisted data."
      type: "string"
      immutable: false
      required: true
  fsGroupGid:
    __metadata:
      name: "fsGroupGid"
      label: "File system group ID"
      description: "The file system group ID to use for volumes that support ownership management"
      type: "number"
      immutable: false
      required: false
  useDynamicProvisioning:
    __metadata:
      name: "useDynamicProvisioning"
      label: "Use dynamic provisioning"
      description: "If true, the persistent volume claim will use the storageClassName to bind the volume. If storageClassName is not set, it will use the default storageClass setup by kube Administrator.  If false, the selector will be used for the binding process."
      type: "boolean"
      immutable: false
      required: true
  storageClassName:
    __metadata:
      name: "storageClassName"
      label: "Storage class name"
      description: "Specifies a StorageClass pre-created by the sysadmin. When set to \"\", then the PVC is bound to the default storageClass setup by the Kube Administrator."
      type: "string"
      immutable: false
      required: false
  selector:
    label:
      __metadata:
        name: "selector.label"
        label: "Selector label"
        description: "When matching a PV, the label is used to find a match on the key."
        type: "string"
        immutable: false
        required: false
    value:
      __metadata:
        name: "selector.value"
        label: "Selector value"
        description: "When matching a PV, the value is used to find a match on the value."
        type: "string"
        immutable: false
        required: false

# Logs
logs:
  __metadata:
    label: "Logs"
    description: "Logs"
  persistLogs:
    __metadata:
      name: "persistLogs"
      label: "Persist logs"
      description: "When true, the logs will be persisted to the volume bound according to the persistence parameters."
      type: "boolean"
      immutable: false
      required: true
  persistTransactionLogs:
    __metadata:
      name: "persistTransactionLogs"
      label: "Persist transaction logs"
      description: "Set to true to enable transaction log recovery. The transaction logs will be persisted to the volume bound according to the persistence parameters."
      type: "boolean"
      immutable: false
      required: true
  consoleFormat:
    __metadata:
      name: "consoleFormat"
      label: "Console logging format"
      description: "Specifies container log output format."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "json"
        value: "json"
      - label: "basic"
        value: "basic"
  consoleLogLevel:
    __metadata:
      name: "consoleLogLevel"
      label: "Console logging level"
      description: "Controls the granularity of messages that go to the container log."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "info"
        value: "info"
      - label: "audit"
        value: "audit"
      - label: "warning"
        value: "warning"
      - label: "error"
        value: "error"
      - label: "off"
        value: "off"
  consoleSource:
    __metadata:
      name: "consoleSource"
      label: "Console logging sources"
      description: "Specify sources that are written to the container log. Use a comma separated list for multiple sources."
      type: "string"
      immutable: false
      required: true

microprofile:
  __metadata:
    label: "MicroProfile settings"
    description: "MicroProfile settings"
  health:
    enabled:
      __metadata:
        name: "health.enabled"
        label: "Enable health"
        description: "Specifies whether to use the MicroProfile health endpoint (`/health`) as a readiness probe of the container. Requires HTTP service to be enabled."
        type: "boolean"
        immutable: false
        required: true

monitoring:
  __metadata:
    label: "Monitoring"
    description: "Monitoring"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable monitoring"
      description: "Specifies whether to use Liberty features `monitor-1.0` and `mpMetrics-1.1` to monitor the server runtime environment and application metrics. Requires HTTP service to be enabled."
      type: "boolean"
      immutable: false
      required: true

replicaCount:
  __metadata:
    name: "replicaCount"
    label: "Number of replicas"
    description: "The number of desired replica pods that run simultaneously."
    type: "number"
    immutable: false
    required: true

autoscaling:
  __metadata:
    label: "Automatically scale pods"
    description: "Automatically scale pods"
  enabled:
    __metadata:
      name: "enabled"
      label: "Enable automatic scaling"
      description: "Specifies whether a horizontal pod autoscaler (HPA) is deployed. Note that enabling this field disables the Number of replicas field."
      type: "boolean"
      immutable: false
      required: true
  targetCPUUtilizationPercentage:
    __metadata:
      name: "targetCPUUtilizationPercentage"
      label: "Target CPU utilization percentage"
      description: "Target average CPU utilization (represented as a percentage of requested CPU) over all the pods."
      type: "number"
      immutable: false
      required: true
  minReplicas:
    __metadata:
      name: "minReplicas"
      label: "Minimum number of replicas"
      description: "Lower limit for the number of pods that can be set by the autoscaler."
      type: "number"
      immutable: false
      required: true
  maxReplicas:
    __metadata:
      name: "maxReplicas"
      label: "Maximum number of replicas"
      description: "Upper limit for the number of pods that can be set by the autoscaler.  Cannot be lower than the minimum number of replicas."
      type: "number"
      immutable: false
      required: true

resources:
  __metadata:
    label: "Resources"
    description: "Resources"
  constraints:
    enabled:
      __metadata:
        name: "constraints.enabled"
        label: "Enable constraints"
        description: "Specifies whether the resource constraints in this Helm chart are enabled."
        type: "boolean"
        immutable: false
        required: true
  limits:
    cpu:
      __metadata:
        name: "limits.cpu"
        label: "Maximum CPU"
        description: "Describes the maximum amount of CPU allowed."
        type: "string"
        immutable: false
        required: false
    memory:
      __metadata:
        name: "limits.memory"
        label: "Maximum memory"
        description: "Describes the maximum amount of memory allowed."
        type: "string"
        immutable: false
        required: false
  requests:
    cpu:
      __metadata:
        name: "requests.cpu"
        label: "Minimum CPU"
        description: "Describes the minimum amount of CPU required. Corresponds to requests.cpu in Kubernetes. If not specified it will default to maximum CPU (if specified) or otherwise implementation-defined value."
        type: "string"
        immutable: false
        required: false
    memory:
      __metadata:
        name: "requests.memory"
        label: "Minimum memory"
        description: "Describes the minimum amount of memory required. Corresponds to requests.memory in Kubernetes. If not specified it will default to maximum memory (if specified) or otherwise implementation-defined value."
        type: "string"
        immutable: false
        required: false

## Arch metadata
arch:
  __metadata:
    label: "Architecture scheduling preferences"
    description: "Architecture scheduling preferences"
  amd64:
    __metadata:
      name: "amd64"
      label: "amd64 scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

  ppc64le:
    __metadata:
      name: "ppc64le"
      label: "ppc64le scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

  s390x:
    __metadata:
      name: "s390x"
      label: "s390x scheduling preference"
      description: "Architecture preference for target worker node."
      type: "string"
      immutable: false
      required: true
      options:
      - label: "0 - Do not use"
        value: "0 - Do not use"
      - label: "1 - Least preferred"
        value: "1 - Least preferred"
      - label: "2 - No preference"
        value: "2 - No preference"
      - label: "3 - Most preferred"
        value: "3 - Most preferred"

## Environmental Variables
env:
  __metadata:
    label: "Environmental Variables"
    description: "Environmental Variables"
  jvmArgs:
    __metadata:
      name: "jvmArgs"
      label: "JVM_ARGS"
      description: "Liberty runtime JVM arguments."
      type: "string"
      immutable: false
      required: false

## Session Cache
sessioncache:
  __metadata:
    label: "Session Cache"
    description: "Session Cache"
  hazelcast:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable Hazelcast Session Caching"
        description: "Enable Hazelcast Session Caching by enabling and configuring Liberty feature sessionCaching-1.0 and enabling Hazelcast client provider libraries."
        type: "boolean"
        immutable: false
        required: true
    embedded:
      __metadata:
        name: "embedded"
        label: "Embedded Hazelcast Topology"
        description: "Embedded Hazelcast Topology (true). Client/Server Hazelcast Topology (false)"
        type: "boolean"
        immutable: false
        required: true
    image:
      repository:
        __metadata:
          name: "image.repository"
          label: "Hazelcast Docker image repository"
          description: "Hazelcast Docker image repository for client provider libraries."
          type: "string"
          immutable: false
          required: false
      tag:
        __metadata:
          name: "image.tag"
          label: "Hazelcast Docker image tag"
          description: "Hazelcast Docker image tag for client provider libraries."
          type: "string"
          immutable: false
          required: true
      pullPolicy:
        __metadata:
          name: "image.pullPolicy"
          label: "Hazelcast Docker image pull policy"
          description: "Defaults to 'Always' when the latest tag is specified. Otherwise the default is 'IfNotPresent'."
          type: "string"
          immutable: false
          required: true
          options:
          - label: "Always"
            value: "Always"
          - label: "Never"
            value: "Never"
          - label: "IfNotPresent"
            value: "IfNotPresent"

## Role-Based Access Control
rbac:
  __metadata:
    label: "RBAC roles and bindings"
    description: "RBAC roles and bindings"
  install:
    __metadata:
      name: "install"
      label: "Install"
      description: "Install RBAC roles and bindings"
      type: "boolean"
      immutable: false
      required: true
## OpenID Connect Client
oidcClient:
  __metadata:
    label: "OpenID Connect Client"
    description: "OpenID Connect Client settings that will be passed to the pods as environment variables"
  enabled:
    __metadata:
      label: "Enabled"
      description: "Set to true to enable security using OpenId Connect."
      type: "boolean"
      required: false
  clientId:
    __metadata:
      label: "Client ID"
      description: "The client ID that has been obtained from the OpenId Connect Provider. OIDC_CLIENT_ID pod environment variable."
      type: "string"
      required: false
  clientSecretName:
    __metadata:
      label: "Client secret name"
      description: "The Kubernetes Secret that holds the client secret which has been obtained from the OpenId Connect Provider. OIDC_CLIENT_SECRET pod environment variable."
      type: "string"
      required: false      
  discoveryURL:
    __metadata:
      label: "Discovery URL"
      description: "The discovery URL of the OpenId Connect Provider. OIDC_DISCOVERY_URL pod environment variable."
      type: "string"
      required: false 