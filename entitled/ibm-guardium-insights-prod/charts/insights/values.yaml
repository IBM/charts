affinity: {}
fullnameOverride: ''
global:
  image:
    imagePullSecret: ''
    repository: ''
  serviceAccount: insights-sa
healthCheckPort: '3005'
healthCheckTimeout: 30
image:
  image: insights
  pullPolicy: Always
  repository: image-registry.openshift-image-registry.svc:5000
  tag: release-v2.5.1-2021-02-17-10.26.14-6d9ce6c
  use_repository_namespace: true
insights_env:
  GI_BUILD_TAG: v2.5.2
  NODE_EXTRA_CA_CERTS: /etc/pki/tls/certs/insights-rootca.crt
  REDIS_RETRY_DELAY: '60000'
insights_secrets:
  SESSION_SECRET:
    secretGrouping: insights-redis
    secretGroupingKey: _SESSION_SECRET
  TENANT_USER_SECRET:
    secretGrouping: insights-tenant-user-secret
    secretGroupingKey: _TENANT_USER_SECRET
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
nameOverride: ''
nodeSelector: {}
podContainerSecurityContextParams:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  privileged: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
podRootSecurityContextParams:
  hostIPC: false
  hostNetwork: false
  hostPID: false
readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
readinessTimeout: 30
replicaCount: 2
resources:
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 3m
    memory: 105Mi
servicePorts_ClusterIP:
- enabled: 'true'
  name: default
  port: '443'
  targetPort: '3005'
  type: ClusterIP
tolerations: []
volumes:
- name: db2-scratch-mount
  sourceName: '{{ $.Release.Name }}-ibm-db2u-db2u-meta-storage'
  type: persistentVolumeClaim
volumesMount:
- mountPath: /node_app/src/static/insights_exports
  name: db2-scratch-mount
  readOnly: 'false'
  subPath: scratch/insights-exports
volumes_certsForMount:
  apigateway:
    mountPathPrefix: /node_app/certs/apigateway
  insights:
    mountPathPrefix: /node_app/certs/insights
volumes_filesForMount: {}
volumes_rootCAForMount:
  insights-rootca:
    mountPathPrefix: /etc/pki/tls/certs/
