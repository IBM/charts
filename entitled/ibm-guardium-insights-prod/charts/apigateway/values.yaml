affinity: {}
fullnameOverride: ''
global:
  image:
    imagePullSecret: ''
    repository: ''
  serviceAccount: insights-sa
healthCheckPort: '52756'
healthCheckTimeout: 30
image:
  image: apigateway
  pullPolicy: Always
  repository: image-registry.openshift-image-registry.svc:5000
  tag: release-v2.5.1-2021-02-17-09.34.51-5c791d5
  use_repository_namespace: true
insights_env: {}
insights_secrets: {}
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
nameOverride: ''
nodeSelector: {}
podContainerSecurityContextParams:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  privileged: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
podRootSecurityContextParams:
  hostIPC: false
  hostNetwork: false
  hostPID: false
readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
readinessTimeout: 30
replicaCount: 3
resources:
  limits:
    cpu: 500m
    memory: 75Mi
  requests:
    cpu: 9m
    memory: 22Mi
servicePorts_ClusterIP:
- enabled: 'true'
  name: grpc
  port: '52756'
  targetPort: '52756'
  type: ClusterIP
- enabled: 'true'
  name: https
  port: '8443'
  targetPort: '8443'
  type: ClusterIP
tolerations: []
volumes: []
volumesMount: []
volumes_certsForMount:
  analytics-events:
    mountPathPrefix: /service/certs/analyticsevents
  apigateway:
    mountPathPrefix: /service/certs/apigateway
  assets:
    mountPathPrefix: /service/certs/assets
  audit:
    mountPathPrefix: /service/certs/audit
  configuration:
    mountPathPrefix: /service/certs/configuration
  datamart-processor:
    mountPathPrefix: /service/certs/datamartprocessor
  group-builder:
    mountPathPrefix: /service/certs/groupbuilder
  guardium-connector:
    mountPathPrefix: /service/certs/guardiumconnector
  health-collector:
    mountPathPrefix: /service/certs/healthcollector
  jumpbox:
    mountPathPrefix: /service/certs/jumpbox
  notifications:
    mountPathPrefix: /service/certs/notifications
  pipeline-config:
    mountPathPrefix: /service/certs/pipelineconfig
  reports:
    mountPathPrefix: /service/certs/reports
  reports-runner:
    mountPathPrefix: /service/certs/reportsrunner
  risk-register:
    mountPathPrefix: /service/certs/riskregister
  scheduler:
    mountPathPrefix: /service/certs/scheduler
  streams:
    mountPathPrefix: /service/certs/streams
  tenant-user:
    mountPathPrefix: /service/certs/tenantuser
  ticketing:
    mountPathPrefix: /service/certs/ticketing
volumes_filesForMount: {}
volumes_rootCAForMount:
  insights-rootca:
    mountPathPrefix: /etc/pki/tls/certs/
