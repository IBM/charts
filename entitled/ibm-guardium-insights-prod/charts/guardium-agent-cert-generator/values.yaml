affinity: {}
fullnameOverride: ''
global:
  image:
    imagePullSecret: ''
    repository: ''
  serviceAccount: insights-sa
healthCheckPort: '33334'
healthCheckTimeout: 30
image:
  image: guardium-agent-cert-generator
  pullPolicy: Always
  repository: image-registry.openshift-image-registry.svc:5000
  tag: release-v2.5.1-2021-02-17-10.34.32-9fe85ad
  use_repository_namespace: true
insights_env: {}
insights_secrets: {}
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
nameOverride: ''
nodeSelector: {}
podContainerSecurityContextParams:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  privileged: false
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001
podRootSecurityContextParams:
  hostIPC: false
  hostNetwork: false
  hostPID: false
readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 60
readinessTimeout: 30
replicaCount: 1
resources:
  limits:
    cpu: 250m
    memory: 50Mi
  requests:
    cpu: 4m
    memory: 2Mi
servicePorts_ClusterIP:
- enabled: 'true'
  name: default
  port: '33334'
  targetPort: '33334'
  type: ClusterIP
tolerations: []
volumes:
- items: []
  name: connector-tls
  sourceName: '{{ $.Release.Name }}-connector-tls'
  type: secret
volumesMount:
- mountPath: /service/guardium/ca/insights.cert.pem
  name: connector-tls
  readOnly: 'false'
  subPath: tls.crt
- mountPath: /service/guardium/ca/private/insights.key.pem
  name: connector-tls
  readOnly: 'false'
  subPath: tls.key
- mountPath: /service/guardium/ca/insightsCA.cert.pem
  name: connector-tls
  readOnly: 'false'
  subPath: ca.crt
volumes_certsForMount:
  guardium-agent-cert-generator:
    mountPathPrefix: /service/certs/guardiumagentcertgenerator
volumes_filesForMount: {}
volumes_rootCAForMount:
  insights-rootca:
    mountPathPrefix: /etc/pki/tls/certs/
