analytics-events:
  resources:
    limits:
      cpu: 75m
      memory: 64Mi
    requests:
      cpu: 19m
      memory: 6Mi
analytics-extract:
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 500Mi
apigateway:
  resources:
    limits:
      cpu: 75m
      memory: 1Gi
    requests:
      cpu: 9m
      memory: 22Mi
arch:
  amd64: 3 - Most preferred
assets:
  resources:
    limits:
      cpu: 75m
      memory: 500Mi
    requests:
      cpu: 22m
      memory: 17Mi
audit:
  resources:
    limits:
      cpu: 75m
      memory: 50Mi
    requests:
      cpu: 10m
      memory: 5Mi
configuration:
  resources:
    limits:
      cpu: 1000m
      memory: 250Mi
    requests:
      cpu: 132m
      memory: 7Mi
data-retention:
  resources:
    limits:
      cpu: 500m
      memory: 250Mi
    requests:
      cpu: 10m
      memory: 7Mi
datamart-processor:
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 25m
      memory: 5Mi
db2-store:
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 8m
      memory: 8Mi
fetch:
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 2000m
      memory: 2Gi
global:
  clusterIssuer: icp-ca-issuer
  dbType: db2wh
  image:
    imagePullSecret: insights-pull-secret
    insightsPullSecret: insights-pull-secret
    pullSecret: insights-pull-secret
    repository: image-registry.openshift-image-registry.svc:5000/insights
  imagePullSecrets:
  - insights-pull-secret
  imageRegistry: image-registry.openshift-image-registry.svc:5000/insights
  insights:
    icp:
      authEndpoint: https://icp-management-ingress.kube-system
    ingress:
      hostName: insights.apps.icp-openshift.ibm.com
    licenseAccept: false
    metering:
      cloudpakId: 6a8f68772f514186b1e6925191018c44
      cloudpakName: IBM Cloud Pak for Security
      cloudpakVersion: 1.3.0.1
      productChargedContainers: All
      productID: 4c49ee7d8da44cf9bf2da48fc8fabb11
      productMetric: RESOURCE_VALUE_UNIT
      productName: IBM Security Guardium Insights
      productVersion: 2.5.2
    nodeAffinity:
      nodeAffinityPreferredDuringScheduling:
        amd64:
          key: beta.kubernetes.io/arch
          operator: In
          weight: 3
      nodeAffinityRequiredDuringScheduling:
        key: beta.kubernetes.io/arch
        operator: In
        values:
        - amd64
  license: false
  sch:
    enabled: false
  storageClass: ''
  tls:
    mongoClientEnabled: false
    mongoServerMode: allowTLS
group-builder:
  resources:
    limits:
      cpu: 100m
      memory: 1Gi
    requests:
      cpu: 6m
      memory: 6Mi
guardium-agent-cert-generator:
  resources:
    limits:
      cpu: 75m
      memory: 50Mi
    requests:
      cpu: 4m
      memory: 2Mi
guardium-connector:
  resources:
    limits:
      cpu: 75m
      memory: 1Gi
    requests:
      cpu: 4m
      memory: 5Mi
health-collector:
  resources:
    limits:
      cpu: 100m
      memory: 500Mi
    requests:
      cpu: 6m
      memory: 50Mi
ibm-db2u:
  dedicated: true
  images:
    db2u:
      replicas: 2
  limit:
    cpu: 10000m
    memory: 40Gi
  mln:
    total: 8
  runtime: ICP4Data
  storage:
    enableVolumeClaimTemplates: true
    storageLocation:
      dataStorage:
        enablePodLevelClaim: true
        enabled: true
        pvc:
          claim:
            size: 40Gi
            storageClassName: ''
            useDynamicProvisioning: true
        volumeName: datavol
        volumeType: pvc
      metaStorage:
        enabled: true
        pvc:
          claim:
            size: 40Gi
            storageClassName: ''
            useDynamicProvisioning: true
        volumeName: metavol
        volumeType: pvc
    useDynamicProvisioning: true
  subType: mpp
ibm-redis:
  auth:
    authSecretName: ibm-redis-authsecret
insights:
  resources:
    limits:
      cpu: 100m
      memory: 1Gi
    requests:
      cpu: 3m
      memory: 105Mi
jumpbox:
  resources:
    limits:
      cpu: 75m
      memory: 50Mi
    requests:
      cpu: 8m
      memory: 3Mi
kafka:
  allowPlaintextListener: true
  auth:
    brokerUser: kafka-broker-user
    certificatesPassword: somevalue
    enabled: false
    existingSecret: bitnami-zk-kafka-authsecret
    interBrokerUser: kafka-interbroker-user
    zookeeperUser: zkuser
  config: 'broker.id=-1

    listeners=PLAINTEXT://:9092

    # Hostname and port the broker will advertise to producers and consumers. If not
    set,

    # it uses the value for "listeners" if configured.  Otherwise, it will use the
    value

    # returned from java.net.InetAddress.getCanonicalHostName().

    #advertised.listeners=PLAINTEXT://staging-kafka-0.staging-kafka-headless.staging.svc.cluster.local:9092

    listener.security.protocol.map=PLAINTEXT:PLAINTEXT

    num.network.threads=9

    num.io.threads=24

    socket.send.buffer.bytes=102400

    socket.receive.buffer.bytes=102400

    socket.request.max.bytes=104857600

    log.dirs=/bitnami/kafka/data

    num.partitions=1

    num.recovery.threads.per.data.dir=1

    offsets.topic.replication.factor=3

    transaction.state.log.replication.factor=3

    transaction.state.log.min.isr=3

    log.flush.interval.messages=10000

    log.flush.interval.ms=1000

    log.retention.hours=168

    log.retention.bytes=1073741824

    log.segment.bytes=1073741824

    log.retention.check.interval.ms=300000

    zookeeper.connect=bitnami-zookeeper

    zookeeper.connection.timeout.ms=6000

    zookeeper.session.timeout.ms=18000

    group.initial.rebalance.delay.ms=0

    default.replication.factor=3

    delete.topic.enable=false

    log.retention.check.intervals.ms=300000

    message.max.bytes=20000000

    port=9092

    ssl.endpoint.identification.algorithm=https

    num.replica.fetchers=3

    replica.fetch.max.bytes=5242880

    replica.fetch.min.bytes=1048576

    replica.fetch.response.max.bytes=20971520

    replica.lag.time.max.ms=30000'
  defaultReplicationFactor: 3
  externalZookeeper:
    servers: bitnami-zookeeper
  image:
    repository: kafka
  listenerSecurityProtocolMap: PLAINTEXT:PLAINTEXT
  maxMessageBytes: '20000000'
  metrics:
    jmx:
      enabled: false
    kafka:
      enabled: false
  offsetsTopicReplicationFactor: 3
  replicaCount: 3
  securityContext:
    enabled: false
  transactionStateLogMinIsr: 3
  transactionStateLogReplicationFactor: 3
  zookeeper:
    enabled: false
mini-snif:
  resources:
    limits:
      cpu: 4000m
      memory: 4Gi
    requests:
      cpu: 2000m
      memory: 4Gi
mongodb:
  existingSecret: insights-mongodb
  image:
    repository: mongodb
  livenessProbe:
    enabled: true
  metrics:
    enabled: false
  mongodbDatabase: tnt_mbr_meta
  mongodbUsername: metadata
  persistence:
    size: 8Gi
  readinessProbe:
    enabled: true
  replicaSet:
    enabled: true
  securityContext:
    enabled: false
notifications:
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 10m
      memory: 6Mi
outlier2:
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 2Gi
outlier2-aggregation:
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 1000m
      memory: 1Gi
pa-alert:
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 1000m
      memory: 1Gi
pa-core:
  resources:
    limits:
      cpu: 1000m
      memory: 3Gi
    requests:
      cpu: 265m
      memory: 117Mi
parquet-store:
  resources:
    limits:
      cpu: 250m
      memory: 2Gi
    requests:
      cpu: 150m
      memory: 1Gi
pipeline-config:
  resources:
    limits:
      cpu: 50m
      memory: 200Mi
    requests:
      cpu: 8m
      memory: 18Mi
recommendation:
  resources:
    limits:
      cpu: 75m
      memory: 1Gi
    requests:
      cpu: 8m
      memory: 8Mi
reports:
  resources:
    limits:
      cpu: 200m
      memory: 1Gi
    requests:
      cpu: 5m
      memory: 4Mi
reports-runner:
  resources:
    limits:
      cpu: 300m
      memory: 2Gi
    requests:
      cpu: 5m
      memory: 4Mi
risk-engine:
  resources:
    limits:
      cpu: 75m
      memory: 1Gi
    requests:
      cpu: 27m
      memory: 72Mi
risk-register:
  resources:
    limits:
      cpu: 100m
      memory: 1Gi
    requests:
      cpu: 7m
      memory: 62Mi
risk-threats:
  resources:
    limits:
      cpu: 75m
      memory: 500Mi
    requests:
      cpu: 6m
      memory: 59Mi
ssh-service:
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 4m
      memory: 1Mi
streams:
  resources:
    limits:
      cpu: 75m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 128Mi
tenant-fetcher:
  resources:
    limits:
      cpu: 75m
      memory: 150Mi
    requests:
      cpu: 8m
      memory: 8Mi
tenant-user:
  resources:
    limits:
      cpu: 150m
      memory: 1Gi
    requests:
      cpu: 9m
      memory: 6Mi
ticketing:
  persistentVolumesClaims:
    ticketing-keystore:
      storageClassName: ''
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
zookeeper:
  auth:
    clientUser: zkuser
    enabled: true
    existingSecret: bitnami-zk-kafka-authsecret
    serverUsers: zkuser
  fullnameOverride: bitnami-zookeeper
  image:
    repository: zookeeper
  metrics:
    enabled: false
    image:
      repository: zookeeper-exporter
  persistence:
    enabled: true
  replicaCount: 3
  securityContext:
    enabled: false
