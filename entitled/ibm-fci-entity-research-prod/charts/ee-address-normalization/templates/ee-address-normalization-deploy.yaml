apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.fullname" . }}
  labels:
{{- include "common.label.metadata" (list . (printf "%s-%s" (include "common.name" .) "ee-address-normalization") (include "common.name" .) .Release.Name .Release.Service ) | indent 4 }}
spec:
  selector:
    matchLabels:
{{- include "common.selector.labels" (list . (printf "%s-%s" (include "common.name" .) "ee-address-normalization") .Release.Name ) | indent 6 }}
  replicas: {{ .Values.eeAddressNormalization.replicas }}
  revisionHistoryLimit: {{required "A valid .Values.revision_history_limit entry required!" .Values.revision_history_limit}}
  template:
    metadata:
      labels:
  {{- include "common.label.metadata" (list . (printf "%s-%s" (include "common.name" .) "ee-address-normalization") (include "common.name" .) .Release.Name .Release.Service ) | indent 8 }}
      annotations:
{{ include "common.meteringAnnotations" . | indent 8}}
    spec:
{{ include "common.PodHostConfig" . | indent 6 }}
      securityContext:
{{ include "common.PodSecurityContextConfig" . | indent 8 }}
      affinity:
{{ include "common.ArchNodeAffinity" . |indent 8}}
      serviceAccountName: {{ template "common.core-release-name" . }}-common
      volumes:
      - name: file-secrets
        secret:
          secretName: {{ template "common.core-release-name" . }}-platform-secret-files
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 6 }}
      {{- end }}
      containers:
        - name: ee-address-normalization
          image: {{ required "global.dockerRegistryPrefix must specify from which repository the docker image should be fetched." .Values.global.dockerRegistryPrefix }}/{{ .Values.eeAddressNormalization.image.repository }}:{{ .Values.eeAddressNormalization.image.tag }}
          imagePullPolicy: {{ .Values.eeAddressNormalization.image.pullPolicy }}
          securityContext:
{{ include "common.RestrictedContainerSecurityContext" . | indent 12 }}
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /health
              port: 8443
            initialDelaySeconds: {{ default 60 .Values.eeAddressNormalization.livenessProbe.initialDelaySeconds }}
            periodSeconds: 30
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health
              port: 8443
            initialDelaySeconds: {{ default 30 .Values.eeAddressNormalization.readinessProbe.initialDelaySeconds }}
            periodSeconds: 30
          envFrom:
            - configMapRef:
                name: {{ template "common.fullname" . }}
          env:
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "common.core-release-name" . }}-mongo-secrets-env
                  key: mongodb-eraas-ees-password
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "common.core-release-name" . }}-platform-secrets-env
                  key: JWT_KEY
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: file-secrets
              mountPath: /opt/app-root/src/ssl/{{ .Values.eeAddressNormalizationConfig.APP_ENV }}/fci_universal_ks.pvtk.pem
              subPath: fci_universal_ks.pvtk.pem
              readOnly: true
            - name: file-secrets
              mountPath: /opt/app-root/src/ssl/{{ .Values.eeAddressNormalizationConfig.APP_ENV }}/fci_universal_ks.crt.pem
              subPath: fci_universal_ks.crt.pem
              readOnly: true
          {{- if .Values.eeAddressNormalization.resources }}
          resources:
            {{- if .Values.eeAddressNormalization.resources.requests }}
            requests:
              {{- if .Values.eeAddressNormalization.resources.requests.memory }}
              memory: {{ .Values.eeAddressNormalization.resources.requests.memory }}
              {{- end}}
              {{- if .Values.eeAddressNormalization.resources.requests.cpu }}
              cpu: {{ .Values.eeAddressNormalization.resources.requests.cpu }}
              {{- end}}
            {{- end}}
            {{- if .Values.eeAddressNormalization.resources.limits }}
            limits:
              {{- if .Values.eeAddressNormalization.resources.limits.memory }}
              memory: {{ .Values.eeAddressNormalization.resources.limits.memory }}
              {{- end}}
              {{- if .Values.eeAddressNormalization.resources.limits.cpu }}
              cpu: {{ .Values.eeAddressNormalization.resources.limits.cpu }}
              {{- end}}
            {{- end}}
          {{- end }}
      restartPolicy: Always