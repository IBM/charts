kind: Service
apiVersion: v1
metadata:
  name: {{ template "uname" . }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ template "uname" . }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    
    app.kubernetes.io/component: icp4i-od-manager
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  selector:
    app.kubernetes.io/name: "{{ template "uname" . }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    
    release: {{ .Release.Name }}
  ports:
  - name: http
    protocol: TCP
    port: {{ .Values.httpPort }}
  - name: transport
    protocol: TCP
    port: {{ .Values.transportPort }}
---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "uname" . }}-headless
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: {{ template "uname" . }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"    
    app.kubernetes.io/component: icp4i-od-manager
    release: {{ .Release.Name }}
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
  annotations:
    # Create endpoints also if the related pod isn't ready
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    Service.spec.publishNotReadyAddresses: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  selector:
    app.kubernetes.io/name: "{{ template "uname" . }}"
  ports:
  - name: http
    port: {{ .Values.httpPort }}
