global:
  cmdKubectl: oc
  ibmRtasCertSecretOptional: true
  ibmRtasImageRegex: '@sha256:.*'
  prometheusDashboard:
    internalURL: http://monitoring-prometheus.kube-system:9090

ingress:
  trailer: ''

networkPolicy:
  enabled: true
  ingress:
    enabled: true
    namespaceLabel: network.openshift.io/policy-group
    namespaceValue: ingress
  prometheus:
    enabled: true
    namespaceLabel: network.openshift.io/policy-group
    namespaceValue: monitoring

route:
  enabled: true

securityContext:
  runAsUser: 1001
  fsGroup: 1001


datasets:
  postgresql:
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
  securityContext:
    runAsUser: 1001
    fsGroup: 1001

execution:
  intercepts:
    clusterRole:
      create: false
    clusterRoleBinding:
      create: false
  postgresql:
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
  securityContext:
    runAsUser: 1001
    fsGroup: 1001
  ingress:
    type: route
    hostPattern: '{{ regexReplaceAll "^([^.]*)" .Values.global.ibmRtasIngressDomain "$1-*" }}'

frontend:
  securityContext:
    runAsUser: 1001
    fsGroup: 1001

rabbitmq:
  podSecurityContext:
    runAsUser: 1001
    fsGroup: 1001

keycloak:
  keycloak:
    containerSecurityContext:
      runAsUser: 1001
    securityContext:
      fsGroup: 1001
  postgresql:
    securityContext:
      runAsUser: 1001
      fsGroup: 1001

postgresql:
  securityContext:
    runAsUser: 1001
    fsGroup: 1001

results:
  postgresql:
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
  securityContext:
    runAsUser: 1001
    fsGroup: 1001

rm:
  postgresql:
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
  securityContext:
    runAsUser: 1001
    fsGroup: 1001

tam:
  postgresql:
    securityContext:
      runAsUser: 1001
      fsGroup: 1001
  securityContext:
    runAsUser: 1001
    fsGroup: 1001

userlibs:
  securityContext:
    runAsUser: 1001
    fsGroup: 1001
