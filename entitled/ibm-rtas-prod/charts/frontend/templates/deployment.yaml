apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "frontend.fullname" . }}
  labels:
{{ include "frontend.labels" . | indent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "frontend.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels: {{ include "frontend.labels" . | nindent 10 }}
      annotations:
        productName: "IBM Rational Test Automation Server"
        productID: "5874d2c1cb5640d091d91b819bf76a45"
        productVersion: "10.1.2"
        productMetric: RESOURCE_UNIT
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: {{ include "frontend.fullname" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{ if .Values.global.ibmRtasRegistryPullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.ibmRtasRegistryPullSecret }}
{{ end }}
    {{- if .Values.extraInitContainers }}
      initContainers:
      {{- with .Values.extraInitContainers }}
        {{- tpl . $ | nindent 8 }}
      {{- end }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
          image: {{ .Values.global.ibmRtasRegistry }}/{{ regexReplaceAll .Values.global.ibmRtasImageRegex .Values.image .Values.global.ibmRtasImageRepl }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
