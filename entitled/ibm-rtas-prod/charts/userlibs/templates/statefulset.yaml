{{- if not .Values.global.ibmRtasUserlibsPersistenceExistingClaim }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "userlibs.fullname" . }}
  labels:
{{ include "userlibs.labels" . | indent 4 }}
spec:
  replicas: 1
  serviceName: userlibs
  volumeClaimTemplates:
  - metadata:
      name: data
    {{- with .Values.persistence.annotations }}
      annotations:
      {{- range $key, $value := . }}
        {{ $key }}: {{ $value }}
      {{- end }}
    {{- end }}
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      {{ printf "storageClassName: \"\"" }}
    {{- else }}
      {{ printf "storageClassName: %s" .Values.persistence.storageClass }}
    {{- end }}
  {{- else if .Values.global.persistence.rwxStorageClass }}
      {{ printf "storageClassName: %s" .Values.global.persistence.rwxStorageClass }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "userlibs.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels: {{ include "userlibs.labels" . | nindent 10 }}
      annotations:
        productName: "IBM Rational Test Automation Server"
        productID: "5874d2c1cb5640d091d91b819bf76a45"
        productVersion: "10.1.2"
        productMetric: RESOURCE_UNIT
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
{{ if .Values.global.ibmRtasRegistryPullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.ibmRtasRegistryPullSecret }}
{{ end }}
      serviceAccountName: {{ include "userlibs.fullname" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
          image: "{{ .Values.global.ibmRtasRegistry }}/{{ .Values.global.ibmRtasInitImage }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          command: [ "/bin/sh", "-c" ]
          args:
          - |
            mkdir -p /data/Camel
            mkdir -p /data/CentraSite
            mkdir -p /data/CICS
            mkdir -p /data/Coherence
            mkdir -p /data/IMS
            mkdir -p /data/Integra
            mkdir -p /data/JDBC
            mkdir -p /data/JMS
            mkdir -p /data/SAP
            mkdir -p /data/SoftwareAGUM
            mkdir -p /data/TIBCO
            mkdir -p /data/WAS
            mkdir -p /data/WebLogicJMX
            mkdir -p /data/webMethods
            mkdir -p /data/WMQ
            mkdir -p /data/tam-ext
            mkdir -p /data/execution-ext
            exec sleep infinity
          volumeMounts:
            - mountPath: /data
              name: data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
