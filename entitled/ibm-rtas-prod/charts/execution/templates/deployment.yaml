apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "execution.fullname" . }}
  labels:
{{ include "execution.labels" . | indent 4 }}
{{- with .Values.annotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "execution.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels: {{ include "execution.labels" . | nindent 10 }}
      annotations:
        productName: "IBM Rational Test Automation Server"
        productID: "5874d2c1cb5640d091d91b819bf76a45"
        productVersion: "10.1.2"
        productMetric: RESOURCE_UNIT
    spec:
      hostIPC: false
      hostNetwork: false
      hostPID: false
      serviceAccountName: {{ include "execution.fullname" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.securityContext.runAsUser }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
{{ if .Values.global.ibmRtasRegistryPullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.ibmRtasRegistryPullSecret }}
{{ end }}
      volumes:
        - name: extlibs
          persistentVolumeClaim:
{{- if .Values.global.ibmRtasUserlibsPersistenceExistingClaim }}
            claimName: {{ .Values.global.ibmRtasUserlibsPersistenceExistingClaim }}
{{- else }}
            claimName: data-{{ .Release.Name }}-userlibs-0
{{- end }}
        - name: config
          configMap:
            name: {{ include "execution.fullname" . }}
{{ if .Values.istio.enabled }}
        - name: istio-config
          configMap:
            name: {{ include "execution.fullname" . }}-istio
{{- end }}
        - name: data
          emptyDir: {}
        - name: trust-store
          emptyDir: {}
        - name: usercerts
          secret:
            secretName: {{ tpl .Values.global.ibmRtasUserCertsSecretName $ }}
            optional: true
        - name: ingress
          secret:
            secretName: {{ tpl .Values.global.ibmRtasCertSecretName $ }}
            optional: {{ .Values.global.ibmRtasCertSecretOptional }}
      initContainers:
        - name: trust-store
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          image: "{{ .Values.global.ibmRtasRegistry }}/{{ .Values.global.ibmRtasInitImage }}"
          command:
            - sh
            - -c
            - |
              cp /opt/java/openjdk/jre/lib/security/cacerts /etc/pki/java/cacerts
              if [ -s /usr/share/pki/ingress/ca.crt ]; then
                keytool -import -noprompt -alias ingress-ca -file /usr/share/pki/ingress/ca.crt -keystore /etc/pki/java/cacerts -storepass changeit
              fi
              find /usr/share/pki/usercerts -maxdepth 1 -name *.crt -exec keytool -import -noprompt -alias {} -file {} -keystore /etc/pki/java/cacerts -storepass changeit \;
              keytool -list -keystore /opt/java/openjdk/jre/lib/security/cacerts -storepass changeit | grep entries
              keytool -list -keystore /etc/pki/java/cacerts -storepass changeit
          volumeMounts:
            - mountPath: /etc/pki/java
              name: trust-store
            - mountPath: /usr/share/pki/usercerts
              name: usercerts
              readOnly: true
            - mountPath: /usr/share/pki/ingress
              name: ingress
              readOnly: true
        - name: pg-isready
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 50m
              memory: 64Mi
          image: "{{ .Values.global.ibmRtasRegistry }}/ibm-rtas-postgresql:11.7.0-debian-10-r90"
          command:
            - sh
            - -c
            - 'until pg_isready -U {{ .Values.postgresql.postgresqlUsername }} -h {{ .Release.Name }}-{{ .Values.postgresql.nameOverride }} -p 5432; do sleep 15; done;'
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: {{ .Values.securityContext.runAsUser }}
          image: {{ .Values.global.ibmRtasRegistry }}/{{ regexReplaceAll .Values.global.ibmRtasImageRegex .Values.image .Values.global.ibmRtasImageRepl }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - name: http
              containerPort: 8281
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 180
            httpGet:
              path: /management/health
              port: http
          readinessProbe:
            httpGet:
              path: /management/health
              port: http
          env:
          {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
          {{- end }}
            - name: CURRENT_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CURRENT_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: JAVA_OPTS
              value: -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8
            - name: SERVER_USE_FORWARD_HEADERS
              value: "true"
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "execution.fullname" . }}
                  key: postgresql-password
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Release.Name }}-{{ .Values.postgresql.nameOverride }}:5432/{{ .Values.postgresql.postgresqlDatabase }}"
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: SPRING_PROFILES_ACTIVE
              value: prod,swagger
            - name: SPRING_RABBITMQ_HOST
              value: '{{ .Release.Name }}-rabbitmq'
            - name: SPRING_RABBITMQ_PORT
              value: '5672'
            - name: SPRING_RABBITMQ_USERNAME
              value: user
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '{{ .Release.Name }}-rabbitmq-custom'
                  key: rabbitmq-password
            - name: EXECUTION_NETWORK
              value: ibm-rtas_default
            - name: EXECUTION_CONTAINER_PREFIX
              value: ibm-rtas_EC_
            - name: EXECUTION_LAUNCH_NAMESPACE
              value: {{ .Release.Namespace }}
            {{ if not .Values.global.ibmRtasIngressDomain }}
            - name: SOLUTION_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-domain
                  key: HOST
            {{ end }}
            - name: EXTERNAL_HOSTNAME
              value: {{ default ( print .Values.global.ibmRtasIngressServiceName ".$(SOLUTION_DOMAIN)" ) .Values.global.ibmRtasIngressDomain }}
            - name: USERLIBS_VOLUME_CLAIM
{{- if .Values.global.ibmRtasUserlibsPersistenceExistingClaim }}
              value: {{ .Values.global.ibmRtasUserlibsPersistenceExistingClaim }}
{{- else }}
              value: data-{{ .Release.Name }}-userlibs-0
{{- end }}
{{- if .Values.global.jaegerAgent.enabled }}
            - name: JAEGER_AGENT_HOST
              value: {{ tpl .Values.global.jaegerAgent.internalHostName $ }}
{{- end }}
          volumeMounts:
            - mountPath: /extlibs/EXEC
              name: extlibs
              subPath: execution-ext
            - mountPath: /cpsdata
              name: data
            - mountPath: /execution/inventory.yml
              name: config
              subPath: inventory.yml
{{ if .Values.istio.enabled }}
            - mountPath: /execution/istio.yml
              name: istio-config
              subPath: istio.yml
{{- end }}
            - mountPath: /opt/java/openjdk/jre/lib/security/cacerts
              subPath: cacerts
              name: trust-store
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
