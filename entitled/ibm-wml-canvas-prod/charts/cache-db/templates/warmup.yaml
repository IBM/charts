# Ensure that the image is pulled/cached to every node in the cluster.
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "cache-db-warmup.fullname" . }}
  annotations:
    build: {{ .Values.global.buildVersion | quote }}
  labels:
    app: {{ template "cache-db-warmup.name" . }}
    chart: {{ template "cache-db.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 4
  template:
    metadata:
      labels:
        app: {{ template "cache-db-warmup.name" . }}
        release: {{ .Release.Name }}
      annotations:
        build: {{ .Values.global.buildVersion | quote }}
    spec:
      # Prefer to not run on a node that already has a warmup pod running on it.
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - "amd64"
                      - "ppc64le"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: release
                  operator: In
                  values:
                  - {{ .Release.Name }}
                - key: app
                  operator: In
                  values:
                  - {{ template "cache-db-warmup.name" . }}
      containers:
      - name: postgres
        image: {{ template "full-image-url" . }}
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 25m
            memory: 100Mi
          requests:
            cpu: 25m
            memory: 100Mi
        # Sleep for 365 days. This pod doesn't actually do anything, just here
        # to pull down the image to the node.
        command: [ "/bin/sh", "-c", "sleep 365d" ]
      {{ if .Values.global.docker.useImagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.imagePullSecretName }}
      {{ end }}
      # Mount the PVC so the warmup runs on nodes that have access to the PVC.
      # Especially applicable to MZR in cloud where the PVC is only accessible
      # from a single zone.
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "cache-db.fullname" . }}
