{{- if .Values.runtimes.preloadRuntimes }}
kind: Job
apiVersion: batch/v1
metadata:
  name: preload-jupyterdsxd8a2ls2x
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  parallelism: {{ .Values.runtimes.workerNodes }}
  completions: {{ .Values.runtimes.workerNodes }}
  template:
    metadata:
      labels:
        component: jupyterdsxd8a2ls2x
        run: preload-jupyterdsxd8a2ls2x
    spec:
      {{- if .Values.global.baseInstaller }}
      nodeSelector:
        is_compute: "true"
      {{- end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - amd64
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: run
                  operator: In
                  values:
                  - preload-jupyterdsxd8a2ls2x
            topologyKey: kubernetes.io/hostname
      containers:
        - name: preload-jupyterdsxd8a2ls2x-container
          image: {{ .Values.jupyterD8a2rls2xShell.image.repository }}:{{ .Values.jupyterD8a2rls2xShell.image.tag }}
          imagePullPolicy: IfNotPresent
          command: ["echo", "Image {{ .Values.jupyterD8a2rls2xShell.image.repository }}:{{ .Values.jupyterD8a2rls2xShell.image.tag }} preloaded"]
      restartPolicy: OnFailure
{{- end }}