apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: cb-cred-svc
  labels:
{{ include "core.labels" .  | indent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      name: cb-cred-svc
  template:
    metadata:
      labels:
        name: cb-cred-svc
{{ include "core.labels" .  | indent 8 }}
      annotations:
{{ include "core.icpMetering" .  | indent 8 }}
    spec:
{{ include "core.imagePullSecrets" .  | indent 6 }}
      affinity:
{{- include "core.nodeaffinity" . | indent 6 }}
{{ include "core.securityContext" .  | indent 6 }}
      containers:
      {{- template "isIcp" . -}}
      {{- if not (.Values.isIcp) }}
      - image: {{ template "core.readConfig" (list . "cb_credential_service") }}
      {{ else }}
      - image: {{ template "coreicp.readConfig" (list . "cb_credential_service" .Values.imageCredentials.registry) }}
      {{ end }}
{{ include "core.container.securityContext" .  | indent 8 }}
        name: cb-cred-svc
        resources:
{{ include "deployClassConfig" (list . "cb_credential_service") | indent 10 }}
        env:
          - name: VAULT_HOST
            value: "https://localhost:8200"
          - name: VAULT_SKIP_VERIFY
            value: "true"
          - name: cloudant_db_host
            value: couchdb
          - name: cloudant_db_port
            value: "5984"
          - name: cloudant_db_protocol
            value: http
          - name: cloudant_db_user
            valueFrom:
              secretKeyRef:
                name: couchdb-creds
                key: couchdb.username
          - name: cloudant_db_password
            valueFrom:
              secretKeyRef:
                name: couchdb-creds
                key: couchdb.password
          - name: DATABASE_NAME
            value: creds-db
          - name: MONGO_URL
            valueFrom:
              secretKeyRef:
                name: mongodb-creds
                key: mongodb.url
          - name: LOGDIR_ROOT
            value: "/usr/src/app/logs"
          - name: AUDIT_SERVICE_HOST
            value: http://cb-audit-service
          - name: AUDIT_SERVICE_PORT
            value: "80"
          - name: AUTHORIZATION_SERVICE_HOST
            value: http://cb-core-authorization-service
          - name: AUTHORIZATION_SERVICE_PORT
            value: "4004"
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: vault-encrypt-key
                key: vault.encryptkey
          # Toggle flag for Provider Account Service API version.
          # To use version 1 falg value v1 and for version 2 is v2
          - name: PAS_Version_Flag
            value: "v1"
          - name: VAULT_ADAPTOR
            value: "true"
        {{ if .Values.httpProxy }}
          # HTTP_PROXY support
          - name: http_proxy
            value: {{ .Values.httpProxy }}
          - name: https_proxy
            value: {{ .Values.httpsProxy }}
          - name: no_proxy
            value: "{{ .Release.Namespace }},{{ .Values.noProxy }}"
        {{ end }}
        ports:
        - containerPort: 8000
          name: cb-cred-svc
        readinessProbe:
            tcpSocket:
              port: cb-cred-svc
        livenessProbe:
            httpGet:
              path: /cb-credential-service/api/v2.0/vault/health
              port: cb-cred-svc
            initialDelaySeconds: 10
            periodSeconds: 120
            timeoutSeconds: 20
            failureThreshold: 4
      #vault-hvault container
      {{- template "isIcp" . -}}
      {{- if not (.Values.isIcp) }}
      - image: {{ template "core.readConfig" (list . "cb_vault_hvault") }}
      {{ else }}
      - image: {{ template "coreicp.readConfig" (list . "cb_vault_hvault" .Values.imageCredentials.registry) }}
      {{ end }}
        name: cb-vault-hvault
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: true
          runAsNonRoot: false
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN", "IPC_LOCK", "CHOWN","SETFCAP","SETGID","SETUID"]
            drop:
            - ALL
        resources:
{{ include "deployClassConfig" (list . "cb_vault_hvault") | indent 10 }}
        env:
          - name: VAULT_ADDR
            value: "https://localhost:8200"
        {{ if .Values.httpProxy }}
          # HTTP_PROXY support
          - name: http_proxy
            value: {{ .Values.httpProxy }}
          - name: https_proxy
            value: {{ .Values.httpsProxy }}
          - name: no_proxy
            value: "{{ .Release.Namespace }},{{ .Values.noProxy }}"
        {{ end }}
        ports:
        - containerPort: 8200
          name: cb-vault-hvault
        readinessProbe:
          exec:
            command:
            - vault
            - version
        livenessProbe:
          exec:
            command:
            - vault
            - version
          initialDelaySeconds: 10
          periodSeconds: 120
          timeoutSeconds: 20
          failureThreshold: 4
        volumeMounts:
        - mountPath: /etc/certs
          name: grav-certificates
        - mountPath: /vault/config
          name: core-vault
      # vault-api container
      {{- template "isIcp" . -}}
      {{- if not (.Values.isIcp) }}
      - image: {{ template "core.readConfig" (list . "cb_vault_api") }}
      {{ else }}
      - image: {{ template "coreicp.readConfig" (list . "cb_vault_api" .Values.imageCredentials.registry) }}
      {{ end }}
        name: cb-vault-api
{{ include "core.container.securityContext" .  | indent 8 }}
        resources:
{{ include "deployClassConfig" (list . "cb_vault_api") | indent 10 }}
        env:
          - name: CONNECTION_PROTOCOL
            value: http
          - name: VAULT_PROTOCOL
            value: https
          - name: PORT
            value: "5800"
          - name: HOST
            value: "0.0.0.0"
          - name: VAULT_PORT
            value: "8200"
          - name: VAULT_HOST
            value: "localhost"
          - name: REQUESTS_CA_BUNDLE
            value: /etc/certs/grav.crt
          - name: COUCHDB_HOST
            value: couchdb
          - name: COUCHDB_PORT
            value: "5984"
          - name: COUCHDB_USER
            valueFrom:
              secretKeyRef:
                name: couchdb-creds
                key: couchdb.username
          - name: COUCHDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: couchdb-creds
                key: couchdb.password
          - name: COUCH_DB
            value: vault-db
        {{ if .Values.httpProxy }}
          # HTTP_PROXY support
          - name: http_proxy
            value: {{ .Values.httpProxy }}
          - name: https_proxy
            value: {{ .Values.httpsProxy }}
          - name: no_proxy
            value: "{{ .Release.Namespace }},{{ .Values.noProxy }}"
        {{ end }}
        ports:
        - containerPort: 5800
          name: cb-vault-api
        readinessProbe:
            tcpSocket:
              port: cb-vault-api
        livenessProbe:
            tcpSocket:
              port: cb-vault-api
            initialDelaySeconds: 10
            periodSeconds: 120
            timeoutSeconds: 20
            failureThreshold: 4
        volumeMounts:
          - mountPath: /etc/certs
            name: grav-certificates
      volumes:
        - name: grav-certificates
          secret:
            secretName: grav-certificates
            items:
              - key: grav.crt
                path: grav.crt
              - key: grav.key
                path: grav.key
        - name: core-vault
          secret:
            secretName: core-vault
            items:
             - key: vault.hcl
               path: vault.hcl
      restartPolicy: Always
