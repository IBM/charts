Please wait while the application is getting deployed.

{{- if .Values.global.install.visualmodeler.enabled }}  
VisualModeler would take 4 to 5 minutes to be in Ready state.
1. Run the below command to check the status of VM application server.
  oc get all -l release={{ .Release.Name }},role=vmappserver -n {{ .Release.Namespace }}
  Run the below command to get the status of pods
  oc get pods -l release={{ .Release.Name }},role=vmappserver -n {{ .Release.Namespace }} -o wide
{{- end }}

{{- if .Values.global.install.configurator.enabled }} 
1. Run the below command to check the status of OC application server.
  oc get all -l release={{ .Release.Name }},role=ocappserver -n {{ .Release.Namespace }}
  Run the below command to get the status of pods
  oc get pods -l release={{ .Release.Name }},role=ocappserver -n {{ .Release.Namespace }} -o wide

  To view the logs for a pod, run the below command.
  oc logs <pod name> -n {{ .Release.Namespace }}
{{- end }}

{{- if .Values.global.install.ifs.enabled }}  
1. Run the below command to check the status of IFS application server.
  oc get all -l release={{ .Release.Name }},role=ifsappserver -n {{ .Release.Namespace }}
  Run the below command to get the status of pods
  oc get pods -l release={{ .Release.Name }},role=ifsappserver -n {{ .Release.Namespace }} -o wide

  To view the logs for a pod, run the below command.
  oc logs <pod name> -n {{ .Release.Namespace }}  
{{- end }}

{{- if .Values.global.install.visualmodeler.enabled }}  

2. Access the VisualModeler app by running the following url
{{- if .Values.vmappserver.ingress.enabled }}
{{- $contextList := .Values.vmappserver.ingress.contextRoots | default (list "VisualModeler") -}}
{{- if .Values.vmappserver.ingress.host }}
{{- if .Values.vmappserver.ingress.ssl.enabled }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "https://%s" .Values.vmappserver.ingress.host) $contextList) | indent 2 }}
{{- else }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "http://%s" .Values.vmappserver.ingress.host) $contextList) | indent 2 }}
  echo "Warning: It is recommended to enable SSL"
{{- end }}  
{{- else }}
{{- if .Values.vmappserver.ingress.ssl.enabled }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "https://%s" "<proxy node domain>") $contextList) | indent 2 }}
{{- else }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "http://%s" "<proxy node domain>") $contextList) | indent 2 }}
  echo "Warning: It is recommended to enable SSL"
{{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.vmappserver.service.type }}
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ template "om-chart.fullname" . }})
  echo "VisualModelerTest : https://$NODE_IP:$NODE_PORT/VisualModelerTest"
  echo "Warning: It is recommended to avoid NodePort service, instead Ingress should be enabled with ClusterIP service."
{{- end }}
{{- end }}

{{- if .Values.global.install.configurator.enabled }} 

2. Access the OmniConfigurator app by running the following url
{{- if .Values.ocappserver.ingress.enabled }}
{{- $contextList := .Values.ocappserver.ingress.contextRoots | default (list "ConfiguratorUI") -}}
{{- if .Values.ocappserver.ingress.host }}
{{- if .Values.ocappserver.ingress.ssl.enabled }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "https://%s" .Values.ocappserver.ingress.host) $contextList) | indent 2 }}
{{- else }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "http://%s" .Values.ocappserver.ingress.host) $contextList) | indent 2 }}
  echo "Warning: It is recommended to enable SSL"
{{- end }}  
{{- else }}
{{- if .Values.ocappserver.ingress.ssl.enabled }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "https://%s" "<proxy node domain>") $contextList) | indent 2 }}
{{- else }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "http://%s" "<proxy node domain>") $contextList) | indent 2 }}
  echo "Warning: It is recommended to enable SSL"
{{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.ocappserver.service.type }}
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ template "om-chart.fullname" . }})
  echo "ConfiguratorUI : https://$NODE_IP:$NODE_PORT/ConfiguratorUI"
  echo "Warning: It is recommended to avoid NodePort service, instead Ingress should be enabled with ClusterIP service."
{{- end }}
{{- end }}

{{- if .Values.global.install.ifs.enabled }} 

2. Access the IFS app by running the following url
{{- if .Values.ifsappserver.ingress.enabled }}
{{- $contextList := .Values.ifsappserver.ingress.contextRoots | default (list "IFS") -}}
{{- if .Values.ifsappserver.ingress.host }}
{{- if .Values.ifsappserver.ingress.ssl.enabled }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "https://%s" .Values.ifsappserver.ingress.host) $contextList) | indent 2 }}
{{- else }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "http://%s" .Values.ifsappserver.ingress.host) $contextList) | indent 2 }}
  echo "Warning: It is recommended to enable SSL"
{{- end }}  
{{- else }}
{{- if .Values.ifsappserver.ingress.ssl.enabled }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "https://%s" "<proxy node domain>") $contextList) | indent 2 }}
{{- else }}
{{ include "om-chart.ingress.paths.notes" (list . (printf "http://%s" "<proxy node domain>") $contextList) | indent 2 }}
  echo "Warning: It is recommended to enable SSL"
{{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.ifsappserver.service.type }}
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[1].nodePort}" services {{ template "om-chart.fullname" . }})
  echo "IFS : https://$NODE_IP:$NODE_PORT/IFS"
  echo "Warning: It is recommended to avoid NodePort service, instead Ingress should be enabled with ClusterIP service."
{{- end }}
{{- end }}
