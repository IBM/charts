# Licensed Materials - Property of IBM
# IBM Sterling Configure Price Quote Software (5725-D11)
# (C) Copyright IBM Corp. 2018, 2019 All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
{{- if and .Values.global.license  .Values.global.install.ifs.enabled }}
{{- include "sch.config.init" (list . "om-chart.sch.chart.config.values") }}
{{- $httpPort := .Values.ifsappserver.service.http.port | default 9080 }}
{{- $httpsPort := .Values.ifsappserver.service.https.port | default 9443 }}
{{- $readyProbePeriod := 30 }}
{{- $libertyStartupWrapper := .Values.ifsappserver.config.libertyStartupWrapper }}
{{- $liveProbeBeginDelay := .Values.ifsappserver.livenessCheckBeginAfterSeconds | default 900 }}
{{- $liveProbePeriod := 60 }}
{{- $liveFailRestartSeconds := (mul .Values.ifsappserver.livenessFailRestartAfterMinutes 60) | default 600 }}
{{- $liveFailThreshold := div $liveFailRestartSeconds $liveProbePeriod }}
{{- $jvmOptionsPath := "/config/jvm.options" }}
{{- $sysOverridesPath := "/config/dropins/smcfs.ear/properties.jar/system_overrides.properties" }}
{{- $sysOverridesInitPath := "/opt/ssfs/system_overrides.properties.init" }}
{{- $stdPodLabel := "role" }}
{{- $stdPodLabelVal := "ifsappserver" }}
{{- $custLabels := .Values.ifsappserver.podLabels | default (dict) }}
{{- $varSslEnabled := .Values.ocappserver.ingress.ssl.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "om-chart.fullname" . }}-ifsappserver
  labels:
{{ include "sch.metadata.labels.standard" (list .) | indent 4 }}
spec:
  replicas: {{ .Values.ifsappserver.replicaCount }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "" (set $custLabels $stdPodLabel $stdPodLabelVal)) | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "" (set $custLabels $stdPodLabel $stdPodLabelVal)) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
    spec:
{{- with .Values.ifsappserver.tolerations }}
      tolerations:
{{ toYaml . | indent 6 }}
{{- end }}
      affinity:
{{- include "om-chart.nodeAffinity" (list . .Values.ifsappserver.nodeAffinity) | indent 8 }}
{{- include "om-chart.podAffinity" (list . .Values.ifsappserver.podAffinity) | indent 8 }}
{{- include "om-chart.podAntiAffinity" (list . .Values.ifsappserver.podAntiAffinity $stdPodLabel $stdPodLabelVal) | indent 8 }}
      serviceAccountName: {{ .Values.ifs.serviceAccountName | default "default" }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
        runAsUser: {{ .Values.ifsappserver.runAsUser }}
        fsGroup: {{ .Values.ifs.persistence.securityContext.fsGroup | default 0 }}
        {{- else }}
        supplementalGroups: [{{ .Values.ifs.persistence.securityContext.supplementalGroup | default 0 }}]
        {{- end }}
      {{- if and (.Values.ifsdatasetup.loadFactoryData) (eq .Values.ifsdatasetup.loadFactoryData "install") }}
      initContainers:
      - name: {{ template "om-chart.fullname" . }}-ifsappserver-init
        image: "{{ regexReplaceAll "(^cp\\.(stg\\.)?icr\\.io/)" .Values.global.image.repository "${1}cp/" }}/{{ .Values.ifsappserver.image.name }}:{{ .Values.ifsappserver.image.tag }}"
        securityContext:
          privileged: false
          {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
          runAsUser: {{ .Values.ifsappserver.runAsUser }}
          {{- end }}
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        command: ['/bin/bash', '-c']
        args:
        - 'touch /opt/ssfs/runtime/initfile && while [ -z $(find /shared -maxdepth 1 -newer /opt/ssfs/runtime/initfile -name datasetup.complete) ]; do echo "datasetup not complete $(date +%Y-%m-%d.%H.%M.%S)"; sleep 30; done; echo "datasetup found complete $(date +%Y-%m-%d.%H.%M.%S)"'
        volumeMounts:
        - name: {{ .Values.ifs.persistence.claims.name }}
          mountPath: "/shared"
        - name: {{ .Values.global.persistence.claims.name }}-ifs-cpq
          mountPath: "/omniconfigurator"
      {{- end }}
      {{- if .Values.global.image.pullsecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullsecret }}
      {{- end }}
      containers:
      - name: {{ template "om-chart.fullname" . }}-ifsappserver
        image: "{{ regexReplaceAll "(^cp\\.(stg\\.)?icr\\.io/)" .Values.global.image.repository "${1}cp/" }}/{{ .Values.ifsappserver.image.name }}:{{ .Values.ifsappserver.image.tag }}"
        imagePullPolicy: {{ .Values.ifsappserver.image.pullPolicy }}
        securityContext:
          privileged: false
          {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
          runAsUser: {{ .Values.ifsappserver.runAsUser }}
          {{- end }}
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        command: ["/bin/bash", "-c"]
        args:
        - "/opt/ssfs/processcerts.sh && /opt/ssfs/evaluateEnvs.sh {{ $jvmOptionsPath }}.init {{ $jvmOptionsPath }} && 
        /opt/ssfs/evaluateEnvs.sh {{ $sysOverridesInitPath }} {{ $sysOverridesPath }} && 
        {{ $libertyStartupWrapper }} /opt/ibm/wlp/bin/server run defaultServer"
        envFrom:
          {{- if and $varSslEnabled .Values.vmappserver.ingress.host }}
          - secretRef:
              name: {{ .Values.global.tlskeystoresecret }}
          {{- end }}
        env:
        - name: OM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OM_RELEASE
          value: {{ .Release.Name }}
        - name: consoleadminpassword
          valueFrom:
            secretKeyRef:
              name: {{ .Values.ifs.appSecret }}
              key: consoleadminpassword
        - name: consolenonadminpassword
          valueFrom:
            secretKeyRef:
              name: {{ .Values.ifs.appSecret }}
              key: consolenonadminpassword
        - name: dbpassword
          valueFrom:
            secretKeyRef:
              name: {{ .Values.ifs.appSecret }}
              key: dbpassword
        - name: LOG_FORMAT
          value: {{ .Values.ifs.log.format | default "json" }}
        - name: LOG_DIR
          value: "/omniconfigurator/logs/FieldSales"
{{- with .Values.ifs.envs }}
{{ toYaml . | indent 8 }}
{{- end }}
        ports:
        - name: https
          containerPort: {{ $httpsPort }}
          protocol: TCP
        - name: http
          containerPort: {{ $httpPort }}
          protocol: TCP
        volumeMounts:
        - name: {{ .Values.ifs.persistence.claims.name }}
          mountPath: "/shared"
        - name: {{ .Values.global.persistence.claims.name }}-ifs-cpq
          mountPath: "/omniconfigurator"
        {{- if .Values.ifs.mq.bindingConfigName }}
        - name: binding-config
          mountPath: {{ .Values.ifs.mq.bindingMountPath | quote }}
          subPath: .bindings
        {{- end }}
        - name: server-xml
          mountPath: "/home/default/server1.xml"
          subPath: server.xml
        - name: config
          mountPath: "/opt/ssfs/evaluateEnvs.sh"
          subPath: evaluateEnvs.sh
        - name: config
          mountPath: "{{ $jvmOptionsPath }}.init"
          subPath: jvm.options
        {{- if .Values.ifs.customerOverrides }}
        - name: config
          mountPath: "/config/dropins/smcfs.ear/properties.jar/customer_overrides.properties"
          subPath: customer_overrides.properties
        {{- end }}
        - name: config
          mountPath: "{{ $sysOverridesInitPath }}"
          subPath: system_overrides.properties
        - name: config
          mountPath: "/opt/ssfs/processcerts.sh"
          subPath: processcerts.sh
          {{- if and $varSslEnabled .Values.ocappserver.ingress.host }}
        - name: occerts
          mountPath: "/config/security"
          readOnly: true
          {{- end }}
          {{- if .Values.ifsappserver.importcert.secretname }}
        - name: importcert
          mountPath: "/config/security/importedcert"
          readOnly: true
          {{- end}}
        # - name: host-timezone
        #   mountPath: /etc/localtime
        livenessProbe:
          httpGet:
            path: /smcfs/heartbeat/heartbeat.jsp
            port: {{ $httpPort }}
            scheme: HTTP
          {{- /* give some buffer time to the appserver startup */}}
          initialDelaySeconds: {{ $liveProbeBeginDelay }}
          {{- /* check for liveness every minute */}}
          periodSeconds: {{ $liveProbePeriod }}
          {{- /* A successful http probe must return in less than 1 seconds */}}
          timeoutSeconds: 1
          {{- /* once probing begins keep trying. e.g with 1 min period and 10 tries, restart pod after 10 minutes */}}
          failureThreshold: {{ $liveFailThreshold }}
        readinessProbe:
          httpGet:
            path: /smcfs/heartbeat/heartbeat.jsp
            port: {{ $httpPort }}
            scheme: HTTP
          {{- /* wait for some time (1 mins) before beginning to probe readiness */}}
          initialDelaySeconds: 60
          {{- /* check for readiness every n seconds */}}
          periodSeconds: {{ $readyProbePeriod }}
          {{- /* A successful http probe must return in less than 1 seconds */}}
          timeoutSeconds: 1
          {{- /* keeping max attempts in sync with liveness probe. E.g. if liveness probe starts after 10 minutes
               and takes another 10 minutes to restart pod. keep trying till approx 20 minutes */}}
          failureThreshold: {{ $liveFailThreshold }}
        resources:
{{ toYaml .Values.ifsappserver.resources | indent 10 }}
      volumes:
      - name: {{ .Values.ifs.persistence.claims.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.ifs.persistence.claims.name | lower }}
      - name: {{ .Values.global.persistence.claims.name }}-ifs-cpq
        persistentVolumeClaim:
          claimName: {{ .Values.global.persistence.claims.name  | lower }}
      - name: config
        configMap:
          name: {{ template "om-chart.fullname" . }}-ifsconfig
          items:
          - key: evaluateEnvs.sh
            path: evaluateEnvs.sh
            mode: 0754
          - key: jvm.options
            path: jvm.options
        {{- if .Values.ifs.customerOverrides }}
          - key: customer_overrides.properties
            path: customer_overrides.properties
        {{- end }}
          - key: system_overrides.properties
            path: system_overrides.properties
          - key: processcerts.sh
            path: processcerts.sh
            mode: 0754
      - name: server-xml
        configMap:
          name: {{ .Values.ifsappserver.config.libertyServerXml | default (printf "%s-%s" (include "om-chart.fullname" .) "def-server-xml-conf" ) }}
      - name: secret
        secret:
          secretName: {{ .Values.ifs.appSecret }}
        {{- if .Values.ifs.mq.bindingConfigName }}
      - name: binding-config
        configMap:
          name: {{ .Values.ifs.mq.bindingConfigName }}
      {{- end }}
        {{- if and $varSslEnabled .Values.ocappserver.ingress.host }}
      - name: occerts
        secret:
          secretName: {{ .Values.ocappserver.ingress.ssl.secretname }}
      {{- end }}
      {{- if .Values.ifsappserver.importcert.secretname }}
      - name: importcert
        secret:
          secretName: {{ .Values.ifsappserver.importcert.secretname }}
          {{- end }}
      # - name: host-timezone
      #   hostPath:
      #     path: /etc/localtime
{{- end }}
