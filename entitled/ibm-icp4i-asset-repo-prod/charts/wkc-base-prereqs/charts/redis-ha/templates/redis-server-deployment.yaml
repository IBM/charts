{{- include "sch.config.init" (list . "sch.chart.config.values") }}
{{- $labels := include "sch.metadata.labels.standard" (list . "server") }}
{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  # Pay attention to the redis-role label at runtime. The self-determination logic in the image sets this value accordingly.
  name: {{ template "redis-ha.fullname" . }}-server
  labels:
    name: {{ template "redis-ha.fullname" . }}-server
    redis-node: "true"
{{ $labels | indent 4 }}
spec:
  replicas: {{ .Values.replicas.servers }}
  selector:
    matchLabels:
      app: {{ template "redis-ha.name" . }}
      release: {{ .Release.Name }}
      component: server
      name: {{ template "redis-ha.fullname" . }}-server
      redis-node: "true"
      chart: {{ .Chart.Name }}
      heritage: {{ .Release.Service }}
  template:
    metadata:
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
      labels:
        app: {{ template "redis-ha.name" . }}
        release: {{ .Release.Name }}
        component: server
        name: {{ template "redis-ha.fullname" . }}-server
        redis-node: "true"
        chart: {{ .Chart.Name }}
        heritage: {{ .Release.Service }}
    spec:
      serviceAccountName: {{ template "redis-ha.serviceAccountName" . }}
      {{- if .Values.global.images.pullSecret }}
      imagePullSecrets:
       - name: {{ .Values.global.images.pullSecret }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      affinity:
      {{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        {{- if eq .Values.podAntiAffinity.server "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: {{ template "redis-ha.name" . }}
                release: {{ .Release.Name }}
                component: server
            topologyKey: kubernetes.io/hostname
        {{- else if eq .Values.podAntiAffinity.server "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: {{ template "redis-ha.name" . }}
                  release: {{ .Release.Name }}
                  component: server
              topologyKey: kubernetes.io/hostname
      {{- end }}
      containers:
      - name: redis
        image: {{ trimSuffix "/" .Values.global.images.registry }}/{{ .Values.global.images.redis }}
        resources:
{{ toYaml .Values.resources.server | indent 10 }}
        env:
          - name: REDIS_SENTINEL_SERVICE_HOST
            value: "redis-sentinel"
          - name: REDIS_CHART_PREFIX
            value: {{ template "redis-ha.fullname" . }}-
{{- if .Values.auth }}
          - name: REDIS_PASS
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "redis-ha-secret") }}
                key: auth
{{- end }}
        ports:
          - containerPort: 6379
        volumeMounts:
          - mountPath: /redis-master-data
            name: data
      volumes:
      - name: data
{{- end }}
      securityContext:
        runAsUser: 0
