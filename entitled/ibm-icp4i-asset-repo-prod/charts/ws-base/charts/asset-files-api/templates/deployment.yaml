---
# Source: ws-icp4d-dev/templates/deployment.yaml
{{- include "sch.config.init" (list . "sch.chart.config.values") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-asset-files-api
  labels:
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app: {{ .Release.Name }}-asset-files-api
    chart: ws-icp4d-dev-0.0.1
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 480
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 40%
    type: "RollingUpdate"
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      app: {{ .Release.Name }}-asset-files-api
      chart: ws-icp4d-dev-0.0.1
      environment: mycluster
  template:
    metadata:
      annotations:
        {{- if .Values.global.productionDeployment }}
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.meteringProd) | indent 8 }}
        {{- else }}
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.meteringNonProd) | indent 8 }}
        {{- end }}
      labels:
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        app: {{ .Release.Name }}-asset-files-api
        chart: ws-icp4d-dev-0.0.1
        environment: mycluster
    spec:
      securityContext:
        fsGroup: 3000
      imagePullSecrets:
        - name: {{ .Values.global.images.pullSecret }}
      affinity:
      {{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "{{ .Release.Name }}-asset-files-api"
              topologyKey: kubernetes.io/hostname
            weight: 100
      {{- if .Values.global.initVolumeAsRoot }}
      initContainers:
      - command:
        - bash
        - -c
        - |
          groupadd --gid 2000 node
          useradd -u 1000 -g 2000 -c 'Node User' -d /home/node -s /bin/bash node
          chown -R node:node /home/node
          mkdir -p /mnt/asset_file_api
          chown node:node /mnt/asset_file_api
          chmod ug+rwx /mnt/asset_file_api
        image: {{ trimSuffix "/" .Values.global.images.registry }}/{{ .Values.global.images.configurator }}
        imagePullPolicy: IfNotPresent
        name: init-container
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 250m
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - FOWNER
            - DAC_OVERRIDE
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 0
          seLinuxOptions:
            type: spc_t
        volumeMounts:
        - mountPath: /mnt/asset_file_api
          name: file-api-pv
      {{- end }}
      containers:
      - name: {{ .Release.Name }}-asset-files-api
        image: {{ trimSuffix "/" .Values.global.images.registry }}/{{ .Values.global.images.assetFilesApi }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 250m
        ports:
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/monitor"
            port: 8443
            scheme: "HTTPS"
          initialDelaySeconds: 180
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: "/monitor"
            port: 8443
            scheme: "HTTPS"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 5
          initialDelaySeconds: 200
        env:
          - name: CUSTOM_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "wdp-config") }}
                key: host
          - name: ZEN_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "wdp-config") }}
                key: icp4d-host
          - name: "PROPERTY_PREFIX"
            value: "icip_dev_"
          - name: K8S
            value: "true"
          - name: DEPLOYMENT_TARGET
            value: "cloud"
          - name: PRODUCT_NAME
            value: "icip"
          - name: NODE_TLS_REJECT_UNAUTHORIZED
            value: "0"
          - name: auth__certs__selfSignedCert
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "int-tls-secret") }}
                key: tls-double-encoded.crt
          - name: auth__certs__selfSignedKey
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "int-tls-secret") }}
                key: tls-double-encoded.key
          - name: TENANT_TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: CLOUDANT_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: username
          - name: CLOUDANT_DOMAIN
            value: "wdp-cloudant"
          - name: CLOUDANT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: password
          - name: CRYPTO_PASSWORD_IV
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: SESSION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__watson__studio__session__key
          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: REDISSTORE_ENCRYPTION_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: WDP_SERVICE_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-service-id
                key: {{ .Release.Namespace }}-id
          - name: WKC_PLAN_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "wkc-plan-cfg") }}
                key: name
          - name: ASSET_STORAGE_ROOT
            value: "/mnt/asset_file_api"
          - name: ACCOUNT_STORAGE_ROOT
            value: "/mnt/asset_file_api"
          - name: PRODUCTION
            value: "true"
          - name: IAM_URL
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "configmap") }}
                key: iamUrl
          - name: CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "oidc-secret") }}
                key: CLIENT_SECRET
          - name: CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "oidc-secret") }}
                key: CLIENT_ID
        volumeMounts:
        - mountPath: "/mnt/asset_file_api"
          name: file-api-pv
{{- if .Values.global.assetFilesApi.enable  }}
{{- else }}
      volumes:
        - name: file-api-pv
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-asset-files-api-pvc
            readOnly: false
{{- end }}
