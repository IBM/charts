---
# Source: ws-icp4d-dev/templates/deployment.yaml
{{- include "sch.config.init" (list . "sch.chart.config.values") }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-portal-common-api"
  labels:
    app: {{ .Release.Name }}-portal-common-api
    chart: ws-icp4d-dev-0.0.1
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 480
  replicas: {{ .Values.deployment.replicaCount }}
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 40%
    type: "RollingUpdate"
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-portal-common-api"
      chart: ws-icp4d-dev-0.0.1
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      environment: mycluster
  template:
    metadata:
      annotations:
        {{- if .Values.global.productionDeployment }}
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.meteringProd) | indent 8 }}
        {{- else }}
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.meteringNonProd) | indent 8 }}
        {{- end }}      
      labels:
        app: "{{ .Release.Name }}-portal-common-api"
        chart: ws-icp4d-dev-0.0.1
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        environment: mycluster
    spec:
      {{- if .Values.global.images.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.global.images.pullSecret | quote }}
      {{- end}}
      securityContext:
        runAsUser: 0
      affinity:
      {{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - "{{ .Release.Name }}-portal-common-api"
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - name: {{ .Release.Name }}-portal-common-api
        image: {{ trimSuffix "/" .Values.global.images.registry }}/{{ .Values.global.images.portalCommonApi }}
        imagePullPolicy: {{ .Values.global.images.pullPolicy }}
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 250m
        ports:
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/monitor"
            port: 8443
            scheme: "HTTPS"
          initialDelaySeconds: 180
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: "/monitor"
            port: 8443
            scheme: "HTTPS"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 5
          timeoutSeconds: 5
          initialDelaySeconds: 180
        env:
          - name: CUSTOM_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "wdp-config") }}
                key: host
          - name: ZEN_DOMAIN
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "wdp-config") }}
                key: icp4d-host
          - name: "PROPERTY_PREFIX"
            value: "icip_prod_"
          - name: K8S
            value: "true"
          - name: DEPLOYMENT_TARGET
            value: "cloud"
          - name: PRODUCT_NAME
            value: "cip"
          - name: RABBITMQ_ENABLED
            value: "false"
          - name: NODE_TLS_REJECT_UNAUTHORIZED
            value: "0"
          - name: SELF_SIGNED_CERTIFICATE_BASE64
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "int-tls-secret") }}
                key: tls-double-encoded.crt
          - name: SELF_SIGNED_PRIVATE_KEY_BASE64
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "int-tls-secret") }}
                key: tls-double-encoded.key
          - name: TENANT_TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: CLOUDANT_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: username
          - name: CLOUDANT_DOMAIN
            value: "{{ .Release.Name }}-clt"
          - name: CLOUDANT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: password
          - name: CRYPTO_PASSWORD_IV
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: SESSION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__watson__studio__session__key
          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: REDIS_URL
            value: "redis://{{ .Release.Name }}-redis-ha-master-svc.{{ .Release.Namespace }}.svc:6379"
          - name: REDISSTORE_ENCRYPTION_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: WDP_SERVICE_ID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-service-id
                key: api-key
          - name: WKC_PLAN_NAME
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "wkc-plan-cfg") }}
                key: name
          - name: FILE_SYSTEM_ROOT
            value: "/mnt/asset_file_api"
          - name: PRODUCTION
            value: "true"
          - name: config__cip
            value: "true"
          - name: auth__iamId__icp
            value: "true"
          - name: auth__iamId__iamUrl
            valueFrom:
              configMapKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "configmap") }}
                key: iamUrl
          - name: auth__iamId__clientSecret
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "oidc-secret") }}
                key: CLIENT_SECRET
          - name: auth__iamId__clientId
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "oidc-secret") }}
                key: CLIENT_ID
          - name: auth__crypto__password
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "portal-catalog-secret") }}
                key: config__session__secret
          - name: cloudant__dbOwnerUsername
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: username
          - name: cloudant__username
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: username
          - name: cloudant__apiKeyUsername
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: username
          - name: cloudant__databaseNameSuffix
            value: "{{ .Release.Name }}"
          - name: cloudant__apiKeyPassword
            valueFrom:
              secretKeyRef:
                name: {{ include "sch.names.fullCompName" (list . "cloudant-creds") }}
                key: password
          - name: auth__certs__selfSignedCert
            valueFrom:
              secretKeyRef:
                key: tls-double-encoded.key
                name: {{ include "sch.names.fullCompName" (list . "int-tls-secret") }}
          - name: auth__certs__selfSignedKey
            valueFrom:
              secretKeyRef:
                key: tls-double-encoded.crt
                name: {{ include "sch.names.fullCompName" (list . "int-tls-secret") }}

