{{- include "sch.config.init" (list . "alm.sch.chart.config.values") -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-lm-config"
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
data:
  apollo.json: |-
    {
      "alm.apollo.janus.storage.hostname": "{{ .Release.Name }}-cassandra",
      "alm.apollo.janus.storage.username": "CASSANDRA_USERNAME",
      "alm.apollo.janus.storage.password": "CASSANDRA_PASSWORD",
      "alm.apollo.janus.index.search.hostname": "{{ .Release.Name }}-elasticsearch:9200"
    }
  application.json: |+
    {
      "spring.kafka.bootstrap-servers": [ "{{ .Release.Name }}-kafka:9092" ],
      "spring.cloud.stream.kafka.binder.brokers": "{{ .Release.Name }}-kafka:9092",
      "spring.cloud.stream.kafka.binder.zkNodes": "{{ .Release.Name }}-kafka:9092",
      "spring.data.cassandra.contact-points": "{{ .Release.Name }}-cassandra",
      "spring.data.cassandra.username": "CASSANDRA_USERNAME",
      "spring.data.cassandra.password": "CASSANDRA_PASSWORD"
    }
  conductor.json: |-
    {
      "server.ssl.keyStorePassword":"KEYSTORE_PASSWORD",
      "server.ssl.key-store": "file:/var/lm/certs/keystore.p12"
    }
  daytona.json: |+
    {
      "alm.daytona.zookeeper.connection-string": "{{ .Release.Name }}-zookeeper:2181"
    }
  doki.json: |-
    {
      "alm.doki.janus.storage.hostname": "{{ .Release.Name }}-cassandra",
      "alm.doki.janus.storage.username": "CASSANDRA_USERNAME",
      "alm.doki.janus.storage.password": "CASSANDRA_PASSWORD",
      "alm.doki.janus.index.search.hostname": "{{ .Release.Name }}-elasticsearch:9200"
    }
  galileo.json: |-
    {
      "alm.galileo.janus.storage.hostname": "{{ .Release.Name }}-cassandra",
      "alm.galileo.janus.storage.username": "CASSANDRA_USERNAME",
      "alm.galileo.janus.storage.password": "CASSANDRA_PASSWORD",
      "alm.galileo.janus.index.search.hostname": "{{ .Release.Name }}-elasticsearch:9200",
      "alm.ldu.streams.replication.factor": {{ .Values.global.kafka.clusterSize | quote }},
      "alm.ldu.streams.bootstrap.servers": "{{ .Release.Name }}-kafka:9092"
    }
  ishtar.json: |-
    {
       "alm.ishtar.security.jwtSigningKey": "JWT_SIGNING_KEY",
       "alm.ishtar.packages.projectKafka" : "{{ .Release.Name }}-kafka:9092",
       "server.ssl.keyStorePassword" : "KEYSTORE_PASSWORD",
       "server.ssl.key-store": "file:/var/lm/certs/keystore.p12",
       "alm.ishtar.security.ldap.base": "LDAP_BASE_DN",
       "alm.ishtar.security.ldap.managerDn": "LDAP_BIND_DN",
       "alm.ishtar.security.ldap.managerPassword": "LDAP_ADMIN_PASSWORD",
       "alm.ishtar.security.ldap.passwordAttribute": "LDAP_PASSWORD_ATTR",
       "alm.ishtar.security.ldap.url": "LDAP_URL",
       "alm.ishtar.security.ldap.userSearchBase":"LDAP_SEARCH_BASE",
       "alm.ishtar.security.ldap.userSearchFilter":"LDAP_SEARCH_FILTER",
       "alm" : {
          "roles" : {
           "Portal" : {
              "privileges" : {
                 "NsinstsMgt" : "read,write,execute",
                 "nsDesMgt" : "read",
                 "DeployLocMgt" : "read",
                 "VnfInstsMgt" : "read",
                 "BehvrScenDes" : "read,write",
                 "VduInstsMgt" : "read",
                 "IntentReqslMgt" : "read,execute",
                 "VduGrpMgt" : "read",
                 "BehvrScenExec" : "read,write,execute",
                 "VduDesMgt" : "read"
              },
              "ldapGroups" : [
                 "Portal"
              ]
           },
           "SLMAdmin" : {
              "privileges" : {
                 "DeployLocMgt" : "read,write,execute",
                 "VnfInstsMgt" : "read,write,execute",
                 "VnfDesMgt" : "read,write,execute",
                 "BehvrScenDes" : "read,write",
                 "SlmAdmin" : "read,write,execute",
                 "NsinstsMgt" : "read,write,execute",
                 "IntentReqsOps" : "read,execute",
                 "nsDesMgt" : "read,write,execute",
                 "IntentReqslMgt" : "read,execute",
                 "VduMgt" : "read,write,execute",
                 "BehvrScenExec" : "read,write,execute",
                 "VduGrpMgt" : "read,write,execute",
                 "VduDesMgt" : "read,write,execute",
                 "MaintModeOride" : "read,execute",
                 "VduInstsMgt" : "read,write,execute"
              },
              "ldapGroups" : [
                 "SLMAdmin"
              ]
           },
           "RootSecAdmin" : {
              "privileges" : {
                 "SecAdmin" : "read,write,execute"
              },
              "ldapGroups" : [
                 "RootSecAdmin"
              ]
           },
           "BehaviourScenarioExecute" : {
             "privileges" :  {
               "NsinstsMgt" : "read,write",
               "IntentReqslMgt" : "execute",
               "IntentReqsOps" : "execute"
             }
           },
           "ReadOnly" : {
              "privileges" : {
                 "VduGrpMgt" : "read",
                 "BehvrScenExec" : "read",
                 "VduDesMgt" : "read",
                 "VduMgt" : "read",
                 "VduInstsMgt" : "read",
                 "BehvrScenDes" : "read",
                 "VnfDesMgt" : "read",
                 "VnfInstsMgt" : "read",
                 "DeployLocMgt" : "read",
                 "NsinstsMgt" : "read",
                 "nsDesMgt" : "read"
              },
              "ldapGroups" : [
                 "ReadOnly"
              ]
            }
          }
        }
    }
  nimrod.json: |-
    {
      "ishtar.ribbon.listOfServers": "https://ishtar:8280",
      "server.ssl.keyStorePassword":"KEYSTORE_PASSWORD",
      "server.ssl.key-store": "file:/var/lm/certs/keystore.p12",
      "security.oauth2.client.clientSecret": "NIMROD_CLIENT_SECRET",
      "alm.nimrod.theme.location" : "/var/alm/themes",
      "alm.nimrod.theme.name" : "carbon"
    }
  talledega.json: |-
    {
      "alm.talledega.janus.storage.hostname": "{{ .Release.Name }}-cassandra",
      "alm.talledega.janus.storage.username": "CASSANDRA_USERNAME",
      "alm.talledega.janus.storage.password": "CASSANDRA_PASSWORD",
      "alm.talledega.janus.index.search.hostname": "{{ .Release.Name }}-elasticsearch:9200"
    }
  watchtower.json: |-
    {
      "alm.watchtower.streams.replication.factor": {{ .Values.global.kafka.clusterSize | quote }}
    }
