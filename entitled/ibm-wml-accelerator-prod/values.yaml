# Default values for spark.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
global:
  dockerRegistryPrefix: 
dli:
  enabled: true
  sharedFsStorageClassName: ""
  #sharedFsStorageClassName: "ibmc-file-gold"
  #sharedFsStorageClassName: "portworx-shared-sc"
  tolerationKey:
  tolerationValue:
  tolerationEffect: NoExecute

iks:
  # To use Portworx, use the following values
  #fileStorageClassType: "kubernetes.io/portworx-volume"
  fileStorageClassType: "ibm.io/ibmc-file"
  region: "us-south"
  clustername: "pai-poc-dal-staging2"
  configfile: "/root/.bluemix/plugins/container-service/clusters/pai-poc-dal-staging2/kube-config-dal12-pai-poc-dal-staging2.yml"
  target: "pai-poc"

master:
  repository: wml-accelerator
  tag: 2.1.0
  name: wmlamaster
  cpu: "4000m"
  memory: "4096Mi"
  #imageName: registry.ng.bluemix.net/poweraienterprise/powerai-enterprise:1.2-x86_64
  imagePullPolicy: Always
  sharedStorageClassName: ""
  condaStorageClassName: ""
  existingcondaPVC: ""
  #sharedStorageClassName: "portworx-shared-sc"
  #sharedStorageClassName: "ibmc-file-gold"

#isOcpIr is true if the internal docker registry is used on OCP (OpenShift Container Platform), false otherwise.
isOcpIr: true

#options for CP4D deployment , set isCp4dAddon to true and provide namespace of cp4d as input.
isCp4dAddon: true

sig:
  maxReplicas: 10
  cpu: "1000m"
  memory: "2144Mi"
  gpu: 0
  ssAllocationUnit: 2
  ssAllocationInterval: 120
  defaultSIGName: "wml-ig"
  repository: wml-accelerator-sig
  tag: 2.1.0

cluster:
  type: cp4d
  # On IKS, use type: iks
  # If the etcd persistence service is not created, the service will
  # be created automatically with image in ETCD section.
  ldapServerURI:
  ldapBaseDn: dc=mycluster,dc=icp
  ldapBindDn:
  ldapBindPw:
  #ldapBaseDn: dc=registry.ng.bluemix,dc=net
  #basePort - used as a NodePort for application access - so much be available on all cluster nodes.
  basePort: 30745
  useDynamicProvisioning: false
  ascdDebugPort: 31311
  etcdExternal: false
  etcdEndpoint: ""
  tlsCertificateSecretName: ""
  mgmtNodesLabelKey:
  computeNodesLabelKey:
  maxConcurrence: 7

# Specify architecture
#   3 - Most preferred
arch:
  amd64: "3 - Most preferred"
  ppc64le: "0 - Do not use"

singletons:
  # ALL releases must use the same singleton namespace. Only change this if there are no currently deployed releases and make sure all instances deployed afterward use the same setting.
  # Mismatched singleton namespaces may cause singleton cleanup to fail when the last release is deleted.
  namespace: wmla-singletons
  condaParentHostPath: /var/data/wmla-conda
  setNodesMaxMapCount: false

conda:
  repository: wml-accelerator-conda
  tag: 2.1.0

utils:
  repository: wml-accelerator-utils
  tag: 2.1.0

#MSS values
mss:
  # installFlag is a temperory flag, will remove this when MSS and HPAC is fully tested to be working with WMLA on ICP4D and IKS.
  installFlag: true
  imagePullPolicy: Always

msd:
  repository: wml-accelerator-msd
  tag: 2.1.0

worker:
  repository: wml-accelerator-worker
  tag: 2.1.0
  imagePullPolicy: Always

infoservice:
  repository: wml-accelerator-infoservice
  tag: 2.1.0
  storageClassName: ""

redis:
  repository: privatecloud-redis-repo
  tag: v2.5.0.0-210

  # Temporary values, remove once etcd auth enabled in MSS
etcd:
  repository: etcd-ubi
  tag: v.v3.3.5

hyperkube:
  repository: ose-hyperkube
  tag: v3.11

# HPAC values
hpac:
  namespace: kube-system
  storageClassName: ""

hpcmanager:
  repository: lsf-master
  tag: 10.1.0.9

hpccompute:
  repository: lsf-comp
  tag: 10.1.0.9

helm:
  tlsenabled: "true"
