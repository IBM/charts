{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "sch.names.fullName" (list .) }}-test"
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ include "sch.names.appName" (list .) }}-test
  annotations:
    "helm.sh/hook": test-success
spec:
  hostNetwork: false
  hostPID: false
  hostIPC: false
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
  supplementalGroups:
  {{- range $group := .Values.global.persistence.supplementalGroups }}
    - {{ $group -}}
  {{ end }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: beta.kubernetes.io/arch
            operator: In
            values:
            {{- range $arch := .Values.arch }}
              - {{ $arch -}}
            {{ end }}
  serviceAccountName: {{ .Values.global.rbac.serviceAccountName }}
  containers:
    - name: "{{ include "sch.names.fullName" (list .) }}-test"
      image: {{ include "es.getImageRepo" . | trimSuffix "/" }}/{{ .Values.baseImage.name }}:{{ .Values.baseImage.tag }}
      command: ['/bin/sh']
      args:  ['-c', 'curl -X GET "{{ include "sch.names.fullName" (list .) }}:{{ .Values.httpPort }}/_cat/health?v" | grep green']
      resources:
{{ include "es.minimalPodResources" . | indent 8 }}
      securityContext:
{{ include "es.containerSecurityContext" (list . "") | indent 8 }}
  restartPolicy: Never
