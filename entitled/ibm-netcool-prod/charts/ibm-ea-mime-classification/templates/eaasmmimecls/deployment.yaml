{{- include "sch.config.init" (list . "ibm-ea-mime-classification.sch.chart.config.values") -}}
{{- $compName :=  .sch.chart.components.eaasmmimecls.name -}}
{{- $serviceName := include "sch.names.fullCompName" (list . $compName) -}}
{{- $rootData := fromYaml (include "root.data" .) -}}
{{- $rootMetering := $rootData.metering -}}

{{- if .Values.probableCause.enabled -}}
{{- if .Values.enabled -}}
{{- if .Values.global.integrations.asm.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 6 }}
{{- if  eq .Values.global.environmentSize  "size0" }}
  replicas: 1
{{- else if eq .Values.global.environmentSize "size1" }}
  replicas: 1
{{- else }}
  replicas: 1
{{- end }}
  template:
    metadata:
      annotations:
{{- include "sch.metadata.annotations.metering" (list . $rootMetering "" "" nil) | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
    spec:
      {{- if .Values.global.image.secret }}
      imagePullSecrets:
        - name: {{ .Values.global.image.secret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      volumes:
      - name: cassandra-connection-tmp
        emptyDir:
      affinity:
{{- include "sch.affinity.nodeAffinity" (list . .sch.chart.nodeAffinity) | indent 8 }}
      initContainers:
      - name: "waitforcassandra"
        image: {{ include "ibm-ea-mime-classification.image.url" (list . .Values.image) | quote }}
        command: ["sh", "-c", "i=1; until getent hosts ${CASSANDRA_HOST}; do echo waiting for Cassandra host ${CASSANDRA_HOST} iteration: $i; i=$((i+1)); sleep 2; done;"]
        resources:
{{ include "ibm-ea-mime-classification.comp.size.data" (list . "eaasmmimecls" "resources") | indent 10 }}
{{ include "ibm-ea-mime-classification.psp.securityContext" . | indent 8}}
{{ include "ibm-ea-mime-classification.eaasmmimecls.environment" . | indent 8 }}
      serviceAccountName: {{ .Values.global.rbac.serviceAccountName }}
      containers:
      - name: "serviceconnector"
        image: {{ include "ibm-ea-mime-classification.image.url" (list . .Values.image) | quote }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: 5000
          name: unsecure-port
          protocol: TCP
        volumeMounts:
        - name: cassandra-connection-tmp
          mountPath: /tmp/cassandra-connection
        resources:
{{ include "ibm-ea-mime-classification.comp.size.data" (list . "eaasmmimecls" "resources") | indent 10 }}
{{ include "ibm-ea-mime-classification.eaasmmimecls.environment" . | indent 8 }}
{{ include "ibm-ea-mime-classification.psp.securityContext" . | indent 8}}
{{ include "ibm-ea-mime-classification.eaasmmimecls.probes" . | indent 8 }}
{{- end -}}
{{- end -}}
{{- end -}}
