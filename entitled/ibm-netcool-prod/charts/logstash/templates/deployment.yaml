{{- /*
########################################################################
#
# Licensed Materials - Property of IBM
#
# 5725Q09
#
# (C) Copyright IBM Corp.
#
# 2020 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
########################################################################
*/ -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{- $rootData := fromYaml (include "parent.data" .) }}
{{- $rootMetering := $rootData.metering -}}
{{- $replicas := int ( include "logstash.replicas" . ) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sch.names.fullName" (list .) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  replicas: {{ $replicas }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      annotations:
        {{- include "sch.metadata.annotations.metering" (list . $rootMetering "" "" nil) | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
    spec:
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      supplementalGroups:
      {{- range $group := .Values.global.persistence.supplementalGroups }}
        - {{ $group -}}
      {{ end }}
      serviceAccountName: {{ .Values.global.rbac.serviceAccountName }}
      containers:
      - name: {{ include "sch.names.fullName" (list .) }}
        image: {{ include "logstash.getImageRepo" . | trimSuffix "/" }}/{{.Values.image.name}}{{ include "image.suffix" (list . .Values.image) }}
        imagePullPolicy: {{.Values.global.image.pullPolicy}}
        ports:
        - containerPort: {{ .Values.httpPort }}
        env:
        - name: KAFKA_BROKERS
          value: {{ .Release.Name }}-kafka.{{ .Release.Namespace }}.svc:9092
        - name: ELASTICSEARCH_API
          value: {{ .Release.Name }}-elasticsearch.{{ .Release.Namespace }}.svc:9200
        - name: KAFKA_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-kafka-client-secret
              key: username
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-kafka-client-secret
              key: password
        volumeMounts:
        - mountPath: /home/logstash/logstash/logs
          name: logs
        - mountPath: /home/logstash/logstash/data
          name: data
        - mountPath: /tmp
          name: tmp
        - mountPath: /home/logstash/logstash/config/incidents.conf
          subPath: incidents.conf
          name: config-volume
        - mountPath: /home/logstash/logstash/config/ea-collatedactions.conf
          subPath: ea-collatedactions.conf
          name: config-volume
        - mountPath: /home/logstash/logstash/config/noi-events.conf
          subPath: noi-events.conf
          name: config-volume
        - mountPath: /home/logstash/logstash/config/event-reduction.conf
          subPath: event-reduction.conf
          name: config-volume
        - mountPath: /home/logstash/logstash/config/rba-statistics.conf
          subPath: rba-statistics.conf
          name: config-volume
        - mountPath: /home/logstash/logstash/config/rba-execution-records.conf
          subPath: rba-execution-records.conf
          name: config-volume
        - mountPath: /home/logstash/logstash/config/pipelines.yml
          subPath: pipelines.yml
          name: config-volume
        - mountPath: /home/logstash/logstash/config/logstash.yml
          subPath: logstash.yml
          name: config-volume
        - mountPath: /home/logstash/logstash/config/ea-pattern-metrics-mapping.json
          subPath: ea-pattern-metrics-mapping.json
          name: config-volume
          
        resources:
{{ include "logstash.comp.size.data" (list . "logstash" "resources") | indent 10 }}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.httpPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.httpPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                {{- range $arch := .Values.arch }}
                  - {{ $arch -}}
                {{ end }}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: NotIn
                  values:
                  - {{ include "sch.names.appName" (list .) }}
                - key: release
                  operator: NotIn
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
            weight: 50
      volumes:
        - name: logs
          emptyDir: {}
        - name: data
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: config-volume
          configMap:
            defaultMode: 420
            name: {{ include "sch.names.fullName" (list .) }}-config
