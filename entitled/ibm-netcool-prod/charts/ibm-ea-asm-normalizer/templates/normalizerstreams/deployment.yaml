{{- include "sch.config.init" (list . "ibm-ea-asm-normalizer.sch.chart.config.values") -}}
{{- $compName :=  .sch.chart.components.normalizerstreams.name -}}
{{- $serviceName := include "sch.names.fullCompName" (list . $compName) -}}
{{- $rootData := fromYaml (include "root.data" .) -}}
{{- $rootMetering := $rootData.metering -}}

{{- if .Values.global.integrations.asm.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
spec:
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 6 }}
{{- if  eq .Values.global.environmentSize  "size0" }}
  replicas: 1
{{- else if eq .Values.global.environmentSize "size1" }}
  replicas: 3
{{- else }}
  replicas: 1
{{- end }}
  template:
    metadata:
      annotations:
{{- include "sch.metadata.annotations.metering" (list . $rootMetering) | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
    spec:
      {{- if .Values.global.image.secret }}
      imagePullSecrets:
        - name: {{ .Values.global.image.secret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - name: kafka-streams-tmp
        emptyDir:
      affinity:
{{- include "sch.affinity.nodeAffinity" (list . .sch.chart.nodeAffinity) | indent 8 }}
      initContainers:
      - name: waitforkafka
        image: {{ include "ibm-ea-asm-normalizer.image.url" (list . .Values.image) | quote }}
        command: ["sh", "-c", "i=1; until getent hosts ${KAFKA_HOST}; do echo waiting for kafka $i; i=$((i+1)); sleep 2; done;"]
        resources:
{{ include "ibm-ea-asm-normalizer.comp.size.data" (list . "normalizerstreams" "resources") | indent 10 }}        
{{ include "ibm-ea-asm-normalizer.psp.securityContext" . | indent 8}}
{{ include "ibm-ea-asm-normalizer.normalizerstreams.environment" . | indent 8 }}
      serviceAccountName: {{ .Values.global.rbac.serviceAccountName }}
      containers:
      - name: normalizer
        image: {{ include "ibm-ea-asm-normalizer.image.url" (list . .Values.image) | quote }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        volumeMounts:
        - name: kafka-streams-tmp
          mountPath: /tmp/kafka-streams
        ports:
        - containerPort: 8080
          name: unsecure-port
          protocol: TCP
        livenessProbe:
         exec:
          command:
          - "sh"
          - "-c"
          - >-
             echo "Execuecting command for readness props..." &&
             ls /opt/app/asm-normalizer-service*
         initialDelaySeconds: 1
         periodSeconds: 2   
        readinessProbe:
         exec:
          command:
          - "sh"
          - "-c"
          - >-
             echo "Execuecting command for readness props..." &&
             ls /opt/app/asm-normalizer-service*
         initialDelaySeconds: 1
         periodSeconds: 2            
        resources:
{{ include "ibm-ea-asm-normalizer.comp.size.data" (list . "normalizerstreams" "resources") | indent 10 }}
{{ include "ibm-ea-asm-normalizer.normalizerstreams.environment" . | indent 8 }}
{{ include "ibm-ea-asm-normalizer.psp.securityContext" . | indent 8}}
{{- end -}}
