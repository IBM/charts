{{- /*
########################################################################
#
# Licensed Materials - Property of IBM
#
# 5725Q09
#
# (C) Copyright IBM Corp.
#
# 2018-2019 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
########################################################################
*/ -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sch.names.fullName" (list . 63) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}

spec:
  replicas: {{ include "noi.impact.replicas" (list . .Values.replicaCount )}}
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ .Release.Name }}-{{ .Values.impactgui.service.name }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "image.docker.repository" . -}}/{{- include "image.family" . -}}-{{ .Values.image.name }}-{{- include "image.edition" . -}}{{ include "image.suffix" (list . .Values.image) }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
              add: ["DAC_OVERRIDE","FOWNER","FSETID","SETGID","SETUID","NET_BIND_SERVICE","NET_RAW","AUDIT_WRITE"]

          volumeMounts:
            {{- if .Values.global.persistence.enabled }}
            - name: {{ include "sch.names.persistentVolumeClaimName" (list . "pvc") }}
              mountPath: {{ .Values.impactgui.env.dbPath }}
            {{- end }}
            {{- if and (hasKey .Values.global "hybrid" ) (hasKey .Values.global.hybrid "trustedCAsConfigMapName" ) (ne (toString .Values.global.hybrid.trustedCAsConfigMapName) "" ) }}
            - name: {{ .Values.global.hybrid.trustedCAsConfigMapName }}-volume
              mountPath: /home/netcool/trust-certificates/users
            {{- end }}
            - name: {{ .Release.Name }}-inner-impactgui
              mountPath: /home/netcool/trust-certificates/internal
            - name: {{ .Release.Name }}-share-mount
              mountPath: /share
            - name: {{ .Release.Name }}-{{ include "sch.names.appName" (list .) }}-log4j-props
              mountPath: /space/impactgui.log4j.properties-update
              subPath: impactgui.log4j.properties-update
            - name: {{ .Release.Name }}-{{ include "sch.names.appName" (list .) }}-server-props
              mountPath: /space/server.props-update
              subPath: server.props-update              
          ports:
            - containerPort: {{ .Values.impactgui.internal.impactguiPort }}
            - containerPort: {{ .Values.impactgui.internal.httpPort }}
          env:
            - name: NCISERVERS_REPLICA_COUNT
              value: "{{ include "noi.nciservers.replicas" (list . .Values.replicaCount )}}"
            - name: LICENSE
              value: "{{ .Values.global.license }}"
            - name: EXTERNAL_HOSTNAME
              value:  "impact.{{ .Release.Name }}.{{ .Values.global.cluster.fqdn }}"
            - name: IMPACT_GUI_SERVICE_NAME
              value: "{{ .Release.Name }}-{{ .Values.impactgui.service.name }}"
            - name: IMPACT_SERVERS_DOMAIN_NAME
              value: "{{ .Release.Name }}-{{ .Values.impactcore.subdomain }}"
            - name: IMPACT_SERVER_BASE_HOSTNAME
              value: "{{ .Release.Name }}-nciserver"
            - name: IMPACT_SERVERS_NAMESERVER_PORT
              value: "{{ .Values.impactcore.internal.nameserverPort }}"
            - name: LDAP_SERVICE_NAME
              value: {{ .Release.Name }}-{{ .Values.global.ldapservice.name }}
            - name: LDAP_SERVICE_PORT
              value: "{{ .Values.global.ldapservice.internal.ldapPort }}"
            - name: LDAP_BIND_DN
              value: "{{ .Values.global.ldapservice.internal.bindDN }}"
            - name: LDAP_BASE_DN
              value: "{{ .Values.global.ldapservice.internal.baseDN }}"
            - name: LDAP_USERFILTER
              value: "{{ .Values.global.ldapservice.internal.userFilter }}"
            - name: LDAP_GROUPFILTER
              value: "{{ .Values.global.ldapservice.internal.groupFilter }}"
            - name: LDAP_SERVERTYPE
              value: "{{ .Values.global.ldapservice.internal.serverType }}"
            - name: USERPLUSROLES
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-nciserver-maproles
                  key: allusersandroles
            - name: LDAP_BIND_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-ldap-secret
                  key: LDAP_BIND_PASSWORD
                  optional: false
            - name: IMPACT_ADMIN_PASSWORD 
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-impact-secret
                  key: IMPACT_ADMIN_PASSWORD
                  optional: false
            - name: SSO_DOMAIN
              value: {{- if eq .Values.global.ingress.prefixWithReleaseName  true }} {{ .Release.Name }}.{{ .Values.global.cluster.fqdn }}  {{- else }} {{ .Values.global.cluster.fqdn }} {{- end }}
            - name: LTPA_KEY_FILE
              value: "{{ .Values.sso.internal.ltpaKeyFile }}"
            - name:  LDAP_VERIFY_PASSWORDS
              value: "{{ .Values.global.ldapservice.verifypasswords }}"
            - name: HELM_RELEASE
              value: {{ .Release.Name }} 
          {{- if eq .Values.global.resource.requests.enable true }}
          resources:
{{ include "ibmnoiprod.comp.size.data" (list . "impactgui" "resources") | indent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /ibm/console
              port: {{ .Values.impactgui.internal.impactguiPort }}
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.impactgui.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.impactgui.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.impactgui.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.impactgui.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /ibm/console
              port: {{ .Values.impactgui.internal.impactguiPort }}
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.impactgui.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.impactgui.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.impactgui.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.impactgui.readiness.failureThreshold }}
        - name: configuration-share
          image: {{ include "image.docker.repository" . -}}/{{- include "image.family" . -}}-configuration-share-{{- include "image.edition" . -}}{{ include "config.share.image.suffix" . }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
              add: ["NET_BIND_SERVICE"]
          volumeMounts:
            - name: {{ .Release.Name }}-share-mount
              mountPath: /share
          ports:
            - containerPort: 8000
          env:
          - name: ICP_NOI_SHARED_SYNCFROM_SERVERS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-configuration-share
                key: impactgui
          resources:
{{ include "ibmnoiprod.comp.size.data" (list . "configurationShare" "resources") | indent 12 }} 
          readinessProbe:
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: {{ .Values.impactgui.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.impactgui.readiness.periodSeconds }}
            failureThreshold: {{ .Values.impactgui.readiness.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /
              port: 8000
              scheme: HTTP
            initialDelaySeconds: {{ .Values.impactgui.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.impactgui.liveness.periodSeconds }}
            failureThreshold: {{ .Values.impactgui.liveness.failureThreshold }}
      affinity:
        nodeAffinity:
{{ include "noi.nodeAffinity.arch" . | indent 10 }}
      securityContext:
        fsGroup: 2001
        runAsNonRoot: true
        runAsUser: 1001
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccountName: {{ .Values.global.rbac.serviceAccountName }}
      volumes:
        - name: {{ include "sch.names.persistentVolumeClaimName" (list . "pvc") }}
          {{- if .Values.global.persistence.enabled }}
          persistentVolumeClaim:
          {{- if .Values.pvc.existingClaimName }}
            claimName: {{ .Values.pvc.existingClaimName }}
          {{- else }}
            claimName: {{ include "sch.names.persistentVolumeClaimName" (list . "pvc") }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: {{ .Release.Name }}-share-mount
          emptyDir: {}
        - name: {{ .Release.Name }}-{{ include "sch.names.appName" (list .) }}-log4j-props
          configMap:
            name: {{ .Release.Name }}-{{ include "sch.names.appName" (list .) }}-config
            items:
            - key: impactgui-log4j-props-update
              path: impactgui.log4j.properties-update
        {{- if and (hasKey .Values.global "hybrid" ) (hasKey .Values.global.hybrid "trustedCAsConfigMapName" ) (ne (toString .Values.global.hybrid.trustedCAsConfigMapName) "") }}
        - name: {{ .Values.global.hybrid.trustedCAsConfigMapName }}-volume
          configMap:
            name: {{ .Values.global.hybrid.trustedCAsConfigMapName }}
            defaultMode: 420
            optional: true
        {{- end }}
        - name: {{ .Release.Name }}-{{ include "sch.names.appName" (list .) }}-server-props
          configMap:
            name: {{ .Release.Name }}-{{ include "sch.names.appName" (list .) }}-config
            items:
            - key: server-props-update
              path: server.props-update
        - name: {{ .Release.Name }}-inner-impactgui
          secret:
            secretName: {{ .Release.Name }}-inner-impactgui
            items:
            - key: tls.crt
              path: trust-tls.crt
            - key: tls.key
              path: trust-tls.key
      {{- if .Values.global.image.secret }}  
      imagePullSecrets:
        - name: {{ .Values.global.image.secret }}
      {{- end }}
      initContainers:
        - name: wait4db2ese
          image: {{ include "image.docker.repository" . -}}/{{- include "image.family" . -}}-configuration-share-{{- include "image.edition" . -}}{{ include "config.share.image.suffix" . }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          volumeMounts:
             - name: {{ .Release.Name }}-share-mount
               mountPath: /share
          resources:
{{ include "ibmnoiprod.comp.size.data" (list . "preinstall" "resources") | indent 12 }} 
          env:
          - name: ICP_NOI_SHARED_SYNCFROM_SERVERS
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-configuration-share
                key: impactgui
          - name:  ICP_NOI_SHARED_EXIT_WHEN_FOUND
            value: "True"     
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
              add: ["NET_BIND_SERVICE"]


