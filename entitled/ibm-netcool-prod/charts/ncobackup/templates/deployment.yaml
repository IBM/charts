{{- /*
########################################################################
#
# Licensed Materials - Property of IBM
#
# 5725Q09
#
# (C) Copyright IBM Corp.
#
# 2018-2019 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
########################################################################
*/ -}}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sch.names.fullName" (list . 63) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}

spec:
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
        appClass: objserv
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering "" "" nil) | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
{{ include "noi.nodeAffinity.arch" . | indent 10 }}
        {{- if eq .Values.global.antiAffinity.enabled true }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: appClass
                operator: In
                values:
                - objserv
            topologyKey: "kubernetes.io/hostname"
        {{- end }}
  
      containers:
        - name: {{ .Chart.Name }}-agg-b
          image: {{ include "image.docker.repository" . -}}/{{- include "image.family" . -}}-{{ .Values.image.objserv.name }}-{{- include "image.edition" . -}}{{ include "image.suffix" (list . .Values.image.objserv) }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
              add: ["NET_BIND_SERVICE","NET_RAW"]
          env:
          - name: LICENSE
            value: "{{ .Values.global.license }}"
          - name: NCO_IDUC_LISTENING_HOSTNAME
            value: "{{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-nodeport"
          - name: NCO_IDUC_LISTENING_SERVICE_NAME
            value: "backup-iduc-port"
          - name: OMNIBUS_OS_NAME
            value: "{{ .Values.objserv.name }}"
          - name: OMNIBUS_ROOT_PWD
            valueFrom:
              secretKeyRef:
                name: {{ printf .Values.global.omnisecretname .Release.Name }}
                key: OMNIBUS_ROOT_PASSWORD
                optional: false
          - name: LDAP_SERVICE_NAME
            value: {{ .Release.Name }}-{{ .Values.global.ldapservice.name }}
          - name: LDAP_BIND_DN
            value: "{{ .Values.global.ldapservice.internal.bindDN }}"
          - name: LDAP_BASE_DN
            value: "{{ .Values.global.ldapservice.internal.baseDN }}"
          - name: LDAP_BIND_PWD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-ldap-secret
                key: LDAP_BIND_PASSWORD
                optional: false
          - name: LC_ALL
            value: "{{ .Values.objserv.env.locale }}"
          - name: APP_VERSION
            value: {{ .Chart.AppVersion }}
          - name: LDAP_USERFILTER
            value: {{ .Values.global.ldapservice.internal.userFilter }}
          - name: LDAP_GROUPFILTER
            value: {{ .Values.global.ldapservice.internal.groupFilter }}
            
            
          volumeMounts:
            {{- if .Values.global.persistence.enabled }}
            - name: {{ include "sch.names.persistentVolumeClaimName" (list . "pvc") }}
              mountPath: {{ .Values.objserv.env.dbPath }}
            {{- end }}
            - name: {{ .Release.Name }}-agg-b-props-append
              mountPath: {{ .Values.objserv.env.propsPath }}/{{ .Values.objserv.name }}.props-append
              subPath: {{ .Values.objserv.name }}.props-append
            - name: {{ .Release.Name }}-agg-b-sql-extensions
              mountPath: {{ .Values.objserv.env.propsPath }}/{{ .Values.objserv.name }}-extensions.sql
              subPath: {{ .Values.objserv.name }}-extensions.sql
          ports:
            - containerPort: {{ .Values.objserv.internal.tdsPort }}
            - containerPort: {{ .Values.objserv.internal.iducPort }}
          resources:
          {{- if eq .Values.global.resource.requests.enable true }}
{{ include "ibmnoiprod.comp.size.data" (list . "ncobackup" "resources") | indent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
              - {{ .Values.objserv.liveness.command }}
              - {{ .Values.objserv.name }}
            initialDelaySeconds: {{ .Values.objserv.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.objserv.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.objserv.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.objserv.liveness.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - {{ .Values.objserv.readiness.command }}
              - {{ .Values.objserv.name }}
            initialDelaySeconds: {{ .Values.objserv.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.objserv.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.objserv.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.objserv.readiness.failureThreshold }}
        - name: {{ .Chart.Name }}-agg-gate
          image: {{ include "image.docker.repository" . -}}/{{- include "image.family" . -}}-{{ .Values.image.gateway.name }}-{{- include "image.edition" . -}}{{ include "image.suffix" (list . .Values.image.gateway) }}
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
              add: ["NET_BIND_SERVICE","NET_RAW"]
          args: ["{{ .Release.Name }}-{{ .Values.services.objserv.primary.name }}"]
          env:
          - name: LICENSE
            value: "{{ .Values.global.license }}"
          - name: NCO_AGGP_SERVICE_NAME
            value: {{ .Release.Name }}-{{ .Values.services.objserv.primary.name }}
          - name: NCO_AGGP_SERVICE_PORT
            value: "{{ .Values.objserv.internal.tdsPort }}"
          - name: NCO_AGGB_SERVICE_NAME
            value: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}
          - name: NCO_AGGB_SERVICE_PORT
            value: "{{ .Values.objserv.internal.tdsPort }}"
          - name: NCO_START_DELAY_SECONDS
            value: "30"
          - name: LC_ALL
            value: "{{ .Values.objserv.env.locale }}"
          volumeMounts:
            - name: {{.Release.Name}}-agg-gate-props-append
              mountPath: {{.Values.objserv.env.propsPath}}/{{.Values.aggGate.name}}.props-append
              subPath: {{.Values.aggGate.name}}.props-append
            - name: {{.Release.Name}}-agg-gate-map-replace
              mountPath: {{.Values.objserv.env.propsPath}}/{{.Values.aggGate.name}}.map-replace
              subPath: {{.Values.aggGate.name}}.map-replace
            - name: {{.Release.Name}}-agg-gate-tblrep-def-replace
              mountPath: {{.Values.objserv.env.propsPath}}/{{.Values.aggGate.name}}.tblrep.def-replace
              subPath: {{.Values.aggGate.name}}.tblrep.def-replace
            - name: {{.Release.Name}}-agg-gate-startup-cmd-replace
              mountPath: {{.Values.objserv.env.propsPath}}/{{.Values.aggGate.name}}.startup.cmd-replace
              subPath: {{.Values.aggGate.name}}.startup.cmd-replace
          ports:
            - containerPort: {{ .Values.aggGate.internal.tdsPort }}
          resources:
          {{- if eq .Values.global.resource.requests.enable true }}
{{ include "ibmnoiprod.comp.size.data" (list . "aggGate" "resources") | indent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
              - {{ .Values.aggGate.liveness.command }}
              - {{ .Values.aggGate.name }}
            initialDelaySeconds: {{ .Values.aggGate.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.aggGate.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.aggGate.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.aggGate.liveness.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - ps --pid 1
            initialDelaySeconds: {{ .Values.aggGate.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.aggGate.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.aggGate.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.aggGate.readiness.failureThreshold }}
      volumes:
        - name: {{ include "sch.names.persistentVolumeClaimName" (list . "pvc") }}
        {{- if .Values.global.persistence.enabled }}
          persistentVolumeClaim:
          {{- if .Values.pvc.existingClaimName }}
            claimName: {{ .Values.pvc.existingClaimName }}
          {{- else }}
            claimName: {{ include "sch.names.persistentVolumeClaimName" (list . "pvc") }}
          {{- end }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: {{ .Release.Name }}-agg-b-props-append
          configMap:
            name: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-config
            items:
            - key: agg-b-props-append
              path: {{ .Values.objserv.name }}.props-append
        - name: {{ .Release.Name }}-agg-gate-props-append
          configMap:
            name: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-config
            items:
            - key: agg-gate-props-append
              path: {{ .Values.aggGate.name }}.props-append
        - name: {{ .Release.Name }}-agg-b-sql-extensions
          configMap:
            name: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-config
            items:
            - key: agg-b-sql-extensions
              path: {{ .Values.objserv.name }}-extensions.sql
        - name: {{ .Release.Name }}-agg-gate-map-replace
          configMap:
            name: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-config
            items:
            - key: agg-gate-map-replace
              path: {{ .Values.aggGate.name }}.map-replace
        - name: {{ .Release.Name }}-agg-gate-tblrep-def-replace
          configMap:
            name: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-config
            items:
            - key: agg-gate-tblrep-def-replace
              path: {{ .Values.aggGate.name }}.tblrep.def-replace
        - name: {{ .Release.Name }}-agg-gate-startup-cmd-replace
          configMap:
            name: {{ .Release.Name }}-{{ .Values.services.objserv.backup.name }}-config
            items:
            - key: agg-gate-startup-cmd-replace
              path: {{ .Values.aggGate.name }}.startup.cmd-replace
      {{- if .Values.global.image.secret }}
      imagePullSecrets:
        - name: {{ .Values.global.image.secret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      serviceAccountName: {{ .Values.global.rbac.serviceAccountName }}
      securityContext:
        fsGroup: 2001
