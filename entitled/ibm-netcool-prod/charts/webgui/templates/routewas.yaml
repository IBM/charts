{{- if ( and (.Capabilities.APIVersions.Has "route.openshift.io/v1") ( not ( .Values.global.ingress.api.enabled ))) }}
{{- include "sch.config.init" (list . "sch.chart.config.values") -}}
{{-  $externalHostname := printf "%s%s%s.%s" "was"  .Values.global.urlDelimiter .Release.Name  .Values.global.cluster.fqdn }}
{{-  $cookiename := printf "%s-%s"  "webguiingress"  .Release.Name   }}
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    ingress.kubernetes.io/affinity: cookie
    ingress.kubernetes.io/backend-protocol: HTTPS
    ingress.kubernetes.io/proxy-body-size: "0"
    ingress.kubernetes.io/proxy-read-timeout: "300"
    ingress.kubernetes.io/proxy-send-timeout: "300"
    ingress.kubernetes.io/secure-backends: "true"
    ingress.kubernetes.io/session-cookie-expires: "3600"
    ingress.kubernetes.io/session-cookie-hash: sha1
    ingress.kubernetes.io/session-cookie-name: {{ $cookiename }}
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/session-cookie-expires: "3600"
    nginx.ingress.kubernetes.io/session-cookie-hash: sha1
    nginx.ingress.kubernetes.io/session-cookie-name: {{ $cookiename }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
  name: {{ include "sch.names.fullName" (list .) }}-xyza
spec:
  host: {{ $externalHostname }}
  port:
    targetPort: {{ .Values.webgui.internal.wasPort }}
  subdomain: ""
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: reencrypt
  to:
    kind: Service
    name: {{ include "sch.names.fullName" (list . 63) }}
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - routerName: default
{{ end -}}
