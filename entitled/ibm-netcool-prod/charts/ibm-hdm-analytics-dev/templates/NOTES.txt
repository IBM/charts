Chart successfully deployed.
  
** {{ .Chart.Name }} may take a few minutes to become available. Please be patient. **

Here are the image versions used in this chart:

Inference Service:
{{ .Values.inference.image.tag }}
Trainer:
{{ .Values.trainer.image.tag }}
Archiving Service:
{{ .Values.archivingservice.image.tag }}
Ingestion Service:
{{ .Values.ingestionservice.image.tag }}
Aggregation Dedup Service:
{{ .Values.aggregationdedupservice.image.tag }}
Aggregation Collater Service:
{{ .Values.aggregationcollaterservice.image.tag }}
Aggregation Normalizer Service:
{{ .Values.aggregationnormalizerservice.image.tag }}
Policy Registry Service:
{{ .Values.policyregistryservice.image.tag }}
Events Query Service:
{{ .Values.eventsqueryservice.image.tag }}
Service Monitor Service:
{{ .Values.servicemonitorservice.image.tag }}
{{ if .Values.eventstooling }}
Event Analytics Tooling:
{{ .Values.eventstooling.image.tag }}

Sample Data:
  To create a job that installs and trains the analytics system with sample data, run the following commands:
  
  kubectl run ingesnoi3 -i --restart=Never --env=LICENSE={{ .Values.global.license }}  \
        --env=CONTAINER_IMAGE={{ .Values.global.image.repository }}/{{ .Values.eventstooling.image.name }}:{{ .Values.eventstooling.image.tag }} \
        --overrides='{ "apiVersion": "v1", "spec": { "imagePullSecrets": [{"name": "{{ .Values.global.image.secret }}"}] } }' \
        --image={{ .Values.global.image.repository }}/{{ .Values.eventstooling.image.name }}:{{ .Values.eventstooling.image.tag }} \
        loadSampleData.sh -- -r {{ .Release.Name }} -j > loadSampleData.yaml

  kubectl create -f loadSampleData.yaml

  If the default service account does not have access to the image repository, uncomment the image pull secrets 
  section in the loadSampleData.yaml file and set {{ .Values.global.image.secret }}  as the imagePullSecrets.name 
  value before running the kubectl create command. 

{{ end }}