---
arch:
  __metadata:
    label: "Architecture scheduling preferences"
    description: "Architecture preference for target worker node."
  amd64:
    __metadata:
      label: "amd64 Architecture preference"
      description: "Architecture preference for amd64 worker node."
      immutable: false
      name: amd64
      options:
        - label: "3 - Most preferred"
          value: "3 - Most preferred"
      required: true
      type: string
      hidden: true # since there is is only one possible setting at the moment there doesnt seem to be a reason to expose.

global:
  __metadata:
    label: "Global properties"
    description: "Global properties accessed in main and dependent charts"
  
  authentication:
    objectserver:
      secretRelease:
        __metadata:
          name: "NOI Kube secret release"
          label: "NOI Kube secret release"
          description: "Release name override that can be used to get the NOI object server secret"
          type: "string"
          immutable: false
          required: true
      secretTemplate:
        __metadata:
          name: "NOI Kube secret template"
          label: "NOI Kube secret template"
          description: "Template override to use for NOI secret, defaults to -omni-secret"
          type: "string"
          immutable: false
          required: true

  common:
    # Settings used by the event analytics subcharts.
    eventanalytics:
      tenantId:
        __metadata:
          label: "Event Analytics TenantId"
          description: "Internal tenantId used by event analytics"
          type: "string"
          required: true
          hidden: true

  rbac:
    serviceAccountName:
      __metadata:
        label: "ServiceAccount under which your pods will run"
        description: "This is an extra layer of security to restrict RBAC access to this service account ."
        type: "string"
        required: true
        immutable: false

  image:
    repository:
      __metadata:
        name: "NOI Repository"
        label: "NOI Docker Repository"
        description: "Docker registry to pull NOI image from."
        type: "string"
        immutable: false
        required: true
    secret:
      __metadata:
        label: "Images pull secret"
        description: "The name of the docker-registry secret for the NOI docker repository credentials."
        type: "string"
        required: true

  environmentSize:
    __metadata:
      label: "Environment size"
      description: >
        Controls the resource sizes the value can be either 'size1' or 'size0'.
        Size0 is a minimal spec for evaluation or development purposes.
      type: "string"
      options:
        - label: "size0"
          value: "size0"
        - label: "size1"
          value: "size1"

  persistence:
    storageClassOption:
      kafkadata:
        __metadata:
          label: "Kafka Data Storage Class"
          description: "The persistent volume storage class for the kafka service."
          type: "string"
          required: true
      cassandradata:
        __metadata:
          label: "Cassandra Data Storage Class"
          description: >
            The persistent volume storage class for the cassandra service. This can be disabled by not
            specifying any option.
          type: "string"
          required: false
      cassandrabak:
        __metadata:
          label: "Cassandra Backup Storage Class"
          description: "The persistent volume storage class for the cassandra service"
          type: "string"
          required: true
      zookeeperdata:
        __metadata:
          label: "Zookeeper Data Storage Class"
          description: "The persistent volume storage class for the zookeeper service"
          type: "string"
          required: true
      couchdbdata:
        __metadata:
          label: "CouchDB Data Storage Class"
          description: "The persistent volume storage class for the couchdb service"
          type: "string"
          required: true
    storageSize:
      cassandradata:
        __metadata:
          label: "Cassandra Data Storage Size"
          description: "cassandra data storage size option"
          type: "string"
          required: true
      cassandrabak:
        __metadata:
          label: "Cassandra Backup Storage Size"
          description: "cassandra back up storage size option"
          type: "string"
          required: true
      kafkadata:
        __metadata:
          label: "kafka Data Storage Size"
          description: "kafka Data storage size option"
          type: "string"
          required: true
  kafka:
    clientUserSecret:
      __metadata:
        label: "Kafka Client Secret"
        description: "Secret for client authentication for kafka"
        type: "string"
        required: true
        hidden: true
    allowInsecure:
      __metadata:
        label: "Kafka allow insecure."
        description: "Enables or disables Kafka security."
        type: "boolean"
        immutable: false
        required: true
        hidden: true
    usePodIpForListeners:
      __metadata:
        label: "Use pod IP address for advertised listeners"
        description: "If set uses the pod IP address for advertised listeners. If not set uses the pod hostname."
        type: "boolean"
        immutable: false
        required: false
        hidden: true
    clientEncryption:
      __metadata:
        description: "set to true to allow kafka encrypt the communication with client"
        label: "kafka-client communication encrypt option"
        type: "boolean"
        required: true
        hidden: false
    allowInsecure:
      __metadata:
        description: "set to true if all client-kafka communication should use SASL"
        label: "Kafka commmunication policy option"
        type: "boolean"
        required: true
        hidden: false
  internalCaCertificate:
    secretName:
      __metadata:
        description: "The secret contained the certifcate to allow Kafka encrpty it's communication"
        label: "Secret name of root certificate"
        type: "string"
        required: true
        hidden: false
        immutable: false
  internalTLS:
    enabled:
      __metadata:
        label: "Enabled internal TLS"
        description: "Is internal tls enabled or not"
        type: "boolean"
        immutable: false
        required: false
        hidden: true  
  isIcamDeployment:
    __metadata:
      label: "Is this ICam deployment"
      description: "Is this ICam deployment or not"
      type: "boolean"
      immutable: false
      required: false
      hidden: true        
  cassandra:
    superuserRole:
      __metadata:
        label: "Create Cassandra superuser"
        description: "Create a superuser role and password based on secret. If secret not present, one with user 'admin' and a random password will be created"
        type: "boolean"
        required: true
        hidden: true

  ## License acceptance
  license:
    __metadata:
      name: "license"
      label: "Docker image license acceptance"
      description: "Must be set to \"accept\" to proceed with installation. Defaults to Not Accepted."
      type: "string"
      immutable: false
      required: true
      hidden: false
      options:
      - label: "Not Accepted"
        value: "not accepted"
      - label: "Accept"
        value: "accept"

  schLabelType:
    __metadata:
      label: "Sch chart label type"
      description: "Sets the \"labelType\" used in the _sch-chart-config.tpl file. Default is prefixed."
      type: "string"
      required: true
      hidden: false
      options:
      - label: "Prefixed"
        value: "prefixed"
      - label: "Non Prefixed"
        value: "non-prefixed"
  
  # Enable sub-chart resource requests
  resource:
    requests:
      enable:
        __metadata:
          label: "Enable sub-chart resource requests"
          description: "To check the resources required for the release, select this option. See http://ibm.biz/install_noi_icp."
          type: "boolean"
          required: true
          hidden: false

  hybrid: 
    __metadata:
      label: "Connect to existing on-premise NOI installation"
      description: "Paramaters which need to be updated for connecting to on-premise NOI installations."
    disabled:         
      __metadata:
        label: "Install All NOI Components"
        description: > 
          Enable this option to install all of the base NOI components (full cloud mode). In this case, ignore the parameters below. |  
          Disable this option to install only the Cloud Native Event Analytics part of NOI (hybrid mode). 
          In this case, you must connect this Cloud Private installation to an existing on-premises NOI installation using the parameters below.
        type: "boolean"
        required: false
        hidden: false
    dash:
      url: 
        __metadata:
          label: "On-Premise DASH Server URL"
          description: > 
            URL of the DASH Server. In the format 'protocol://fully.qualified.domain.name:port
            This parameter is only needed if you are installing just the Cloud Native Event Analytics part of NOI (hybrid mode)
          type: "string"
          required: false
          hidden: false

cassandra:
  __metadata:
    label: "Cassandra Configuration"
    description: "The configuration for Cassandra components."
  global:
    cassandraNodeReplicas:
      __metadata:
        label: "Cassandra Node Replicas"
        description: "Cassandra - node replicas"
        type: "string"
        validation: "environmentSizeDefault|[1-9][0-9]*"
        immutable: false
        required: true
        hidden: true

sch:
  __metadata:
    label: "SCH Configuration"
    description: "The configuration for SCH components."
  enabled:
    __metadata:
      label: "SCH switch."
      description: "Enables or disables SCH installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true

kafka:
  __metadata:
    label: "Kafka Configuration"
    description: "The configuration for Kafka components."
  enabled:
    __metadata:
      label: "Kafka switch."
      description: "Enables or disables Kafka installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  topics:
    initialise:
      __metadata:
        label: "Initialise kafka topics"
        description: "Whether or not to initialise kafka topics"
        type: "boolean"
        hidden: true
        immutable: true
  adminUserSecret:
    __metadata:
      label: "Kafka admin Secret"
      description: "Secret for admin authentication for kafka"
      type: "string"
      required: true
      hidden: true


zookeeper:
  __metadata:
    label: "Zookeeper"
    description: "Zookeeper Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      description: "Number of pod replicas"
      type: "string"
      validation: "environmentSizeDefault|[1-9][0-9]*"
      immutable: false
      required: true
      hidden: true

ibmRedis:
  __metadata:
    label: "Redis"
    description: "Redis Configuration"
  enabled:
    __metadata:
      label: "Redis switch."
      description: "Enables or disables Redis installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  replicas:
    __metadata:
      label: "Redis replica Count"
      description: "Number of pod replicas"
      type: "string"
      validation: "environmentSizeDefault|[1-9][0-9]*"
      immutable: false
      required: true 
      hidden: true 

  persistence:
    enabled:
      __metadata:
        name: "enabled"
        label: "Redis persistence switch"
        description: "Decide wether to install redis with persistence"
        type: "boolean"
        immutable: false
        required: true
        hidden: true
  auth:
    authSecretName:
      __metadata:
        name: "authSecretName"
        label: "Redis Auth Secret Name"
        description: "Name to use for the redis auth secret"
        type: "string"
        immutable: false
        required: true
        hidden: true
  serviceAccount:
    create:
      __metadata:
        label: "Service Account Creation switch"
        description: "Controls automatic creation of Redis Service Account"
        type: "boolean"
        immutable: false
        required: true
        hidden: true

couchdb:
  __metadata:
    label: "CouchDB"
    description: "CouchDB Configuration"
  clusterSize:
    __metadata:
      label: "Replica Count"
      description: "Number of pod replicas"
      type: "string"
      validation: "environmentSizeDefault|[1-9][0-9]*"
      immutable: false
      required: true
      hidden: true
  secretName:
    __metadata:
      label: "CouchDB Secret Name"
      description: "couchdb secret name."
      type: "string"
      immutable: true
  port:
    __metadata:
      label: "CouchDB port"
      description: "couchdb port."
      type: "number"
      immutable: false
      required: true
  scheme:
    __metadata:
      label: "CouchDB scheme"
      description: "couchdb connection scheme (http or https)."
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "http"
          value: "http"
        - label: "https"
          value: "https"
  autoClusterConfig:
    enabled:
      __metadata:
        label: "Couch auto clustering."
        description: "Enables replication between couch nodes."
        type: "string"
        immutable: false
        required: true
        hidden: true
        options:
          - label: "environmentSizeDefault"
            value: "environmentSizeDefault"
          - label: "true"
            value: "true"
          - label: "false"
            value: "false"


spark:
  __metadata:
    label: "Spark Configuration"
    description: "The configuration for Spark components."
  master:
    enabled:
      __metadata:
        label: "Spark Master switch."
        description: "Enables or disables Spark Master installation."
        type: "boolean"
        immutable: false
        required: true

  slave:
    enabled:
      __metadata:
        label: "Spark Slave switch."
        description: "Enables or disables Spark Slave installation."
        type: "boolean"
        immutable: false
        required: true

common:
  __metadata:
    label: "Common"
    description: "Common properties used across all services"
  seasonalityDeployFirst:
    __metadata:
      label: "Seasonality Policies Deploy First."
      description: "Enables or Disable the deploy first / review first option for Seasonal policies."
      type: "boolean"
      immutable: false
      required: true
  temporalGroupingDeployFirst:
    __metadata:
      label: "Temporal Group Policies Deploy First."
      description: "Enables or Disable the deploy first / review first option for Temporal policies."
      type: "boolean"
      immutable: false
      required: true
  restApi:
    port:
      __metadata:
        name: "port"
        label: "Default HTTP"
        description: "The default HTTP port of all services in the CNEA custer"
        type: "number"
        immutable: false
        required: false
        hidden: true
    portSsl:
      __metadata:
        name: "portSsl"
        label: "Default HTTPS"
        description: "The default HTTPS port of all services in the CNEA custer"
        type: "number"
        immutable: false
        required: false
        hidden: true
  topics:
    events:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka events topic"
          description: "The name of the events topic in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
    eventactions:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka events topic"
          description: "The name of the events topic in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
    collatedactions:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka collated actions topic"
          description: "The name of the collated actions topic in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
    metrics:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka metrics topic"
          description: "The name of the metrics topic in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
    baseline:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka baselines topic"
          description: "The name of the baseline topic in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
    baselinePersistence:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka baseline persistence topic"
          description: "The name of the topic used for persisting baselines in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
    asmMessages:
      name:
        __metadata:
          name: "name"
          label: "Internal Kafka ASM messages topic"
          description: "The name of theused for ASM messages in the internal Kafka cluster."
          type: "string"
          immutable: false
          required: false
          hidden: true
      enabled:
        __metadata:
          name: "enabled"
          label: "The topic enabled/disabled flag"
          description: "The enable flag for the topic."
          type: "boolean"
          immutable: false
          required: true
          hidden: true
  keyspaces:
    events:
      name:
        __metadata:
          name: "name"
          label: "Events Keyspace Name"
          description: "The name of the events keyspace."
          type: "string"
          immutable: false
          required: true
          hidden: true
      replicationFactor:
        __metadata:
          name: "replicationFactor"
          label: "Events Keyspace Replication Factor"
          description: "Replication factor for events keyspace. Value of zero to use default replication factor. Valid replications are between 1 and 3."
          type: "number"
          immutable: false
          required: true
          hidden: true
    policies:
      name:
        __metadata:
          name: "name"
          label: "Policies Keyspace Name"
          description: "The name of the policies keyspace."
          type: "string"
          immutable: false
          required: true
          hidden: true
      replicationFactor:
        __metadata:
          name: "replicationFactor"
          label: "Policies Keyspace Replication Factor"
          description: "Replication factor for events keyspace. Value of zero to use default replication factor. Valid replications are between 1 and 3."
          type: "number"
          immutable: false
          required: true
          hidden: true
  services:
    uagUrl:
      __metadata:
        name: "uagUrl"
        label: "CEM Users Service URL"
        description: "The URL to a CEM Users Authentication Service."
        type: "string"
        immutable: false
        required: false
        hidden: true
    noiDashAuthUrl:
      __metadata:
        name: "noiDashAuthUrl"
        label: "NOI Users Dash Authenticatuion Servlet URL"
        description: "The URL to a NOI Users DASH Authentication Servlet."
        type: "string"
        immutable: false
        required: false
        hidden: true
    incidentProcessorUrl:
      __metadata:
        name: "incidentProcessorUrl"
        label: "Incident Processor Service URL"
        description: "The URL to an Incident Processor Service."
        type: "string"
        immutable: false
        required: false
        hidden: true
  authentication:
    scheme:
      __metadata:
        name: "scheme"
        label: "REST API Authentication Scheme"
        description: "The authentication scheme to use for access to REST API services"
        type: "string"
        immutable: false
        required: false
        hidden: true
        options:
          - label: "CEM"
            value: "cemusers"
          - label: "NOI"
            value: "noiusers"
          - label: "Static Key"
            value: "statickey"

archivingservice:
  __metadata:
    label: "Archiving Service"
    description: "Archiving Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Archiving Service"
      description: "Enables or disables Archiving Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Archiving Service Cluster."
      description: "The number of archiving services to deploy to form the service cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Archiving Service Docker image name"
        description: "The name of the Archiving Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Archiving Service Docker image version"
        description: "The version of the Archiving Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Archiving Service Logging Level."
      description: "Set the logging level of the Archiving Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  eventTTL:
    __metadata:
      name: "eventTTL"
      label: "Event TTL"
      description: "Integer for how long events should persist in seconds before being deleted. This also restricts the maximum training window."
      type: "number"
      immutable: false
      required: false
      hidden: true

ingestionservice:
  __metadata:
    label: "Ingestion Service"
    description: "Ingestion Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Ingestion Service"
      description: "Enables or disables Ingestion Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Ingestion Service Cluster."
      description: "The number of ingestion services to deploy to form the service cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Ingestion Service Docker image name"
        description: "The name of the Ingestion Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Ingestion Service Docker image version"
        description: "The version of the Ingestion Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Ingestion Service Logging Level"
      description: "Set the logging level of the Ingestion Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  swagger:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable Ingestion Service Swagger Documentation"
        description: "Specifies whether the swagger documentation for the Ingestion Service is hosted by the service or not"
        type: "boolean"
        immutable: false
        required: true
        hidden: true
  payloadSizeLimit:
    __metadata:
      name: "payloadSizeLimit"
      label: "Maximum Payload Size To Accept"
      description: "Set the limit in bytes of the maximum payload that can be posted to Ingestion service."
      type: "number"
      immutable: false
      required: true
      hidden: true

aggregationdedupservice:
  __metadata:
    label: "Aggregator Deduplication Service"
    description: "Aggregator Deduplication Service Configuration Properties"
  enabled:
    __metadata:
      name: "enabled"
      label: "Aggregator Deduplication Service"
      description: "Enables or disables Aggregation Deduplication Service installation."
      type: boolean
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Aggregation Deduplication Service Cluster."
      description: "The number of aggregation deduplication services to deploy to form the service cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  pullPolicy:
     __metadata:
       name: "pullPolicy"
       label: "Docker image pull policy"
       description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
       type: "string"
       immutable: false
       required: true
       hidden: true
       options:
       - label: "If Not Present"
         value: "IfNotPresent"
       - label: "Always"
         value: "Always"
       - label: "Never"
         value: "Never"
  image:
    name:
      __metadata:
        name: "name"
        label: "Aggregation Deduplication Service Docker image name"
        description: "The name of the Aggregation Deduplication Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Aggregation Deduplication Service Docker image version"
        description: "The version of the Aggregation Deduplication Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Aggregation Deduplication Service Logging Level"
      description: "Set the logging level of the Aggregation Deduplication Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"

aggregationcollaterservice:
  __metadata:
    label: "Aggregator Collater Service"
    description: "Aggregator Collator Service Configuration Properties"
  enabled:
    __metadata:
      name: "enabled"
      label: "Aggregator Collator Service"
      description: "Enables or disables Aggregation Collater Service installation."
      type: boolean
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Aggregation Collater Service Cluster."
      description: "The number of aggregation collater services to deploy to form the service cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  image:
    name:
      __metadata:
        name: "name"
        label: "Aggregation Collater Service Docker image name"
        description: "The name of the Aggregation Collater Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Aggregation Collater Service Docker image version"
        description: "The version of the Aggregation Collater Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Aggregation Collater Service Logging Level"
      description: "Set the logging level of the Aggregation Normalizer Service"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: "TRACE"
      - label: "Debug"
        value: "DEBUG"
      - label: "Information"
        value: "INFO"
  pollingInterval:
    __metadata:
      name: "pollingInterval"
      label: "Aggregation Collater Service Polling Interval"
      description: "The number of seconds between each Poll for candidate event actions that can be collated."
      type: "number"
      immutable: false
      required: true
      hidden: true
  initialWindowInterval:
    __metadata:
      name: "initialWindowInterval"
      label: "Aggregation Collater Service Initial Window Interval"
      description: "The number of seconds at startup the Collater would look back for candidate event actions."
      type: "number"
      immutable: false
      required: true
      hidden: true
  latenessThreshold:
    __metadata:
      name: "latenessThreshold"
      label: "Aggregation Collater Service Lateness Threshold"
      description: "The number of seconds of lateness the Collater will tolerate at each Poll cycle."
      type: "number"
      immutable: false
      required: true
      hidden: true
  quietPeriod:
    __metadata:
      name: "quietPeriod"
      label: "Aggregation Collater Service Quiet Period"
      description: "The number of seconds of inactivity at which point the Collater will void a supergroup and its constituent polices."
      type: "number"
      immutable: false
      required: true
      hidden: true
  maxConnectedItems:
    __metadata:
      name: "maxConnectedItems"
      label: "Aggregation Collater Service Max Connected Items"
      description: "The maximum number of items in a connected path - this bounds memory usage for the Collater"
      type: "number"
      immutable: false
      required: true
      hidden: true
  savebackup:
    __metadata:
      name: "savebackup"
      label: "Aggregator Collater Save Backup"
      description: "Enables or disables the saving of supergroup state information."
      type: boolean
      immutable: false
      required: true
      hidden: true
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"

aggregationnormalizerservice:
  __metadata:
    label: "Aggregator Normalizer Service"
    description: "Aggregator Normalizer Service Configuration Properties"
  enabled:
    __metadata:
      name: "enabled"
      label: "Aggregator Normalizer Service"
      description: "Enables or disables Aggregation Normalizer Service installation."
      type: boolean
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Aggregation Normalizer Service Cluster."
      description: "The number of aggregation normalizer services to deploy to form the service cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  image:
    name:
      __metadata:
        name: "name"
        label: "Aggregation Normalizer Service Docker image name"
        description: "The name of the Aggregation Normalizer Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Aggregation Normalizer Service Docker image version"
        description: "The version of the Aggregation Normalizer Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Aggregation Normalizer Service Logging Level"
      description: "Set the logging level of the Aggregation Normalizer Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  evtMgmtEndpoint:
    targetUrl:
      __metadata:
        name: "targetUrl"
        label: "Aggregation Normalizer Action Service Target Url"
        description: "The version of the Aggregation Normalizer Action Service Target Url."
        type: "string"
        immutable: false
        required: true
        hidden: true
    username:
      __metadata:
        name: "username"
        label: "Aggregation Normalizer Action Service Username"
        description: "The version of the Aggregation Normalizer Action Service Target Username."
        type: "string"
        immutable: false
        required: true
        hidden: true
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"

policyregistryservice:
  __metadata:
    label: "Policy Registry Service"
    description: "Policy Registry Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Policy Registry Service"
      description: "Enables or disables Policy Registry Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Policy Registry Service Cluster."
      description: "The number of policy registry services to deploy to form the service cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Policy Registry Service Docker image name"
        description: "The name of the Policy Registry Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Policy Registry Service Docker image version"
        description: "The version of the Policy Registry Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Policy Registry Service Logging Level"
      description: "Set the logging level of the Policy Registry Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  swagger:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable Policy Registry Service Swagger Documentation"
        description: "Specifies whether the swagger documentation for the Policy Registry Service is hosted by the service or not"
        type: "boolean"
        immutable: false
        required: true
        hidden: true
  payloadSizeLimit:
    __metadata:
      name: "payloadSizeLimit"
      label: "Maximum Payload Size To Accept"
      description: "Set the limit in bytes of the maximum payload that can be posted to Policy Registry Service."
      type: "number"
      immutable: false
      required: true
      hidden: true

eventsqueryservice:
  __metadata:
    label: "Events Query Service"
    description: "Events Query Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Events Query Service"
      description: "Enables or disables Events Query Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Events Query Service Cluster."
      description: "The number of events query services to deploy to form the servie cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Events Query Service Docker image name"
        description: "The name of the Events Query Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Events Query Service Docker image version"
        description: "The version of the Events Query Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Events Query Service Logging Level"
      description: "Set the logging level of the Events Query Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  swagger:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable Events Query Service Swagger Documentation"
        description: "Specifies whether the swagger documentation for the Events Query Service is hosted by the service or not"
        type: "boolean"
        immutable: false
        required: true
        hidden: true
  payloadSizeLimit:
    __metadata:
      name: "payloadSizeLimit"
      label: "Maximum Payload Size To Accept"
      description: "Set the limit in bytes of the maximum payload that can be posted to Events Query Service."
      type: "number"
      immutable: false
      required: true
      hidden: true

servicemonitorservice:
  __metadata:
    label: "Service Monitor Service"
    description: "Service Monitor Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Service Monitor Service"
      description: "Enables or disables Service Monitor Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  repFactor:
    __metadata:
      name: "replicationFactor"
      label: "The size of Service Monitor Service Cluster."
      description: "The number of service monitor services to deploy to form the servie cluster."
      type: "number"
      immutable: false
      required: true
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Service Monitor Service Docker image name"
        description: "The name of the Service Monitor Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Service Monitor Service Docker image version"
        description: "The version of the Service Monitor Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  logLevel:
    __metadata:
      name: "logLevel"
      label: "Service Monitor Service Logging Level"
      description: "Set the logging level of the Service Monitor Service"
      type: "number"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "Trace"
        value: 10
      - label: "Debug"
        value: 20
      - label: "Information"
        value: 30
  swagger:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable Service Monitor Swagger Documentation"
        description: "Specifies whether the swagger documentation for the Service Monitor Service is hosted by the service or not"
        type: "boolean"
        immutable: false
        required: true
        hidden: true
  services:
    __metadata:
      name: "services"
      label: "Service To Monitor"
      description: "Set the of services inside the cluster to obtain server ststaus from."
      type: "string"
      immutable: false
      required: true
      hidden: true

inference:
  __metadata:
    label: "Inference Service"
    description: "Inference Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Inference Service"
      description: "Enables or disables Inference Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  port:
    __metadata:
      name: "port"
      label: "HTTP Port"
      description: "The default HTTP port for the Inference Service"
      type: "number"
      immutable: false
      required: false
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Inference Service Docker image name"
        description: "The name of the Inference Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Inference Service Docker image version"
        description: "The version of the Inference Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
  expectedEventId:
    __metadata:
      name: "expectedEventId"
      label: "Expected Event Id"
      description: "TExpected event id for the self monitoring"
      type: "string"
      immutable: false
      required: false
      hidden: true
trainer:
  __metadata:
    label: "Training Service"
    description: "Training Service Configuration Properties."
  enabled:
    __metadata:
      name: "enabled"
      label: "Training Service"
      description: "Enables or disables Training Service installation."
      type: "boolean"
      immutable: false
      required: true
      hidden: true
  port:
    __metadata:
      name: "port"
      label: "HTTP Port"
      description: "The default HTTP port for the Training Service"
      type: "number"
      immutable: false
      required: false
      hidden: true
  pullPolicy:
    __metadata:
      name: "pullPolicy"
      label: "Docker image pull policy"
      description: "Always, Never, or IfNotPresent. Defaults to IfNotPresent"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
      - label: "If Not Present"
        value: "IfNotPresent"
      - label: "Always"
        value: "Always"
      - label: "Never"
        value: "Never"
  serviceType:
    __metadata:
      name: "serviceType"
      label: "Service Type"
      description: "Defines how the service is exposed in cluster via a port on all cluster nodes (NodePort) or just as an IP inside the cluster (ClusterIP)"
      type: "string"
      immutable: false
      required: true
      hidden: true
      options:
        - label: "Cluster IP"
          value: "ClusterIP"
        - label: "Node Port"
          value: "NodePort"
  image:
    name:
      __metadata:
        name: "name"
        label: "Training Service Docker image name"
        description: "The name of the Training Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Training Service Docker image version"
        description: "The version of the Training Service Docker image to deploy."
        type: "string"
        immutable: false
        required: true
        hidden: true
eventstooling:
  __metadata:
    label: "Events Tooling"
    description: "Events Tooling Configuration Properties."
  image:
    name:
      __metadata:
        name: "name"
        label: "Events Tooling Docker image name"
        description: "The name of the Events Tooling Docker image."
        type: "string"
        immutable: false
        required: true
        hidden: true
    tag:
      __metadata:
        name: "tag"
        label: "Events Tooling Docker image version"
        description: "The version of the Events Tooling Docker image ."
        type: "string"
        immutable: false
        required: true
        hidden: true
