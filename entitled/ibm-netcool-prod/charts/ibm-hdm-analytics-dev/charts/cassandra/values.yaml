# This is a YAML-formatted file
# Declare name/value pair to be passed into you templates

arch:   # list of supported arch s390x ppc64le amd64
  - amd64
  - ppc64le
  - s390x

# The service account name the pods run under which typically can be run under
# the restricted OpenShift Security Context COnstraint (SCC). If a service
# account name isn't specified and global.rbac.create is true, a service account
# will be created. If a service account name isn't specified but global.rbac.create
# is false, then the default service account within the namespace will be used.
# This property Will override the global.serviceAccoutName value if set.
serviceAccountName: ""

global:
  rbac:
    # Enable (default) to create required service account and role bindings
    # automatically. If the prefered method is the user to create the service
    # account, roles, and role bindings manually through product documentation,
    # disable this flag.
    create: true
    # The service account name the pods run under which typically can be run under
    # the restricted OpenShift Security Context COnstraint (SCC). If a service
    # account name isn't specified and global.rbac.create is true, a service account
    # will be created. If a service account name isn't specified but global.rbac.create
    # is false, then the default service account within the namespace will be used.
    # This property Will be overwritten by the serviceAccoutName value if set.
    serviceAccountName: ""

  environmentSize: "size0"
  cassandra:
    # On install create a superuser role and password based on the secret {{ .Release.name }}-cassandra-auth-secret and
    # disable the default superuser role.
    # If secret does not exist, a secret with user 'admin' and a random password will be created.
    superuserRole: false
    clientEncryption: false
    # Require client authentication when using client encryption
    # Client authentication not supported by Janus graph
    requireClientAuth: false
  privileged: false  # Required for block storage on IKS
  # While the cassandra pod can run within Openshift's restricted SCC, if
  # another SCC is applied to the pod via a service account that doesn't support
  # the correct runAsUser type (i.e. MustRunAsNonRoot), arbitraryUids can be
  # disabled. Otherwise, the default value (true) shouldn't need to be updated.
  arbitraryUids: true
  image:
    repository: ""
    useTag: true
# If running with replication, ensure you create at least as many Cassandra nodes for the data to be replicated across
# Note, the CassandraReplicationSettings are applied at DB creation time.
# If you need to change the replication setting after installation, manual CQL modification of the keyspace will be required.
# Setting this to "environmentSizeDefault" will use the replication factor corresponding to the environmentSize setting based
# on the values in the _resources.tpl file.
  cassandraNodeReplicas: 1
  persistence:
    enabled: true # Use a form of persistence storage for stateful applications
    #useDynamicProvisioning: true
    supplementalGroups:     # this is required for NFS storage
      # - 1001              # - provide the gid of the volumes as list
      # - 1002
# Individual PVCs can be of different types if desired.
# local-storage is only an option for apps/v1beta1 statefulsets, which is only Cassandra today
    storageClassName: ""
    storageClassOption:
      # The recommendation is to use fast local storage for Cassandra's data.
      # This may require manual PV creation by the Cloud Administrators, for example creating "local-storage" PVs.
      # Cassandra data consists of potentially large SSTable files.
      # Writes will be very sequential IO.
      # Compaction of SSTables will be sequential reads and writes.
      # Reads for time series data will generally be sequential.
      # Workloads with many small reads could create random IO requests, if the requests are not able to be fulfilled from memory.
      # In general, HDDs are acceptable for Cassandra due to the sequential nature of the IO.
      # It is recommended though to have multiple drives in a raid array based on the number of threads to allow for concurrent reads/writes.
      # SSDs will have the best performance, but due to the size of large time series data in Cassandra could be cost prohibitive.
      #cassandradata: "local-storage"
      cassandradata: "default"
      # The cassandrabak PV is an optional backup PV used for storing the backups of Cassandra data.
      # If you do not require or want a separate backup PV, set cassandrabak to "none".
      # If running with "none", by default the backups will be stored in the same PV as the data.
      cassandrabak: "default"
    storageSize:
      cassandradata: "50Gi"
      cassandrabak: "50Gi"

  networkpolicies:
    enabled: true

# List of seeds to use when starting cassandra. Use one of the following options:
#   "<IP Address>:<IP Address>..."
#     A colon separated list of one or more seeds.  Example: "10.0.0.1:10.0.0.2"
#     All Cassandra nodes will bootstrap in parralel
#   CUSTOM_KUBERNETES_STATEFULSET_SEED_LIST
#     Generate the seed list using getent hosts
#     If no data non Cassandara seed nodes (id > 0) will bootstrap after node 0
#   CUSTOM_KUBERNETES_STATEFULSET_SEED_LIST_API
#     Generate the seed list using k8s API
#     Cassandra nodes will bootstrap consecutively, seed nodes (0 and 1) first
seeds: "CUSTOM_KUBERNETES_STATEFULSET_SEED_LIST"

# Can be set to all, none, dc or rack
#   dc : Encrypt the traffic between the Data Centers
#   rack : Encrypt the traffic between the racks
# Within ICP use all or none.  Current ICP configuration of Cassandra does not implement dc and rack.
internodeEncryption: "none"

image:
  name: "cassandra"
  tag: "3.11.6-202012011830L-TKAI-BTYDF9"
  digest: "sha256:310b9c3ff735fd9f162fa1fdf7c5fd2300e6a6f6e2e27ae864e2e1441eaefb2d"
  pullPolicy: IfNotPresent

pdb:
  enabled: true
  minAvailable: 55%
