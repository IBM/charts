{{- /*
########################################################################
#
# Licensed Materials - Property of IBM
#
# 5725Q09
#
# (C) Copyright IBM Corp.
#
# 2020 All Rights Reserved
#
# US Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
########################################################################
*/ -}}
{{- if .Values.noieagateway.enabled -}}
{{- $compName := "eanoigateway" -}}
{{- include "sch.config.init" (list . "ea-noi-layer.sch.chart.config.values") -}}
{{- $configName := include "sch.names.fullCompName" (list . $compName) -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $configName }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
data:
  cea-reader-tbl-repdef: |
    REPLICATE {{ range $i, $el := .Values.noieagateway.replicationTypes -}}
      {{if $i}},{{end}}{{.}}
    {{- end }} FROM TABLE 'alerts.status'
       USING MAP 'StatusMap'
       FILTER WITH 'Type NOT IN (2, 4) AND Class NOT IN (99992, 99999)';
  cea-map: |
    CREATE MAPPING StatusMap
    (
        'Identifier'	   = 	'@Identifier',
        'Node'		   =	'@Node',
        'NodeAlias'	   =	'@NodeAlias' NOTNULL '@Node',
        'Manager'	   =	'@Manager',
        'Agent'		   =	'@Agent',
        'AlertGroup'	   =	'@AlertGroup',
        'AlertKey'	   =	'@AlertKey',
        'Severity'	   =	'@Severity',
        'Summary'	   =	'@Summary',
        'StateChange'	   =	'@StateChange',
        'FirstOccurrence'  =	'@FirstOccurrence',
        'LastOccurrence'   =	'@LastOccurrence',
        'InternalLast'	   =	'@InternalLast',
        'Poll'	  	   =	'@Poll',
        'Type'		   =	'@Type',
        'Tally'		   =	'@Tally',
        'Class'		   =	'@Class',
        'Grade'		   =	'@Grade',
        'Location'	   =	'@Location',
        'OwnerUID'	   =	'@OwnerUID',
        'OwnerGID'	   =	'@OwnerGID',
        'Acknowledged'	   =	'@Acknowledged',
        'Flash'	  	   =	'@Flash',
        'EventId'	   =	'@EventId',
        'ExpireTime'	   =	'@ExpireTime',
        'ProcessReq'	   =	'@ProcessReq',
        'SuppressEscl'	   =	'@SuppressEscl',
        'Customer'	   =	'@Customer',
        'Service'	   =	'@Service',
        'PhysicalSlot'	   =	'@PhysicalSlot',
        'PhysicalPort'	   =	'@PhysicalPort',
        'PhysicalCard'	   =	'@PhysicalCard',
        'TaskList'	   =	'@TaskList',
        'NmosSerial'	   =	'@NmosSerial',
        'NmosObjInst'	   =	'@NmosObjInst',
        'NmosCauseType'	   =	'@NmosCauseType',
        'LocalNodeAlias'   =	'@LocalNodeAlias',
        'LocalPriObj'	   =	'@LocalPriObj',
        'LocalSecObj'	   =	'@LocalSecObj',
        'LocalRootObj'	   =	'@LocalRootObj',
        'RemoteNodeAlias'  =	'@RemoteNodeAlias',
        'RemotePriObj'	   =	'@RemotePriObj',
        'RemoteSecObj'	   =	'@RemoteSecObj',
        'RemoteRootObj'	   =	'@RemoteRootObj',
        'X733EventType'    =	'@X733EventType',
        'X733ProbableCause'=	'@X733ProbableCause',
        'X733SpecificProb' =	'@X733SpecificProb',
        'X733CorrNotif'	   =	'@X733CorrNotif',
        'URL'		   =	'@URL',
        'ExtendedAttr'     =	'@ExtendedAttr',
        'ServerName'	   =	'@ServerName',
        'ServerSerial'	   =	'@ServerSerial',
        'CEAEventScore'    =    '@CEAEventScore',
        'CEAEventClassification' = '@CEAEventClassification',
{{- if ne .Values.global.noilayer.sourceid "default" }}
        'NOILayerSrcId'    =    '{{ .Values.global.noilayer.sourceid }}',
{{- end }}
        'ScopeID'          =   	'@ScopeID'
    );
{{- end -}}
    

