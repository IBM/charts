apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ibm-apiconnect-cip.operator.fullname" . }}
  labels:
{{ include "ibm-apiconnect-cip.labels" . | indent 4 }}
    component: ibm-apiconnect-icp4i-prod-operator
    revision: "{{ .Release.Revision }}"
spec:
  replicas: 1
  serviceName: {{ template "ibm-apiconnect-cip.operator.fullname" . }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
{{ include "ibm-apiconnect-cip.labels" . | indent 8 }}
        component: ibm-apiconnect-icp4i-prod-operator
        revision: "{{ .Release.Revision }}"
      annotations:
{{ include "ibm-apiconnect-cip.annotations" . | indent 8 }}
    spec:
      serviceAccountName: {{ template "ibm-apiconnect-cip.serviceAccountName" . }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - {{ .Values.operator.arch }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
{{ include "ibm-apiconnect-cip.podSecurityContext" . | indent 8 }}
      initContainers:
{{- if .Values.global.createCrds }}
        # initialize cluster crd
        - name: register-crd
{{ include "ibm-apiconnect-cip.containerSpec" . | indent 10 }}
          command: [ "/home/apic/init-files/register-crd.sh" ]
          volumeMounts:
          - name: init-files
            mountPath: "/home/apic/init-files"
{{- end }}
        # merge cluster and helm custom resources, create a corresponding local apiconnect-up.yml copy, and update the remote resource
        - name: update-cr
{{ include "ibm-apiconnect-cip.containerSpec" . | indent 10 }}
          command: [ "/home/apic/init-files/update-cr.sh" ]
          volumeMounts:
          - name: project
            mountPath: "/home/apic"
          - name: init-files
            mountPath: "/home/apic/init-files"
{{- if not .Release.IsInstall }}
        # use helm migration tool to prepare subsystem releases for k8s 1.16+
        - name: migrate-helm-releases
{{ include "ibm-apiconnect-cip.containerSpec" . | indent 10 }}
          command: [ "/home/apic/init-files/migrate-helm-releases.sh" ]
          workingDir: /home/apic
          volumeMounts:
          - name: project
            mountPath: "/home/apic"
          - name: init-files
            mountPath: "/home/apic/init-files"
          env:
            - name: HOME
              value: "/home/apic"
            - name: KUBECONFIG
              value: "/home/apic/init-files/config"
{{- end }}
{{- if not .Release.IsInstall }}
        # fix any empty pull secrets that would break upgrade
        - name: patch-pullsecrets
{{ include "ibm-apiconnect-cip.containerSpec" . | indent 10 }}
          command: [ "/home/apic/init-files/patch-pullsecrets.sh" ]
          workingDir: /home/apic
          volumeMounts:
          - name: init-files
            mountPath: "/home/apic/init-files"
{{- end }}
        # remove directories that must be regenerated by apicup
        - name: clean-project
{{ include "ibm-apiconnect-cip.containerSpec" . | indent 10 }}
          command: [ "bash", "-c", "find . -maxdepth 1 -name '*-apic-cluster-*' -type d -exec rm -rf {} +" ]
          workingDir: /home/apic
          volumeMounts:
          - name: project
            mountPath: "/home/apic"
      containers:
        # start the operator
        - name: operator
{{ include "ibm-apiconnect-cip.containerSpec" . | indent 10 }}
          command: [ "/home/apic/init-files/init.sh" ]
          args: [ "apicup", "server", "--debug", "--create-crd=false", "--accept-license" ]
          env:
            - name: HOME
              value: "/home/apic"
            - name: HELM_HOME
              value: "/home/apic/.helm"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBECONFIG
              value: "/home/apic/init-files/config"
          ports:
            - containerPort: 1776
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: /
              port: 1777
          readinessProbe:
            httpGet:
              path: /
              port: 1777
          workingDir: /home/apic
          volumeMounts:
          - name: apic-extra-values
            mountPath: "/home/apic/extra-values"
          {{- if .Values.operator.helmTlsSecret }}
          - name: helm-tls
            mountPath: "/home/apic/.helm"
          {{- end }}
          - name: init-files
            mountPath: "/home/apic/init-files"
          - name: project
            mountPath: "/home/apic"
      volumes:
      - name: apic-extra-values
        configMap:
          {{- if .Values.global.extraValuesConfig }}
          name: {{ .Values.global.extraValuesConfig }}
          {{- else }}
          name: {{ template "ibm-apiconnect-cip.extra-vals.fullname" . }}
          {{- end }}
          items:
            - key: {{ .Values.management.name }}
              path: {{ .Values.management.name }}-extra-values.yaml
            - key: {{ .Values.analytics.name }}
              path: {{ .Values.analytics.name }}-extra-values.yaml
            - key: {{ .Values.portal.name }}
              path: {{ .Values.portal.name }}-extra-values.yaml
            - key: {{ .Values.gateway.name }}
              path: {{ .Values.gateway.name }}-extra-values.yaml
            - key: {{ .Values.gateway2.name }}
              path: {{ .Values.gateway2.name }}-extra-values.yaml
      {{- if .Values.operator.helmTlsSecret }}
      - name: helm-tls
        secret:
          secretName: {{ .Values.operator.helmTlsSecret }}
          defaultMode: 0644
          items:
            - key: cert.pem
              path: cert.pem
            - key: ca.pem
              path: ca.pem
            - key: key.pem
              path: key.pem
      {{- end }}
      - name: project
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-project
      - name: init-files
        projected:
          sources:
          - configMap:
              name: {{ template "ibm-apiconnect-cip.init-files.fullname" . }}
              items:
                - key: register-crd
                  path: register-crd.sh
                  mode: 0750
                - key: kubeconfig
                  path: config
                - key: init
                  path: init.sh
                  mode: 0750
                - key: helm-wrapper
                  path: helm-wrapper.sh
                  mode: 0750
                - key: register-oidc
                  path: register-oidc.sh
                  mode: 0750
                - key: migrate-helm-releases
                  path: migrate-helm-releases.sh
                  mode: 0750
                - key: patch-pullsecrets
                  path: patch-pullsecrets.sh
                  mode: 0750
                - key: update-cr
                  path: update-cr.sh
                  mode: 0750
      {{- if .Values.global.certSecret }}
          - secret:
              name: {{ .Values.global.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-common-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-common-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.management.certSecret }}
          - secret:
              name: {{ .Values.management.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-{{ .Values.management.name }}-{{ .Release.Namespace }}-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-{{ .Values.management.name }}-{{ .Release.Namespace }}-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.analytics.certSecret }}
          - secret:
              name: {{ .Values.analytics.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-{{ .Values.analytics.name }}-{{ .Release.Namespace }}-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-{{ .Values.analytics.name }}-{{ .Release.Namespace }}-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.portal.certSecret }}
          - secret:
              name: {{ .Values.portal.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-{{ .Values.portal.name }}-{{ .Release.Namespace }}-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-{{ .Values.portal.name }}-{{ .Release.Namespace }}-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.gateway.certSecret }}
          - secret:
              name: {{ .Values.gateway.certSecret }}
              items:
                - key: {{ .Release.Name }}-apic-cluster-{{ .Values.gateway.name }}-{{ .Release.Namespace }}-secrets.yml
                  path: {{ .Release.Name }}-apic-cluster-{{ .Values.gateway.name }}-{{ .Release.Namespace }}-secrets.yml
                  mode: 0640
      {{- end }}
      {{- if .Values.gateway2.certSecret }}
          - secret:
              name: {{ .Values.gateway2.certSecret }}
              items:
                - key: {{ .Release.Name }}-apic-cluster-{{ .Values.gateway2.name }}-{{ .Release.Namespace }}-secrets.yml
                  path: {{ .Release.Name }}-apic-cluster-{{ .Values.gateway2.name }}-{{ .Release.Namespace }}-secrets.yml
                  mode: 0640
      {{- end }}