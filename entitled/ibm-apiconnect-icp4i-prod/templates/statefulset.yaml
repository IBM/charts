apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "ibm-apiconnect-cip.fullname" . }}-operator
  labels:
    app: {{ template "ibm-apiconnect-cip.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: {{ template "ibm-apiconnect-cip.name" . }}-operator
spec:
  replicas: 1
  serviceName: {{ template "ibm-apiconnect-cip.fullname" . }}-operator
  selector:
    matchLabels:
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ibm-apiconnect-cip.name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: {{ template "ibm-apiconnect-cip.name" . }}-operator
      annotations:
        productName: {{ template "ibm-apiconnect-cip.productName" . }}
        productID: {{ template "ibm-apiconnect-cip.productID" . }}
        productVersion: {{ template "ibm-apiconnect-cip.productVersion" . }}
        productMetric: {{ template "ibm-apiconnect-cip.productMetric" . }}
        productChargedContainers: ""
    spec:
      serviceAccountName: {{ template "ibm-apiconnect-cip.serviceAccountName" . }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                  - {{ .Values.operator.arch }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
{{ include "ibm-apiconnect-cip.podSecurityContext" . | indent 8 }}
      initContainers:
        - name: wait
{{- if .Values.operator.registry }}
          image: {{ regexReplaceAll "/$" .Values.operator.registry "" }}/{{ .Values.operator.image }}:{{ .Values.operator.tag }}
{{- else }}
          image: {{ regexReplaceAll "/$" .Values.global.registry "" }}/{{ .Values.operator.image }}:{{ .Values.operator.tag }}
{{- end }}
          imagePullPolicy: {{ .Values.operator.pullPolicy }}
          command: [ "bash", "-c", "sleep 180" ]
          resources:
{{ include "ibm-apiconnect-cip.resources" . | indent 12 }}
          securityContext:
{{ include "ibm-apiconnect-cip.securityContext" . | indent 12 }}
        - name: clean-project
{{- if .Values.operator.registry }}
          image: {{ regexReplaceAll "/$" .Values.operator.registry "" }}/{{ .Values.operator.image }}:{{ .Values.operator.tag }}
{{- else }}
          image: {{ regexReplaceAll "/$" .Values.global.registry "" }}/{{ .Values.operator.image }}:{{ .Values.operator.tag }}
{{- end }}
          imagePullPolicy: {{ .Values.operator.pullPolicy }}
          command: [ "bash", "-c", "find . -maxdepth 1 -name '*-apic-cluster-*' -type d -exec rm -rf {} +" ]
          workingDir: /home/apic
          resources:
{{ include "ibm-apiconnect-cip.resources" . | indent 12 }}
          volumeMounts:
          - name: project
            mountPath: "/home/apic"
          securityContext:
{{ include "ibm-apiconnect-cip.securityContext" . | indent 12 }}
      containers:
        - name: {{ .Chart.Name }}
{{- if .Values.operator.registry }}
          image: {{ regexReplaceAll "/$" .Values.operator.registry "" }}/{{ .Values.operator.image }}:{{ .Values.operator.tag }}
{{- else }}
          image: {{ regexReplaceAll "/$" .Values.global.registry "" }}/{{ .Values.operator.image }}:{{ .Values.operator.tag }}
{{- end }}
          imagePullPolicy: {{ .Values.operator.pullPolicy }}
          command: [ "/home/apic/init-files/init.sh" ]
          args: [ "apicup", "server", "--debug", "--create-crd={{ .Values.global.createCrds }}", "--accept-license" ]
          env:
            - name: HOME
              value: "/home/apic"
            - name: HELM_HOME
              value: "/home/apic/.helm"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBECONFIG
              value: "/home/apic/init-files/config"
          ports:
            - containerPort: 1776
          livenessProbe:
            httpGet:
              path: /
              port: 1777
          readinessProbe:
            httpGet:
              path: /
              port: 1777
          workingDir: /home/apic
          resources:
{{ include "ibm-apiconnect-cip.resources" . | indent 12 }}
          volumeMounts:
          - name: apic-extra-values
            mountPath: "/home/apic/extra-values"
          {{- if .Values.operator.helmTlsSecret }}
          - name: helm-tls
            mountPath: "/home/apic/.helm"
          {{- end }}
          - name: init-files
            mountPath: "/home/apic/init-files"
          - name: project
            mountPath: "/home/apic"
          securityContext:
{{ include "ibm-apiconnect-cip.securityContext" . | indent 12 }}
      volumes:
      - name: apic-extra-values
        configMap:
          {{- if .Values.global.extraValuesConfig }}
          name: {{ .Values.global.extraValuesConfig }}
          {{- else }}
          name: {{ template "ibm-apiconnect-cip.fullname" . }}-extra-values
          {{- end }}
          items:
            - key: management
              path: management-extra-values.yaml
            - key: analytics
              path: analytics-extra-values.yaml
            - key: portal
              path: portal-extra-values.yaml
            - key: gateway
              path: gateway-extra-values.yaml
      {{- if .Values.operator.helmTlsSecret }}
      - name: helm-tls
        secret:
          secretName: {{ .Values.operator.helmTlsSecret }}
          defaultMode: 0644
          items:
            - key: cert.pem
              path: cert.pem
            - key: ca.pem
              path: ca.pem
            - key: key.pem
              path: key.pem
      {{- end }}
      - name: project
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-project
      - name: init-files
        projected:
          sources:
          - configMap:
              name: {{ template "ibm-apiconnect-cip.fullname" . }}-cr-files
              items:
                - key: apiconnect-up
                  path: apiconnect-up.yml
                  mode: 0640
                - key: kubeconfig
                  path: config
                - key: init
                  path: init.sh
                  mode: 0750
                - key: helm-wrapper
                  path: helm-wrapper.sh
                  mode: 0750
                - key: register-oidc
                  path: register-oidc.sh
                  mode: 0750
      {{- if .Values.global.certSecret }}
          - secret:
              name: {{ .Values.global.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-common-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-common-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.management.certSecret }}
          - secret:
              name: {{ .Values.management.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-management-{{ .Release.Namespace }}-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-management-{{ .Release.Namespace }}-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.analytics.certSecret }}
          - secret:
              name: {{ .Values.analytics.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-analytics-{{ .Release.Namespace }}-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-analytics-{{ .Release.Namespace }}-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.portal.certSecret }}
          - secret:
              name: {{ .Values.portal.certSecret }}
              items:
                - key: "{{ .Release.Name }}-apic-cluster-portal-{{ .Release.Namespace }}-secrets.yml"
                  path: "{{ .Release.Name }}-apic-cluster-portal-{{ .Release.Namespace }}-secrets.yml"
                  mode: 0640
      {{- end }}
      {{- if .Values.gateway.certSecret }}
          - secret:
              name: {{ .Values.gateway.certSecret }}
              items:
                - key: {{ .Release.Name }}-apic-cluster-gateway-{{ .Release.Namespace }}-secrets.yml
                  path: {{ .Release.Name }}-apic-cluster-gateway-{{ .Release.Namespace }}-secrets.yml
                  mode: 0640
      {{- end }}