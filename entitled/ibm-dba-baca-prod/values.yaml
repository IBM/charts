# Default values for smartpages.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Images
callerapi:
  name: callerapi
  repository: mycluster.icp:8500/<namespace>/processing
  tag: <versiontag>
  pullPolicy: Always
  replicaCount: 3
  maxUnavailableCount: 1
  queue: caller_api
  serviceName: callerapi
  resources:
    # requests:
    #   memory: 256Mi
    #   cpu: "0.2"
    limits:
      # memory: 491.52Mi
      memory: 480Mi



spbackend:
  name: spbackend
  repository: mycluster.icp:8500/<namespace>/backend
  tag: <versiontag>
  pullPolicy: Always
  replicaCount: 3
  maxUnavailableCount: 1
  # pullSecrets:
  #   - myRegistrKeySecretName
  dbSSL: false # true or false.  Indicate whether backend will connect to DB2 via SSL
  baseDB:      #base db2 database name
  baseDBServer:      #base db2 database server
  baseDBPort: 50000  #base db2 database server port
  baseDBUser:   #base db2 database logon user
  resources:
    limits:
      # memory: 491.52Mi
      memory: 640Mi
  backendPath:
  backendPort: 8080
#    SOCKET_SECURE: false
#    SOCKET_PORT: 8080
  callerAPIProtocol: https
  fullCallerAPIPath: /api/v1/actions
  nodeTLSRejectUnauthorized: 0
  ldap: false #string - value would either be true of false,
  ldapFilter:
  ldapDN:
  ldapURL:
  ldapPort:
  ldapBase:
  userName: <username>
  ldapCrtName:
  ldapSelfSignedCrt:

spfrontend:
  name: spfrontend
  repository: mycluster.icp:8500/<namespace>/spfrontend
  tag: <versiontag>
  pullPolicy: Always
  replicaCount: 3
  maxUnavailableCount: 1
  # pullSecrets:
  #   - myRegistrKeySecretName
  backendHost: <hostname>
  backendPort:
  backendPath: backend<namespace>
  frontendHost: <hostname>
  frontendPath: frontend<namespace>
#    SOCKET_HOST:
#    SOCKET_PATH:
#    SOCKET_PORT: $SOCKET_PORT
  # limitsCPU: "0.4"
  resources:
    limits:
      # memory: 491.52Mi
      memory: 480Mi
  # requestsCPU: "0.2"
  # requestsMemory: "500Mi"
  nodeTLSRejectUnauthorized: 0
  sso:
  bxDomainName: <hostname>
  ldap: n #string - value would either be true of false

consumers:
  - name: postprocessing
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/processing
    tag: <versiontag>
    pullPolicy: Always
    queue: postprocessing
    serviceName: postprocessing
    processTimeout: 1500
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        # memory: 491.52Mi
        memory: 480Mi
  - name: pdfprocess
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/extraction
    tag: <versiontag>
    pullPolicy: Always
    queue: pdfprocess
    serviceName: pdfprocess
    processTimeout: 1500
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        # memory: 491.52Mi
        memory: 960Mi
  - name: utf8process
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/extraction
    tag: <versiontag>
    pullPolicy: Always
    queue: utf8process
    serviceName: utf8process
    processTimeout: 1500
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: 960Mi
  - name: setup
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/processing
    tag: <versiontag>
    pullPolicy: Always
    queue: setup
    serviceName: setup
    processTimeout: 120
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: 480Mi
  - name: ocr-extraction
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/extraction
    tag: <versiontag>
    pullPolicy: Always
    queue: ocr_extraction
    serviceName: ocr-extraction
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: 1440Mi
  - name: classifyprocess-classify
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/processing
    tag: <versiontag>
    pullPolicy: Always
    queue: classifyprocess_classify
    serviceName: classifyprocess-classify
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: 960Mi
  - name: processing-extraction
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/processing
    tag: <versiontag>
    pullPolicy: Always
    queue: processing_extraction
    serviceName: processing-extraction
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: $PROCESSING_EXTRACTION_LIMITED_MEMORY
  - name: reanalyze
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/processing
    tag: <versiontag>
    pullPolicy: Always
    queue: reanalyze
    serviceName: reanalyze
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: 720Mi
  - name: updatefiledetail
    arch: amd64
    repository: mycluster.icp:8500/<namespace>/processing
    tag: <versiontag>
    pullPolicy: Always
    queue: updatefiledetail
    serviceName: updatefiledetail
    # pullSecrets:
    #   - myRegistrKeySecretName
    replicaCount: 3
    maxUnavailableCount: 1
    numWorkers: 2
    resources:
      limits:
        memory: 480Mi


## Services

callerapisvc:
  name: callerapi
  type: NodePort
#  externalPort:
  internalPort: 8080
spbackendsvc:
  name: spbackend
  type: NodePort
  internalPort: 8080
#  externalPort: 30102

spfrontendsvc:
  name: spfrontend
  type: NodePort
  internalPort: 8080
  #externalPort: 30102


######################
ingress:
  enabled: true
  # Used to create an Ingress record.
  tls:
    hosts:
    - <hostname>




global:
  annotations:
    productID: "5737-I23-BACA"
    productName: "IBM Cloud Pak for Automation - Business Automation Content Analyzer"
    productVersion: "19.0.2"
  # This setting is for Mongo HA. Set storageClass to "-" to disable dynamic provisioning for MongoHA.  Set to a valid storage class name if you already have storage class to use
  storageClass: "-"
  arch: amd64
  image:
    pullSecrets:
#      - <INSERT YOUR DOCKER REGISTRY SECRET NAME HERE !!!!>
  redis:
    image:
      repository: mycluster.icp:8500/<namespace>/redis
      tag: <versiontag>
      pullPolicy: Always
    replicas: 3
    quorum: 2 # This values is the number to sentinels must agree on to promote a slave to the new master when a master goes down.
    HA: true # don't change this.
    masterGroupName: mymaster
    resources:
      limits:
        memory: 640Mi
        cpu: "250m"
  sslValidate: false #false = self-sign, true= not self-sign
  namespace:
    name: <namespace>
  mongo:
    image:
      repository: mycluster.icp:8500/<namespace>/mongoha
      tag: <versiontag>
      pullPolicy: Always
#      replicaCount: 1
#    type: LoadBalancer
    mongoPort: 27017
#    mongoLimitedMemory: $MONGO_LIMITED_MEMORY
    wiredTigerCache: $MONGO_WIREDTIGER_LIMIT
#   HA: true # don't change this.
  mongoadmin:
    image:
      repository: mycluster.icp:8500/<namespace>/mongoha
      tag: <versiontag>
      pullPolicy: Always
#      replicaCount: 1
#    type: LoadBalancer
    mongoAdminPort: 27017
#    mongoAdminLimitedMemory: $MONGO_ADMIN_LIMITED_MEMORY
    wiredTigerCache: $MONGO_WIREDTIGER_LIMIT
    HA: true # don't change this.
  rabbitmq:
    image:
      repository: mycluster.icp:8500/<namespace>/rabbitmq
      tag: <versiontag>
      pullPolicy: Always
    resources:
      limits:
        memory: 640Mi
        cpu: "500m"
    replicas: 3
    ulimitNofiles: '65536'
  celery:
    processTimeout: 300
  configs:
    claimname: sp-config-pvc
  logs:
    claimname: sp-log-pvc
    logLevel: debug
  data:
    claimname: sp-data-pvc
