{{ if ( .Values.development ) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  # Unique key of the Deployment instance
  name: {{ .Values.servicename }}-tenant-svt
  labels:
    app.kubernetes.io/name: {{ template "eventstore.fullname" . }}
    helm.sh/chart: "{{ .Chart.Name }}"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    release: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.svt.replicas }}
  selector:
     matchLabels:
       app.kubernetes.io/name: {{ .Values.servicename }}-tenant-svt
  template:
    metadata:
      name: {{ .Values.servicename }}-tenant-svt
      labels:
        app.kubernetes.io/name: {{ .Values.servicename }}-tenant-svt
        helm.sh/chart: "{{ .Chart.Name }}"
        name: {{ template "eventstore.name" . }}
        release: "{{ .Release.Name }}"
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        enabled: "true"
      annotations:
        {{- include "eventstore.annotations" . | indent 8 }}
    spec:
      affinity:
        {{- include "eventstore.nodeAffinity" . | indent 6 }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ .Values.servicename }}-tenant-svt
              topologyKey: "kubernetes.io/hostname"
      {{- include "eventstore.tolerations" . | indent 6 }}
      {{- include "eventstore.security" . | indent 6 }}
      serviceAccountName: {{ default "default" .Values.serviceAccountName }}
      containers:
      - name: svt
        {{- if .Values.svt.image.tag }}
        image: {{ .Values.svt.image.repository }}:{{ .Values.svt.image.tag }}
        {{- else }}
        image: {{ .Values.svt.image.repository }}:{{ .Values.image.universalTag }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: [{{ .Values.svt.image.args }}]
        {{- include "eventstore.securityContext" . | indent 8 }}
        env:
        - name: CLIENT_STOREPASS
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.servicename }}-ssl-secrets"
              key: client_storepass
        - name: SERVICENAME
          value: {{ .Values.servicename }}
        - name: RELEASE_NAMESPACE
          value: {{ .Release.Namespace }}
        volumeMounts:
        - name: svt-config-volume
          mountPath: /k8s_mount
        - name: user-home-mount
          mountPath: /user-home
      volumes:
      - name: svt-config-volume
        configMap:
          name: "{{ .Values.servicename }}-config-files"
          items:
          - key: svt-perf-conf
            path: svt-perf.conf
      {{- include "eventstore.user-home-pvc" .  | indent 6 }}
      restartPolicy: Always
{{- end }}
