global:
  image:
    repository: ""

# replicas - If set to 0 the size is configured based on .global.deploymentType (defined in umbrella chart))
replicas: 0

autoscaling:
  maxReplicas: 10
  targetCPUUtilizationPercentage: 100

# imagePullSecret - Additional image pull secret to be used for pulling images. Supports templated values
imagePullSecret: "{{ tpl .Values.global.image.pullSecret . }}"

image:
  repository: "{{ tpl .Values.global.image.repository . }}"
  name:       "store"
  tag:        "20190812-092922-bf3c75"
  pullPolicy: "IfNotPresent"

# Subkeys based on container name
schemaCheck:
  image:
    repository: "{{ tpl .Values.global.image.repository . }}"
    name:       "conan-tools"
    tag:        "20190809-0011"
    pullPolicy: "IfNotPresent"
etcd:
  image:
    repository: "{{ tpl .Values.global.image.repository . }}"
    name:       "conan-tools"
    tag:        "20190809-0011"
    pullPolicy: "IfNotPresent"
cluStarted:
  image:
    repository: "{{ tpl .Values.global.image.repository . }}"
    name:       "conan-tools"
    tag:        "20190809-0011"
    pullPolicy: "IfNotPresent"

# Helper jobs related to secrets
ssl:
  image:
    repository: "{{ tpl .Values.global.image.repository . }}"
    name:       "conan-tools"
    tag:        "20190809-0011"
    pullPolicy: "IfNotPresent"

  # ssl.secretName - name of manually created secret with SSL cert (if specified). If the value is empty the secret is autogenerated with a new cert using name {{ .Release.Name }}-store-ssl.
  # The manually created secret needs to contain `ssl_key` and `ssl_cert` keys, values are base64 encoded
  secretName: ""


creds:
  # image used to generate/delete the store vcap secret
  image:
    repository: "{{ tpl .Values.global.image.repository . }}"
    name:       "conan-tools"
    tag:        "20190809-0011"
    pullPolicy: "IfNotPresent"


init:
  # init.schemaCreated - if set to true the store will wait until DB schema (with expected version) is created
  schemaCreated: true

  # init.cluStarted - if set to true the store will wait until the CLU components start successfully
  cluStarted: true

# languages - List of languages to be emabled in store (a comma separated list). Permitted values are "en,es,pt-br,fr,it,ja,de,ko,ar,nl,zh-tw,zh-cn,cs". If empty the default content is constructed using global.languages
languages: ""

# languagesFuzzyMatch - List of languages for which the fuzzy matching shout be used(a comma separated list). Permitted values are "en,es,fr,it,pt-br,de,cs,ja,ar,ko,nl". If empty the default content is constructed using global.languages
languagesFuzzyMatch: ""


# The suffix of all the cluster DNS names like service_name.service_namespace.svc.cluster.local
# No need to change
#clusterDomain: "cluster.local"
clusterDomain: '{{ tpl .Values.global.clusterDomain . }}'
