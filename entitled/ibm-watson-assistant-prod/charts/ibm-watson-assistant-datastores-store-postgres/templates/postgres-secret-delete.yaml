###############################################################################
# Licensed Materials - Property of IBM.
# Copyright IBM Corporation 2018. All Rights Reserved.
# U.S. Government Users Restricted Rights - Use, duplication or disclosure 
# restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Contributors:
#  IBM Corporation - initial API and implementation
###############################################################################
{{- if  not (include "assistant.boolConverter" (list .Values.config.keep  . )) }}{{- include "sch.config.init" (list . .Values.global.schConfigTemplate) -}}
{{- $secretName := include "assistant.postgres.secret_name" . }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-del-secret-postgres"
  labels:  &labels
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
    component: "helm-postgres-delete-password-secret"
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
spec:
  backoffLimit: 10
  template:
    metadata:
      name: cred-del
      labels: 
        <<: *labels
    spec:
      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      #imagePullSecrets:
      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
      - name: cred-del
        image: "{{ if tpl ( .Values.creds.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.creds.image.repository | toString ) . ) }}{{ end }}/{{ .Values.creds.image.name }}:{{ .Values.creds.image.tag }}"
        imagePullPolicy: {{ .Values.creds.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 2000

        command:
        - "/bin/sh"
        - -c
        - |
          set -ex
          if kubectl get   secret {{ $secretName }} -n {{ .Release.Namespace }} ; then
            kubectl delete secret {{ $secretName }} -n  {{ .Release.Namespace }}
          fi
      restartPolicy: Never
{{- end }}
