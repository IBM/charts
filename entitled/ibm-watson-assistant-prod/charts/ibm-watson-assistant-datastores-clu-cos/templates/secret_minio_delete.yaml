{{- if  not (include "assistant.boolConverter" (list .Values.minio.keep  . )) }}{{- include "sch.config.init" (list . .Values.global.schConfigTemplate) -}}
{{- if (not .Values.global.cos.sse.secretName) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-delete-secret-cos
{{ include "clu.labels" . | indent 2 }}
    lifecycle: "uninstall"
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-weight": "-6"
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      name: {{ .Release.Name }}-cos-cleanup-container
{{ include "clu.labels" . | indent 6 }}
        lifecycle: "uninstall"
    spec:
      affinity:
{{- include "sch.affinity.nodeAffinity" (list . .sch.chart.nodeAffinity) | indent 8 }}
      hostIPC: false
      hostNetwork: false
      hostPID: false

      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      containers:
      - name: cleanup
        image: "{{ if tpl ( .Values.creds.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.creds.image.repository | toString ) . ) }}{{ end }}/{{ .Values.creds.image.name }}:{{ .Values.creds.image.tag }}"
        imagePullPolicy: {{ .Values.creds.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 2000

        command:
        - "/bin/sh"
        - -c
        - |
          if kubectl get   secret {{ .Release.Name }}-clu-minio-sse -n {{ .Release.Namespace }} ; then
            kubectl delete secret {{ .Release.Name }}-clu-minio-sse -n {{ .Release.Namespace }}
          fi
      restartPolicy: Never


{{- end }}
{{- end }}
