
{{- define "recommends.secret" -}}
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: "{{ .Release.Name }}-recommends"
  labels:
    service:   "conversation"
    component: "recommends"
    slot:      "{{ .Release.Name }}"
    app:        "ibm-watson-assistant-prod-1.3.0"
    chart:      "ibm-watson-assistant"
    heritage:   "{{ .Release.Service }}"
    release:    "{{ .Release.Name }}"
data:
  cos_api_key:                      "V0pFNkJGMG00SHVNZDJMSlZxbW5xbWNMU29zV2hZRGVSNHBZVWx0UjJndlY="
  reco_key_pw:                      "YVcxd2NtOTJaV05vWVc1blpXbDBDZw=="
  store_cert:                       "QmFnIEF0dHJpYnV0ZXMKICAgIGxvY2FsS2V5SUQ6IDMxIDM0IDMzIDM0IDM1IDM3IDM3IDM5IDM0IDMxIDMzIDMzIDMxCiAgICBmcmllbmRseU5hbWU6IHRvbWNhdApzdWJqZWN0PS9DPVVTL1NUPVRYL0w9QXVzdGluL089SUJNL09VPVdhdHNvbiBQbGF0Zm9ybSBTZXJ2aWNlcy9DTj1XYXRzb24gUGxhdGZvcm0gU2VydmljZXMKaXNzdWVyPS9DPVVTL1NUPVRYL0w9QXVzdGluL089SUJNL09VPVdhdHNvbiBQbGF0Zm9ybSBTZXJ2aWNlcy9DTj1XYXRzb24gUGxhdGZvcm0gU2VydmljZXMKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuVENDQW9XZ0F3SUJBZ0lFRmNlUUNEQU5CZ2txaGtpRzl3MEJBUXNGQURCL01Rc3dDUVlEVlFRR0V3SlYKVXpFTE1Ba0dBMVVFQ0JNQ1ZGZ3hEekFOQmdOVkJBY1RCa0YxYzNScGJqRU1NQW9HQTFVRUNoTURTVUpOTVNFdwpId1lEVlFRTEV4aFhZWFJ6YjI0Z1VHeGhkR1p2Y20wZ1UyVnlkbWxqWlhNeElUQWZCZ05WQkFNVEdGZGhkSE52CmJpQlFiR0YwWm05eWJTQlRaWEoyYVdObGN6QWVGdzB4TkRFeU1UQXlNalV5TXpOYUZ3MHhOVEF6TVRBeU1qVXkKTXpOYU1IOHhDekFKQmdOVkJBWVRBbFZUTVFzd0NRWURWUVFJRXdKVVdERVBNQTBHQTFVRUJ4TUdRWFZ6ZEdsdQpNUXd3Q2dZRFZRUUtFd05KUWsweElUQWZCZ05WQkFzVEdGZGhkSE52YmlCUWJHRjBabTl5YlNCVFpYSjJhV05sCmN6RWhNQjhHQTFVRUF4TVlWMkYwYzI5dUlGQnNZWFJtYjNKdElGTmxjblpwWTJWek1JSUJJakFOQmdrcWhraUcKOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9yY3QyS0dTTHJTZWVQYWtpM3ZaOUVpWTBFN05zR3FyTzFkMQpGMVdnK21Dc0RQNUFkLzBXaXM5RWxNMjRiRFR5cHhrNURpcXJQbmVzendyVmplWmV1QkdOeUxCMTBoNmRhTTVIClJvS0ZSQVovUkVnbU0zRGVmWGJ1akEvL2trSnM0VG9ISUhYUzUyS284b2tSS0xua21FbTZ5NWdGaFRBOWQyN3EKV3VEZU05RFJGb1ExdjV1UXliVXJkZGt1QlRkbDBjVGhqR3JSSDMvdVVoZGErYThHQ0Z3YWR6enVMVUgyQnluYQo1SExteTdwM2VqRHh6VVZVcG9wejBqdUR0Q0N4NEp0eFNoVE41R01UNWNPM3pCTDZJVHNVL0tIWmpuTzlTa1JzCmNCelc3R0hOZTh5VUVSZitLWU5lVWZSUXdVMGRjRkZZRmpFQ0tXT1hlQXlHVWMyN3h3SURBUUFCb3lFd0h6QWQKQmdOVkhRNEVGZ1FVMUMzUDdwZkk0NFNSMU43SlhRMUFTbUxJS2p3d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQgpBQm9XZks5VmtYaU5hUEVuRUQ5WWFRWEpNTWVqZ1owaERycDNNUS9zVTkrR0hIUWdLQ21CUWNTUjZHbVR0b2NRCldRcWJqSTlLYWsvdEZHTXhEMFU4SGhhUGFvaDdXNG5sM1JNYURFQXdhRnZOSkJYMTVpQVpCeTQ2ZjFhdVNHVFoKZXZjdktuL0J0SEcxaDJmcHRVNXIycm1ha2VIOFl6YXRHbmFSblA4MEx3M2VmQ0VySFNCb3dOM1dmVXMzT3pFWgpRS2ZWOUVzdWVDVlVQcjFYeldOYVJIejZGcDJZci94NFJJbVZTZjUyU1NtVkF6dHRTbUd4enBueFVhSE9LYlBlCnhrZzEyTHN6bERJVGt4WUxxZ21uMFFDNUoyRzlCNDZLMERSdHQ4dXZLYkc5bXl4dGQ2MSs5R3NnTUw0OC8rbW0KbEp3NUxqRHVrcHJmblFIUnpPNis0ZTA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
{{- if .Values.global.mongodb.create }}
  mongodb_connection_string: $( echo "mongodb://${MONGODB_ADMIN_USER}:${MONGODB_ADMIN_PASSWORD}@{{ include "assistant.mongodb.svc.connectionString" . }}" | tr -d '\n' | base64 | tr -d '\n' )
{{- else }}
  mongodb_connection_string: $( echo "mongodb://${MONGODB_ADMIN_USER}:${MONGODB_ADMIN_PASSWORD}@{{ .Values.global.mongodb.hostname }}:{{ .Values.global.mongodb.port }}/admin?ssl=true" | tr -d '\n' | base64 | tr -d '\n' )
{{- end }}
  mongodb_certificate: "$( echo "${MONGODB_TLS_CERT}"  | base64 | tr -d '\n' )"
  redis_connection_string:   "$( echo "redis://admin:${REDIS_PASSWORD}@{{ include "assistant.redis.hostname" . }}:{{ include "assistant.redis.port" . }}" | tr -d '\n' | base64 | tr -d '\n' )"
  redis_secret:              "$( openssl rand -hex 64 | cut -c -16 | tr -d '\n' | base64 | tr -d '\n' )"
{{- end -}}
{{- include "sch.config.init" (list . .Values.global.schConfigTemplate) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-recommends-secret-gen-job"
  labels:  &labels
    <<: &primary_labels # Don't touch or extend these labels!
      service:   "conversation"
      component: "recommends-secret-gen-job"
      slot:      "{{ .Release.Name }}"
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  backoffLimit: 10
  template:
    metadata:
      name: cred-gen
      labels: 
        <<: *labels
    spec:
      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      #imagePullSecrets:
      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
      - name: cred-gen
        image: "{{ if tpl ( .Values.creds.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.creds.image.repository | toString ) . ) }}{{ end }}/{{ .Values.creds.image.name }}:{{ .Values.creds.image.tag }}"
        imagePullPolicy: {{ .Values.creds.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 2000

        env:
          - name: "REDIS_PASSWORD"
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-redis-password # Secret generated for redis datachart.
                key: password
          - name: MONGODB_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: "{{ template "assistant.mongodb.admin.secretName" . }}"
                key: user 
          - name: MONGODB_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ template "assistant.mongodb.admin.secretName" . }}"
                key: password 
          - name: MONGODB_TLS_CERT
            valueFrom:
              secretKeyRef:
                name: "{{ template "assistant.mongodb.cert.secretName" . }}"
                key: tls.crt
        command:
        - "/bin/sh"
        - -c
        - |
          set -e
          echo ""
          cat <<EOF | kubectl apply -n {{ .Release.Namespace }} -f -
          ---
{{ include "recommends.secret" . | indent 10 }}
          EOF
      restartPolicy: Never
