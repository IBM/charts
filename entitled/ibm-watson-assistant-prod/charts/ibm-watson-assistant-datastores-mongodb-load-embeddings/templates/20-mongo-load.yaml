apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name}}-recommends-load-mongo"
  labels:
    service:   "conversation"
    component: "mongodb-load-embeddings"
    slot:      "{{ .Release.Name }}"
    app: "ibm-watson-assistant-prod-1.3.0"
    chart: "ibm-watson-assistant"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 432000
  template:
    metadata:
      name: recommends-load-mongo
      labels:
        service:   "conversation"
        component: "mongodb-load-embeddings"
        slot:      "{{ .Release.Name }}"
        app: "ibm-watson-assistant-prod-1.3.0"
        chart: "ibm-watson-assistant"
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      initContainers:
      - name: recommends-load-data-en-counts
        image:  "{{ if tpl ( .Values.dataEmbeddings.en.counts.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.dataEmbeddings.en.counts.image.repository | toString ) . ) }}{{ end }}/{{ .Values.dataEmbeddings.en.counts.image.name }}:{{ .Values.dataEmbeddings.en.counts.image.tag }}"
        imagePullPolicy: {{ .Values.dataEmbeddings.en.counts.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: ["sh", "-c", "cd /home/app && ./move_data.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data
          name: recommends-data
      - name: recommends-load-data-en-precomputed
        image:  "{{ if tpl ( .Values.dataEmbeddings.en.precomputed.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.dataEmbeddings.en.precomputed.image.repository | toString ) . ) }}{{ end }}/{{ .Values.dataEmbeddings.en.precomputed.image.name }}:{{ .Values.dataEmbeddings.en.precomputed.image.tag }}"
        imagePullPolicy: {{ .Values.dataEmbeddings.en.precomputed.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: ["sh", "-c", "cd /home/app && ./move_data.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data
          name: recommends-data
      - name: recommends-load-data-en-wordembeddings
        image:  "{{ if tpl ( .Values.dataEmbeddings.en.wordEmbeddings.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.dataEmbeddings.en.wordEmbeddings.image.repository | toString ) . ) }}{{ end }}/{{ .Values.dataEmbeddings.en.wordEmbeddings.image.name }}:{{ .Values.dataEmbeddings.en.wordEmbeddings.image.tag }}"
        imagePullPolicy: {{ .Values.dataEmbeddings.en.wordEmbeddings.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: ["sh", "-c", "cd /home/app && ./move_data.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data
          name: recommends-data
        volumeMounts:
        - mountPath: /data
          name: recommends-data
{{- if .Values.global.languages.spanish }}
      - name: recommends-load-data-es
        image:  "{{ if tpl ( .Values.dataEmbeddings.es.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.dataEmbeddings.es.image.repository | toString ) . ) }}{{ end }}/{{ .Values.dataEmbeddings.es.image.name }}:{{ .Values.dataEmbeddings.es.image.tag }}"
        imagePullPolicy: {{ .Values.dataEmbeddings.es.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: ["sh", "-c", "cd /home/app && ./move_data.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data
          name: recommends-data
        volumeMounts:
        - mountPath: /data
          name: recommends-data
{{- end }}
{{- if .Values.global.languages.french }}
      - name: recommends-load-data-fr
        image:  "{{ if tpl ( .Values.dataEmbeddings.fr.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.dataEmbeddings.fr.image.repository | toString ) . ) }}{{ end }}/{{ .Values.dataEmbeddings.fr.image.name }}:{{ .Values.dataEmbeddings.fr.image.tag }}"
        imagePullPolicy: {{ .Values.dataEmbeddings.fr.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: ["sh", "-c", "cd /home/app && ./move_data.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data
          name: recommends-data
        volumeMounts:
        - mountPath: /data
          name: recommends-data
{{- end }}
{{- if .Values.global.languages.japanese }}
      - name: recommends-load-data-ja
        image:  "{{ if tpl ( .Values.dataEmbeddings.ja.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.dataEmbeddings.ja.image.repository | toString ) . ) }}{{ end }}/{{ .Values.dataEmbeddings.ja.image.name }}:{{ .Values.dataEmbeddings.ja.image.tag }}"
        imagePullPolicy: {{ .Values.dataEmbeddings.ja.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: ["sh", "-c", "cd /home/app && ./move_data.sh"]
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - mountPath: /data
          name: recommends-data
        volumeMounts:
        - mountPath: /data
          name: recommends-data
{{- end }}
      - name: mongo-check
        image:  "{{ if tpl ( .Values.loader.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.loader.image.repository | toString ) . ) }}{{ end }}/{{ .Values.loader.image.name }}:{{ .Values.loader.image.tag }}"
        imagePullPolicy: {{ .Values.loader.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: [ "/scripts/check_mongo_is_running.sh" ]
        env:
        - name: mongo_url
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-recommends"
              key: mongodb_connection_string
        - name: mongo_cert
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-recommends"
              key: mongodb_certificate
        - name: word_embeddings_settings
          value: "{{ include "assistant.recommends.languages" . }}"
        resources:
          requests:
            memory: "200Mi"
            cpu: "200m"
          limits:
            memory: "500Mi"
            cpu: "200m"
        volumeMounts:
        - name:      "recommends-data"
          mountPath: "/data"
        - name:      "scripts"
          mountPath: "/scripts"
      containers:
      - name: recommends-load-mongo
        image:  "{{ if tpl ( .Values.loader.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.loader.image.repository | toString ) . ) }}{{ end }}/{{ .Values.loader.image.name }}:{{ .Values.loader.image.tag }}"
        imagePullPolicy: {{ .Values.loader.image.pullPolicy | quote }}
        securityContext:
{{ include "assistant.recommends.securityContext" . | indent 10 }}
        command: [ "/scripts/load_data_embeddings.sh" ]
        env:
        - name: mongo_url
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-recommends"
              key: mongodb_connection_string
        - name: mongo_cert
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-recommends"
              key: mongodb_certificate
        - name: embeddings
          value: "{{ include "assistant.recommends.languages" . }}"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "6Gi"
            cpu: "2"
        volumeMounts:
        - name:      "recommends-data"
          mountPath: "/data"
        - name:      "scripts"
          mountPath: "/scripts"
      restartPolicy: Never
      volumes:
      - name: recommends-data
{{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
  {{- if tpl .Values.dataPVC.existingClaimName . }}
          claimName: {{ tpl .Values.dataPVC.existingClaimName . }}
  {{- else }}
          claimName: {{ .Release.Name }}-{{ .Values.dataPVC.name }}
  {{- end }}
{{- else }}
        emptyDir: {}
{{- end }}
      - name: "scripts"
        configMap:
          name: "{{ .Release.Name}}-recommends-load-mongo-scripts"
          defaultMode: 0755
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "amd64"