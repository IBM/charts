
{{- define "skillSearch.authorization-encryption.secret" -}}
apiVersion: v1
kind: Secret
metadata:
  name: "{{ include "skillSearch.authorization-encryption.secretName"        . }}"
  labels:
    service:   "conversation"
    component: "skill-search"
    slot:      "{{ .Release.Name }}"
    app: "ibm-watson-assistant-prod-1.3.0"
    chart: "ibm-watson-assistant"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
type: Opaque
data:
  authorization_encryption_key: "$(openssl rand -hex 256 | tr -d '\n' | head -c 16 | base64 | tr -d '\n')"
{{- end -}} 
{{- if not (tpl .Values.global.skillSearch.encryptionKey.existingSecretName . ) }}
{{- include "sch.config.init" (list . .Values.global.schConfigTemplate) -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-skill-search-auth-encrypt-key-gen-job"
  labels:  &labels
    <<: &primary_labels # Don't touch or extend these labels!
      service:   "conversation"
      component: "search-skill-authorization-key-gen-job"
      slot:      "{{ .Release.Name }}"
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  backoffLimit: 10
  template:
    metadata:
      name: cred-gen
      labels: 
        <<: *labels
    spec:
      serviceAccountName: {{ (printf "%s-credentials" .Release.Name) | quote }}
      #imagePullSecrets:
      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
      - name: auth-gen
        image: "{{ if tpl ( .Values.authKey.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.authKey.image.repository | toString ) . ) }}{{ end }}/{{ .Values.authKey.image.name }}:{{ .Values.authKey.image.tag }}"
        imagePullPolicy: {{ .Values.authKey.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 2000

        command:
        - "/bin/sh"
        - -c
        - |
          set -e
          echo ""
          cat <<EOF | kubectl apply -n {{ .Release.Namespace }} -f -
          ---
{{ include "skillSearch.authorization-encryption.secret" . | indent 10 }}
          EOF
      restartPolicy: Never
{{- end -}} 
