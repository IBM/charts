{{- include "sch.config.init" (list . .Values.global.schConfigTemplate) -}}apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-skill-search
  labels: &deployment_labels
    <<: &primary_labels # Don't touch or extend these labels!
      service:   "conversation"
      component: "skill-search"
      slot:      "{{ .Release.Name }}"
    # Make sure the indent of other labels is the same as this comment's
    tenant: PUBLIC

    app:         "ibm-watson-assistant-prod-1.3.0"
    chart:       "ibm-watson-assistant"
    heritage:    "{{ .Release.Service }}"
    release:     "{{ .Release.Name }}"
spec:
  replicas: {{ include "assistant.skillSearch.replicas" . }}
  revisionHistoryLimit: 4
  selector:
    matchLabels: *primary_labels # Don't touch or extend!
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 4
  template:
    metadata:
      labels:
        <<: *deployment_labels
        # Any pod-specific labels go below
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
      {{- if tpl .Values.imagePullSecret . }}
      imagePullSecrets:
        - name: {{ tpl .Values.global.image.pullSecret . | quote }}
      {{- end }}

      terminationGracePeriodSeconds: 35
      hostIPC: false
      hostNetwork: false
      hostPID: false

      containers:
        - name: "skill-search"
          image: "{{ if tpl ( .Values.image.repository | toString ) . }}{{ trimSuffix "/" (tpl (.Values.image.repository | toString ) . ) }}{{ end }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001

          ports:
            - name: "https"
              containerPort: 9443
          env:
            - name: "PAGERDUTY_CLIENT_NAME"
              value: "{{ .Release.Name }}-skill-search"
            - name: "SKILLS_ENABLED"
              value: "SEARCH"
            - name: "MAX_THREADS"
              value: "{{ .Values.maxThreads }}"
            - name: "DISCOVERY_CONFIDENCE_THRESHOLD_DEFAULT"
              value: "0.0"
            - name: "STATSD_ENABLED"
              value: "false"
            - name: "STATSD_PREFIX"
              value: "{{ .Release.Name }}-skill-search"
            - name: "ICP_ENVIRONMENT"
              value: "true"
            - name: "DISCOVERY_DEDUPLICATE_FIELD"
              value: "url"

  # insert AUTHORIZATION_ENCRYPTION_KEY only if it is available
            - name: "AUTHORIZATION_ENCRYPTION_KEY"
              valueFrom:
                secretKeyRef:
                  name: "{{ include "skillSearch.authorization-encryption.secretName"        . }}"
                  key: "authorization_encryption_key"
            - name:  "JAVA_MEMORY_XMX"
              value: "{{ .Values.javaMemoryXMX }}"
          resources:
            requests:
              cpu:    50m
              memory: 256Mi
            limits:
              # cpu limits removed if variable is set to false, "" or 0 (eg in ICP environments where we want cpu limit disabled)
              memory: 256Mi
          lifecycle:
            preStop:
              exec:
                command: ["bash", "-c", "sleep 30"]

          readinessProbe:
            httpGet:
              path: /skills/search/api/v1/ready
              scheme: HTTPS
              port: "https"
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3

          livenessProbe:
            httpGet:
              path: /skills/search/api/v1/live
              scheme: HTTPS
              port: "https"
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 2
        # Not adding statsd container

        # Not adding logmet-config volumeMount for statsd container since logmet is disabled for skill_search
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - "amd64"

{{- $_ := set . "compName" "skill-search" }}
{{ include "assistant.podAntiAffinity" . | indent 8 }}
