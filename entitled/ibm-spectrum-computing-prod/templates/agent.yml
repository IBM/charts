{{- include "sch.config.init" (list . "ibm-spectrum-computing.sch.chart.config.values") -}}
{{- $fullName := include "sch.names.fullName" (list .) -}}
{{- $role := "agent" -}}
{{- if semverCompare ">=1.11.1" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: apps/v1
{{- else if .Capabilities.APIVersions.Has "apps/v1beta2" -}}
apiVersion: apps/v1beta2
{{- else -}}
apiVersion: apps/v1beta1
{{- end }}
kind: DaemonSet
metadata:
  name: {{ $fullName }}-{{ $role }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
    role: {{ $role }}
spec:
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
      role: {{ $role }}
  template:
    metadata:
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
        role: {{ $role }}
      annotations:
{{ toYaml .sch.chart.metering | indent 8 }}
    spec:
{{ toYaml .sch.chart.podsecurity2 | indent 6}}
      affinity:
{{ toYaml .sch.chart.affinity | indent 8 }}
              {{- if .Values.compute.excludeHostLabel }}
              - key: {{ .Values.compute.excludeHostLabel }}
                operator: DoesNotExist
              {{- end }}
      dnsPolicy: ClusterFirst
      subdomain: default-subdomain
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.compute.image }}:{{ .Values.compute.tag }}"
          imagePullPolicy: {{ .Values.compute.imagePullPolicy }}
{{ if .Values.gpu.nvidiapath }}
{{ toYaml .sch.chart.privcontainerSecurity | indent 10 }}
{{- else -}}
{{ toYaml .sch.chart.containerSecurity | indent 10 }}
{{- end }}
          args: [ "agent", "yes" ]
          env:
{{ toYaml .sch.chart.env | indent 12 }}
          resources:
            requests:
              cpu: 200m
              memory: 512M
            limits:
              cpu: 2000m
              memory: 4096M
          readinessProbe:
            exec:
              command:
                - ls
                - /tmp/lsf-ready
            initialDelaySeconds: 60
            periodSeconds: 60
          livenessProbe:
            exec:
              command:
                - ls
                - /tmp/lsf-alive
            initialDelaySeconds: 60
            periodSeconds: 60
          volumeMounts:
            - name: sbatchd-volume
              mountPath: "/tmp/.myCluster.sbd"
{{- if .Values.gpu.nvidiapath }}
            - name: nvidia-volume
              mountPath: "/usr/local/nvidia"
{{- end }}
      volumes:
        - name: sbatchd-volume
          emptyDir: {}
{{- if .Values.gpu.nvidiapath }}
        - name: nvidia-volume
          hostPath:
            path: {{ default "" .Values.gpu.nvidiapath | quote }}
            type: ""
{{- end }}
      restartPolicy: Always
