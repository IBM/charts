{{- include "sch.config.init" (list . "hsts.sch.chart.config.values") -}}
{{- if not (.Capabilities.APIVersions.Has "route.openshift.io/v1") }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
{{  include "sch.metadata.labels.standard" (list . "") | indent 4 }}
  name: {{ include "sch.names.fullCompName" (list . ) | quote }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Forwarded-Server {{ .Values.ingress.hostname }};
    ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Forwarded-Server {{ .Values.ingress.hostname }};
spec:
  tls:
  - hosts:
    - {{ .Values.ingress.hostname }}
    secretName: {{ include "hsts.cert" . }}
  rules:
  - host: {{ .Values.ingress.hostname }}
    http:
      paths:
      - path: /ops/transfers
        backend:
          serviceName: {{ include "sch.names.fullCompName" (list . .sch.chart.components.httpProxy.compName ) | quote }}
          servicePort: {{ .Values.httpProxy.service.api.port }}
      - path: /
        backend:
          serviceName: {{ include "sch.names.fullCompName" (list . .sch.chart.components.asperanode.service.api ) | quote }}
          servicePort: {{ .Values.httpProxy.service.api.port }}
{{- end }}