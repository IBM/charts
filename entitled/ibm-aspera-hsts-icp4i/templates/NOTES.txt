{{- include "sch.config.init" (list . "hsts.sch.chart.config.values") }}
{{- $namePrefix := .sch.chart.components.asperanode.service -}}
{{- $service := include "sch.names.fullCompName" (list . $namePrefix ) -}}
Chart: {{ .Chart.Name }}-{{ .Chart.Version }}

Note: If installing on ICP for RedHat OpenShift, the HSTS API can be accessed via port "3443" instead of the default "443"

Node API - Using node admin
  - curl -u $(kubectl get secret -n {{ .Release.Namespace }} {{ include "hsts.secret.nodeAdmin" .}} --output=jsonpath={.data.NODE_USER} | base64 -d):$(kubectl get secret -n {{ .Release.Namespace }} {{ include "hsts.secret.nodeAdmin" .}} --output=jsonpath={.data.NODE_PASS} | base64 -d) https://{{ .Values.ingress.hostname }}:443/info

Node API - Using Access Key:
  - curl -u $(kubectl get secret -n {{ .Release.Namespace }} {{ include "hsts.secret.accessKey" .}} --output=jsonpath={.data.ACCESS_KEY_ID} | base64 -d):$(kubectl get secret -n {{ .Release.Namespace }} {{ include "hsts.secret.accessKey" .}} --output=jsonpath={.data.ACCESS_KEY_SECRET} | base64 -d) https://{{ .Values.ingress.hostname }}:443/info

Create basic token for transfers:
  - echo -n "Basic $(echo -n $(kubectl get secret -n {{ .Release.Namespace }} {{ include "hsts.secret.accessKey" .}} --output=jsonpath={.data.ACCESS_KEY_ID} | base64 -d):$(kubectl get secret -n {{ .Release.Namespace }} {{ include "hsts.secret.accessKey" .}} --output=jsonpath={.data.ACCESS_KEY_SECRET} | base64 -d) | base64 -w0)"
