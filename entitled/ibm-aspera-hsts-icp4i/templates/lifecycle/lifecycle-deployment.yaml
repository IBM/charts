{{- include "sch.config.init" (list . "hsts.sch.chart.config.values") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.lifecycle.compName ) | quote }}
  labels:
{{  include "sch.metadata.labels.standard" (list . .sch.chart.components.lifecycle.compName) | indent 4 }}
spec:
  replicas: {{ include "hsts.replicas.lifecycle" . }}
  selector:
    matchLabels:
{{  include "sch.metadata.labels.standard" (list . .sch.chart.components.lifecycle.compName ) | indent 6 }}
  template:
    metadata:
      annotations:
        checksum/lifecycle-configmap: {{ include (print $.Template.BasePath "/lifecycle/lifecycle-configmap.yaml") . |  sha256sum | trunc 63 }}
        {{- if .Values.productionDeployment }}
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.meteringProd) | indent 8 }}
        {{- else }}
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.meteringNonProd) | indent 8 }}
        {{- end }}
      labels:
{{  include "sch.metadata.labels.standard" (list . .sch.chart.components.lifecycle.compName ) | indent 8 }}
        service: {{ include "sch.names.fullCompName" (list . .sch.chart.components.lifecycle.compName ) | quote }}
    spec:
      serviceAccountName: {{ .Values.rbac.serviceAccountName }}
      affinity:
{{- include "sch.affinity.nodeAffinity" (list .) | indent 8 }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - {{ include "sch.names.fullCompName" (list . .sch.chart.components.lifecycle.compName ) | quote }}
              topologyKey: "kubernetes.io/hostname"
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      initContainers:
{{ include "hsts.spec.init.probe.redis" . | indent 6 }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 8000
      containers:
      - name: lifecycle
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 8000
          capabilities:
            drop:
            - ALL
        image: {{ include "hsts.image.lifecycle" . }}
        imagePullPolicy: {{ .Values.lifecycle.image.pullPolicy }}
        resources:
          requests:
            memory: 20Mi
            cpu: '.002'
          limits:
            memory: 200Mi
            cpu: '.01'
        ports:
        - name: lifecycle-port
          containerPort: 8000
        readinessProbe:
          initialDelaySeconds: 2
          tcpSocket:
            port: lifecycle-port
        livenessProbe:
          initialDelaySeconds: 20
          tcpSocket:
            port: lifecycle-port
        envFrom:
        - configMapRef:
            name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.lifecycle.compName ) | quote }}
        env:
        - name: LIFECYCLE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

      - name: election
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 8000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            memory: 200Mi
            cpu: '.01'
          limits:
            memory: 400Mi
            cpu: '.1'
        image: {{ include "hsts.image.election" . }}
        imagePullPolicy: {{ .Values.election.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: {{ include "sch.names.fullCompName" (list . .sch.chart.components.lifecycle.compName ) | quote }}
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LEADER_ELECTION_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HELM_RELEASE
          value: {{ .Release.Name | quote }}
        ports:
        - name: api
          containerPort: 9000
        readinessProbe:
          initialDelaySeconds: 2
          tcpSocket:
            port: api
        livenessProbe:
          initialDelaySeconds: 2
          tcpSocket:
            port: api
