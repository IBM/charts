workersize: "2Cores 10G 1 concurrent document (2 VPC)"
global:
    icpDockerRepo: "mycluster.icp:8500/default"
    imagePullSecretName: ""
wcnAddon:
  schConfigName: "sch.chart.config.values"

  addon:
    displayName: Watson Compare and Comply
    version: 1.1.6
    shortDescription: "Enables understanding of governing business documents with pre-trained models so enterprises can get started in minutes"
    longDescription: "IBM Watson&trade; Compare and Comply enables understanding of governing business documents with pre-trained models so enterprises can get started in minutes. The document conversion (programmatic and scanned PDF, TIFF, JPEG, Word) capabilities enable both machine-to-machine and machine-to-human readable formats. The table understanding, element classification, and comparison capabilities of Compare and Comply enable automation of complex business processes such as contract review and negotiation, invoice reconciliation, software entitlement verification, and more. Such automation of processes result in increased productivity, minimization of costs, and reduced exposure." # yamllint disable-line rule:line-length
    deployDocs: https://cloud.ibm.com/docs/services/compare-comply-data?topic=compare-comply-data-install
    productDocs: https://cloud.ibm.com/docs/services/compare-comply-data?topic=compare-comply-data-about
    apiReferenceDocs: https://cloud.ibm.com/apidocs/compare-comply-data
    gettingStartedDocs: https://cloud.ibm.com/docs/services/compare-comply-data?topic=compare-comply-data-getting-started
    # addon.serviceId -
    # bluemix name: assistant, discovery, natural-language-understanding, knowledge-studio, etc..
    serviceId: "compare-and-comply"
    maxInstances: 20
    networkPolicy:
      enabled: true

  addonService:
    image:
      repository: wcn-addon
      tag: 1.50.5

  backendService:
    # name - Name of the k8s service to which terminate the requests from ingress
    name: ""
    # nameTemplate - Specifies name of the helm template that will be rendered and its output will be used as the name. Used only if the name is empty.
    nameTemplate: "frontend-name"
    # backendService.namespace - namespace where lives the service to which terminate the requests from ingress
    namespace: ""   # Defaults to the namespace where the chart is installed
    # namespace - port service listens on (for optional CSB provision call)
    port: 9443
    # rewriteTarget - set to '/' if you want requests to have their path stripped.
    # It needs to start and end with / e.g /api/
    rewriteTarget: "/api/"
    # ingress.secureBackends - set to true if your service backend requires https
    secure: true
    # If the service exposes an API endpoint only the public url will contain /api/ otherwise it won't
    exposeAPI: true
    # List of directives to use in the nginx location. For example "proxy_set_header  Host $host;"
    # Use directive if you need to specify things like proxy timeout, body limit or connection timeout
    nginxDirectives:
      - 'proxy_read_timeout 1800;'

tls:
  #Specify if the tls is enabled.
  enabled: false

  cncTlsSecret: ""
