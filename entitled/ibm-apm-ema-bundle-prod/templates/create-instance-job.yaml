{{- include "sch.config.init" (list . "emaRef.sch.chart.config.values") -}}
{{- $compName := .sch.chart.components.createInstanceJob.name }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . $compName) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 4 }}
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "hook-succeeded"
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 300
  template:
    metadata:
      name: {{ include "sch.names.fullCompName" (list . $compName) }}
      labels:
{{ include "sch.metadata.labels.standard" (list . $compName) | indent 8 }}
      annotations:
{{- include "sch.metadata.annotations.metering" (list . .sch.chart.metering) | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: beta.kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      restartPolicy: Never
      {{- include "ema.securitycontext.pod" . | indent 6 }}
      containers:
      - name: {{ include "sch.names.fullCompName" (list . $compName) }}
        image: "{{ .Values.global.icpDockerRepo }}{{ .Values.global.spJob.image.repository }}:{{ .Values.global.spJob.image.tag }}"
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
          limits:
            cpu: 500m
            memory: 1024Mi
        {{- include "ema.securitycontext.container" . | indent 8 }}
        env:
          - name: OP_CLOUDANT_URL
            valueFrom:
              secretKeyRef:
                name: ema-secret
                key: OP_CLOUDANT_URL
          - name: OP_CLOUDANT_CRT
            valueFrom:
              secretKeyRef:
                name: ema-secret
                key: OP_CLOUDANT_CRT
          - name: DB_ENCRYPT_SECRET
            valueFrom:
              secretKeyRef:
                name: ema-secret
                key: DB_ENCRYPT_SECRET
          # tls key
          - name: TLS_KEY
            valueFrom:
              secretKeyRef:
                name: ema-tls
                key: tls.key
          # tls cert
          - name: TLS_CERT
            valueFrom:
              secretKeyRef:
                name: ema-tls
                key: tls.crt
          - name: NODE_EXTRA_CA_CERTS
            value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
        command:
        - "/bin/bash"
        - -c
        - |
          date
          npm start &
{{ (tpl (.Files.Get "data/create_instance.sh") . ) | indent 10 }}