{{/* vim: set filetype=mustache: */}}

{{/*
Display license
Copied wcn-addon's template and modified to display WKS license
because it's impossible to pass files of parent chart to sub-chart in Helm 2,
which might be fixed by helm 3 https://github.com/helm/helm/issues/1892
*/}}
{{- define "wks.license" -}}
  {{- $license := .Files.Get "LICENSES/LICENSE" -}}
  {{- $msg := "Please read the above license and set license=accept to install the product." -}}
  {{- $border := printf "\n%s\n" (repeat (len $msg ) "=") -}}
  {{- printf "\n%s\n\n\n%s%s%s" $license $border $msg $border -}}
{{- end -}}

{{/*
Docker registry secret template
*/}}
{{- define "wks.docker.registry.secret" }}
imagePullSecrets:
  - name: {{ printf "%s" (default (printf "sa-%s" .Release.Namespace) .Values.global.dockerRegistrySecret) }}
{{- end }}

{{/*
Docker image name template
args: rootContext
args: image:
        repository: ""
        tag: ""
*/}}
{{- define "wks.docker.image.name" }}
{{- $rootContext := (index . 0) -}}
{{- $image := (index . 1 ) -}}
image: {{ printf "%s%s:%s" $rootContext.Values.global.icpDockerRepo $image.repository $image.tag }}
{{- end }}


{{/*
Internal cluster domain name of the services where chart is installed.
*/}}
{{- define "wks.k8s.svc.domain" }}
{{- printf "%s.svc.%s" .Release.Namespace .Values.global.clusterDomain }}
{{- end }}

{{/*****************************************************************************
   * Minio(S3) details
   **************************************************************************/}}

{{/*
Name template of Minio AccessSecret name
access secret is generated by sch on pre-install phase
*/}}
{{- define "wks.minio.access.secret.name" -}}
{{- printf "minio-access-secret-%s" .Release.Name }}
{{- end -}}

{{/*
Service name
*/}}
{{- define "wks.minio.service.name" -}}
{{- printf "%s-ibm-minio-svc" .Release.Name }}
{{- end -}}

{{- define "wks.minio.service.fullName" -}}
{{- printf "%s.%s" (include "wks.minio.service.name" .) (include "wks.k8s.svc.domain" .) }}
{{- end -}}

{{/*
Name template of Minio endpoint
*/}}
{{- define "wks.minio.endpoint" -}}
http{{ if .Values.global.s3.sslEnabled }}s{{ end }}://{{ include "wks.minio.service.fullName" . }}:9000
{{- end -}}

{{/*
Name template of Minio bucket name used by WKS Frontend and SIRE training
*/}}
{{- define "wks.minio.bucket.name" -}}
{{- .Values.global.s3.defaultBucket.name -}}
{{- end -}}

{{/*
Named template of the TLS certificate generated by Minio chart
*/}}
{{- define "wks.minio.tls.secret.name" -}}
{{ .Release.Name }}-ibm-minio-tls
{{- end -}}

{{/*****************************************************************************
   * Mongodb details
   **************************************************************************/}}

{{- define "wks.mongodb.admin.secretName" -}}
{{ .Release.Name }}-ibm-mongodb-auth-secret
{{- end -}}

{{- define "wks.mongodb.cert.secretName" -}}
{{ .Release.Name }}-ibm-mongodb-tls-secret
{{- end -}}

{{- define "wks.mongodb.endpoint" -}}
  {{- range $podNum, $_ := (until (int .Values.mongodb.replicas)) -}}
    {{- if not (eq $podNum 0) -}},{{- end -}}
    {{- printf "%s-%d.%s-ibm-mongodb-headless-svc.%s:27017" (include "ibm-mongodb.svc.statefulsetName" $) $podNum $.Release.Name (include "wks.k8s.svc.domain" $) }}
  {{- end -}}
{{- end -}}

{{/*****************************************************************************
   * PostgreSQL details
   **************************************************************************/}}

{{- define "wks.postgresql.service.endpoint" -}}
{{- printf "%s-ibm-postgresql-proxy-svc" .Release.Name -}}
{{- end -}}

{{/*
Named template of PostgreSQL TLS secret name
*/}}
{{- define "wks.postgresql.tls.secret.name" -}}
{{ .Release.Name }}-ibm-postgresql-tls-secret
{{- end -}}

{{/*
Named template of PostgreSQL TLS auth secret name
*/}}
{{- define "wks.postgresql.auth.secret.name" -}}
{{ .Release.Name }}-ibm-postgresql-auth-secret
{{- end -}}

{{/*****************************************************************************
   * Certificates details
   **************************************************************************/}}

{{- define "wks.cert.internal.secret.name" -}}
{{- printf "internal-cert-%s" .Release.Name -}}
{{- end -}}

{{- define "wks.cert.internal.dns.name" }}
{{- printf "*.%s" (include "wks.k8s.svc.domain" .) }}
{{- end }}

{{/*****************************************************************************
   * SIRE templates details
   **************************************************************************/}}

{{/*
Named template of SIREG tokenizer service endpoint
Workaround for "sireTraining.siregEndpointTpl" depending on sub-chart's context
*/}}
{{- define "wks.sire.tokenizer.service.endpoint" -}}
{{- $rootContext := (index . 0) -}}
{{- $lang := (index . 1 ) -}}
{{ $rootContext.Release.Name }}-sire-training-sireg-{{ $lang }}:{{ $rootContext.Values.sire.sireg.securePort }}
{{- end -}}


{{/*****************************************************************************
   * WKS Frontend/Broker/Dispatcher common templates
   **************************************************************************/}}

{{/*
Name template of init container generating keystore from TLS cert/key.
Necessary volumes must be mounted using "wks.keystoregen.volumes".
*/}}
{{- define "wks.keystoregen.initcontainer" -}}
{{- $rootContext := (index . 0) -}}
{{- $keyStorePass := (index . 1 ) -}}
- name: pem-to-keystore
{{ include "wks.docker.image.name" (list $rootContext $rootContext.Values.initContainer.keystoreGen.image) | indent 2 }}
  resources:
    limits:
      cpu: {{ $rootContext.Values.initContainer.resources.limits.cpu }}
      memory: {{ $rootContext.Values.initContainer.resources.limits.memory }}
    requests:
      cpu: {{ $rootContext.Values.initContainer.resources.requests.cpu }}
      memory: {{ $rootContext.Values.initContainer.resources.requests.memory }}
  env:
    - name: keyfile
      value: /mnt/tlscerts/tls.key
    - name: crtfile
      value: /mnt/tlscerts/tls.crt
    - name: keystore_pkcs12
      value: /mnt/keystores/keystore.pkcs12
    - name: keystore_jks
      value: /mnt/keystores/keystore.jks
    - name: keystore_passfile
      value: /mnt/keystores/password
    - name: password
      value: {{ $keyStorePass }}
  command: ['/bin/bash']
  args:
    - "-c"
    - "openssl pkcs12 -export -inkey $keyfile -in $crtfile -out $keystore_pkcs12 -password pass:$password && keytool -importkeystore -noprompt -srckeystore $keystore_pkcs12 -srcstoretype pkcs12 -destkeystore $keystore_jks -storepass $password -srcstorepass $password"
  volumeMounts:
    - name: keystore-volume
      mountPath: /mnt/keystores
    - name: service-certs
      mountPath: /mnt/tlscerts
{{- end -}}

{{/*
Name template of volumes list used by keystore gengeration init container.
*/}}
{{- define "wks.keystoregen.volumes" -}}
- name: keystore-volume
  emptyDir: {}
- name: service-certs
  secret:
    secretName: {{ template "wks.cert.internal.secret.name" . }}
{{- end -}}

{{/*
Volume mount fields for keystore volume generated by keystoregen init container.
*/}}
{{- define "wks.keystore.volumemount" -}}
- name: keystore-volume
  mountPath: /mnt/keystores
{{- end -}}

{{/*
Environment variable required to use the keystore generated by keystoregen init container.
*/}}
{{- define "wks.keystore.envvars" -}}
{{- $rootContext := (index . 0) -}}
{{- $keyStorePass := (index . 1 ) -}}
- name: KEYSTORE_PATH
  value: /mnt/keystores/keystore.jks
- name: KEYSTORE_PASSWORD
  value: {{ $keyStorePass }}
{{- end -}}

{{/*****************************************************************************
   * WKS Frontend details
   **************************************************************************/}}

{{/*
Name template of Minio config used by WKS frontend
*/}}
{{- define "wks.frontend.minio.config" }}
{{- template "sch.names.fullName" (list .) }}-frontend-minio-config
{{- end }}

{{/*
The content of wks.frontend.minio.config
*/}}
{{- define "wks.frontend.minio.properties" }}
{{ printf "endpoint=%s" (include "wks.minio.endpoint" .) }}
{{ printf "wksgen.bucket=%s" (include "wks.minio.bucket.name" .) }}
{{ printf "wksts.bucket=%s" (include "wks.minio.bucket.name" .) }}
{{- end }}

{{/*
The Frontend properties for calling SIREG
*/}}
{{- define "wks.frontend.sireg.properties" }}
{{- $sireg := .Values.sire.sireg -}}
{{- $rootContext := . -}}
{{- range $langKey, $langValue := $sireg.languages -}}
{{ printf "tokenizer.%s=%s\n" $langKey (include "wks.sire.tokenizer.service.endpoint" (list $rootContext $langKey)) }}
{{- end }}
{{- end }}

{{/*
Name template of the depenent service config used by WKS frontend
*/}}
{{- define "wks.frontend.dependent.service.config" }}
{{- printf "%s-frontend-dependent-service-config" (include "sch.names.fullName" (list .)) }}
{{- end }}

{{- define "wks.frontend.ingress.path" }}
{{- printf "/%s" .Release.Name }}
{{- end }}

{{/*
Name template of MongoDB config used by WKS frontend
*/}}
{{- define "wks.frontend.mongodb.config" }}
{{- printf "%s-frontend-mongodb-config" (include "sch.names.fullName" (list .)) }}
{{- end }}

{{/*
The content of wks.frontend.mongodb.config
*/}}
{{- define "wks.frontend.mongodb.properties" }}
authenticationDatabase=admin
envdata.database=ENVDATA
endpoint={{ include "wks.mongodb.endpoint" . }}
sbsep.database=escloud_sbsep
{{- end }}

{{/*
Name template of helm test job of WKS frontend
*/}}
{{- define "wks.frontend.helm.test" }}
{{- printf "%s-connection-check" (include "sch.names.fullName" (list .)) }}
{{- end }}

{{/*
FIXME: This is workaround for ibm-wcn-addon
*/}}
{{- define "wks.frontend.svc.name" }}
{{- printf "%s-ibm-watson-ks" .Release.Name }}
{{- end }}

{{/*
FIXME: This is workaround for ibm-wcn-addon
*/}}
{{- define "wks.broker.svc.name" }}
{{- printf "%s-ibm-watson-ks-servicebroker" .Release.Name }}
{{- end }}

{{/*
FIXME: This is workaround for ibm-wcn-addon
*/}}
{{- define "wks.dispatcher.svc.name" }}
{{- printf "%s-ibm-watson-ks-dispatcher" .Release.Name }}
{{- end }}

{{/*****************************************************************************
   * MMA details
   **************************************************************************/}}

{{- define "wks.mma.service.endpoint" }}
{{- printf "https://%s-ibm-watson-mma-prod-model-management-api" .Release.Name -}}:{{ .Values.global.mma.v1Port }}
{{- end }}


{{/*****************************************************************************
   * WKS RBAC details
   * WKS chart creates a service account for sch to create/delete secrets.
   **************************************************************************/}}

{{- define "wks.role.name" -}}
{{ .Release.Name }}-ibm-watson-ks
{{- end -}}

{{- define "wks.serviceaccount.name" -}}
{{ .Release.Name }}-ibm-watson-ks
{{- end -}}

{{- define "wks.rolebinding.name" -}}
{{ .Release.Name }}-ibm-watson-ks
{{- end -}}

