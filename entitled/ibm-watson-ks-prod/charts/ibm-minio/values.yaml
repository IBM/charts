---
## set kubernetes cluster domain where minio is running
##
clusterDomain: cluster.local

## Set default image, imageTag, and imagePullPolicy. mode is used to indicate the
##
minio:
  image:
    name: "opencontent-minio"
    tag: "1.0.0"

minioClient:
  image:
    name: "opencontent-minio-client"
    tag: "1.0.0"

creds:
  image:
    name: "opencontent-icp-cert-gen-1"
    tag: "1.1.1"

global:
  image:
    repository: "hyc-cp-opencontent-docker-local.artifactory.swg-devops.com"
    pullSecret: ""
    pullPolicy: IfNotPresent
  sch:
    # global.sch.enabled - Specifies if the ibm-sch chart should be used as sub-chart. If set to false, a compatible version of sch chart should be provided by umbrella chart.
    enabled: true
  metering:
    productName: "ibm-minio"
    productID: "123456"
    productVersion: "0.0.1" 

# Set the uid for the containers
securityContext:
  minio:
    runAsUser: 999
  creds:
    runAsUser: 523

## Update strategy for StatefulSets
StatefulSetUpdate:
  updateStrategy: RollingUpdate

## Pod priority settings
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Set default accesskey, secretkey, Minio config file path, volume mount path and
## number of nodes (only used for Minio distributed mode)
## Distributed Minio ref: https://docs.minio.io/docs/distributed-minio-quickstart-guide
##
existingSecret: ""
configPath: "/workdir/home/.minio/"
configPathmc: "/workdir/home/.mc/"
mountPath: "/workdir/data"
replicas: 4
## Only works if .Values.global.deploymentType(Development | Production) is set and replicas unset
replicasForDev: 4
replicasForProd: 4

## TLS Settings for Minio
tls:
  enabled: true
  ## Create a secret with private.key and public.crt files and pass that here. Ref: https://github.com/minio/minio/tree/master/docs/tls/kubernetes#2-create-kubernetes-secret
  certSecret: ""

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: false

  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  ## minio data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  ## Storage class of PV to bind. By default it looks for standard storage class.
  ## If the PV uses a different storage class, specify that here.
  storageClass: default
  # VolumeName: ""
  accessMode: ReadWriteOnce
  size: 10Gi

  ## If subPath is set mount a sub folder of a volume instead of the root of the volume.
  ## This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
  ##
  subPath: ""

## Expose the Minio service to be accessed from outside the cluster (LoadBalancer service).
## or access it from within the cluster (ClusterIP service). Set the service type and the port to serve it.
## ref: http://kubernetes.io/docs/user-guide/services/
##

service:
  port: 9000
## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}
tolerations: []
affinity: {}

# Additational pod annotations
podAnnotations: {}

## Liveness and Readiness probe values.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 5
  periodSeconds: 30
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 1
  successThreshold: 1
  failureThreshold: 3

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 256Mi
    cpu: 250m
  limits:
    memory: 2048Mi

## Create a bucket after minio install
##
defaultBucket:
  enabled: false
  ## If enabled, must be a string with length > 0
  name: bucket
  ## Can be one of none|download|upload|public
  policy: none
  ## Purge if bucket exists already
  purge: false

## Create multiple buckets after minio install
## Enabling `defaultBucket` will take priority over this list
##
buckets: []
  # - name: bucket1
  #   policy: none
  #   purge: false
  # - name: bucket2
  #   policy: none
  #   purge: false

## Use this field to add environment variables relevant to Minio server. These fields will be passed on to Minio container(s)
## when Chart is deployed
environment:
  ## To disable Minio Browser, set this value to off
  MINIO_BROWSER: "on"
  ## To enable virtual-host-style requests, set this value to Minio host domain name.
  # MINIO_DOMAIN: ""
  ## Minio Cache settings, refer: https://docs.minio.io/docs/minio-disk-cache-guide.html
  # MINIO_CACHE_DRIVES: ""
  # MINIO_CACHE_EXCLUDE: ""
  # MINIO_CACHE_EXPIRY: ""
  # MINIO_CACHE_MAXUSE: ""
  ## Minio WORM setting, refer: https://docs.minio.io/docs/minio-server-configuration-guide.html
  # MINIO_WORM: ""
  ## Minio KMS settings, refer: https://docs.minio.io/docs/minio-kms-quickstart-guide.html
  # MINIO_SSE_VAULT_ENDPOINT: ""
  # MINIO_SSE_VAULT_APPROLE_ID: ""
  # MINIO_SSE_VAULT_APPROLE_SECRET: ""
  # MINIO_SSE_VAULT_KEY_NAME: ""
  ## Minio Federation settings, refer: https://docs.minio.io/docs/minio-federation-quickstart-guide.html
  # MINIO_ETCD_ENDPOINTS: ""
  # MINIO_PUBLIC_IPS: ""
  # MINIO_DOMAIN: ""
  ## Add other environment variables relevant to Minio server here. These values will be added to the container(s) as this Chart is deployed

networkPolicy:
  enabled: false
  allowExternal: true

## Specify the service account to use for the Minio pods. If 'create' is set to 'false'
## and 'name' is left unspecified, the account 'default' will be used.
serviceAccount:
  create: true
  ## The name of the service account to use. If 'create' is 'true', a service account with that name
  ## will be created. Otherwise, a name will be auto-generated.
  name:

## SSE-S3 Config
sse:
  enabled: false
  # Name of the key within the secret
  masterKeyName: "sseMasterKey"
  # Spcify either a template (to evaluate) or the name of a secret where the master key is stored
  masterKeySecret:

metrics:
  # Metrics can not be disabled yet: https://github.com/minio/minio/issues/7493
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    namespace: monitoring
    interval: 30s
    scrapeTimeout: 10s

# Values to pull from dapting charts
