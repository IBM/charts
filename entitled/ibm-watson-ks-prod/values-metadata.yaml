
license:
  __metadata:
    label: 'License'
    description: 'Accept the license'
    type: 'string'
    immutable: false
    required: true

global:
  __metadata:
    label: "Global values"
    name: "Global values"
    description: "Values that is used globally in the chart"
  productName:
    __metadata:
      label: 'product name'
      description: 'Product name of Watson Knowledge Studio.'
      type: 'string'
      immutable: true
      required: true

  umbrellaChartMetering:
    productName:
      __metadata:
        label: "Product Name"
        description: "Catalog name of chart's product"
        type: "string"
        required: true
    productID:
      __metadata:
        label: "Product ID"
        description: "Catalog ID of chart's product"
        type: "string"
        required: true
    productVersion:
      __metadata:
        label: "Product Version"
        description: "Version of chart's product"
        type: "string"
        required: true

  metering:
    productName:
      __metadata:
        label: "Product Name"
        description: "Catalog name of chart's product"
        type: "string"
        required: true
    productID:
      __metadata:
        label: "Product ID"
        description: "Catalog ID of chart's product"
        type: "string"
        required: true
    productVersion:
      __metadata:
        label: "Product Version"
        description: "Version of chart's product"
        type: "string"
        required: true

  clusterDomain:
    __metadata:
      label: "Cluster Domain"
      description: "Cluster domain used by Kubernetes Cluster (the suffix for internal KubeDNS names)."
      type: "string"
      required: false

  icpDockerRepo:
    __metadata:
      label: "Docker repo to pull images"
      description: "Docker Repo for all Images in the chart"
      type: "string"
      required: false
      hidden: true

  dockerRegistrySecret:
    __metadata:
      label: "WKS docker image pull secret"
      description: "docker image pull secret to pull image of WKS"
      type: "string"
      required: false

  imagePullSecretName:
    __metadata:
      label: "additionalimagepullSecrets "
      description: "additionalimagepullSecrets for the docker images"
      type: "string"
      required: false

  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Registry"
        description: "Name of the Docker registry that is used globally in the chart"
        type: "string"
        required: true
    pullSecret:
      __metadata:
        name: "image secret name"
        label: "image secret name"
        description: "name of the secret that is used globally in the chart"
        type: "string"
        immutable: false
        required: false
    pullSecretCsfdev:
      __metadata:
        label: "SIRE docker image pull secret"
        description: "docker image pull secret to pull image SIRE chart."
        type: "string"
        required: false

  highAvailabilityMode:
    __metadata:
      label: "Enable high availability mode of SIRE training service"
      description: "Set this value true to enable high availability mode of SIRE training service."
      type: "boolean"
      required: true

  tls:
    secret:
      nameTpl:
        __metadata:
          label: "TLS Secret Name Template"
          description: "Template to specify the secret name that contains tls key and cert"
          type: "string"
          required: true
      fieldServerCertificate:
        __metadata:
          label: "TLS Secret Server Certificate Field Name"
          description: "Secret field name that references the public TLS cert"
          type: "string"
          required: true
      fieldServerKey:
        __metadata:
          label: "TLS Secret Server Certificate Field Name"
          description: "Secret field name that references the private TLS key"
          type: "string"
          required: true

  mma:
    v1Port:
      __metadata:
        label: "MMA v1 Port"
        description: "Port for running MMA v1"
        type: "number"
        required: true

  s3:
    accessSecret:
      nameTpl:
        __metadata:
          name: "S3 access secret named template"
          label: "S3 access secret named template"
          description: "reference to an existing helper template that renders the name of the S3 access secret."
          type: "string"
          immutable: true
          required: true
    sslEnabled:
      __metadata:
        label: "Enable SSL on S3 object storage."
        description: "use https protocol when connecting to the S3 enpoint and encrypt communication."
        type: "boolean"
        immutable: true
        required: true
    endpointTpl:
      __metadata:
        name: "S3 endpoint named template"
        label: "S3 endpoint named template"
        description: "reference to an existing helper template that renders the hostname (e.g. kube svc name) of the S3 endpoint."
        type: "string"
        immutable: true
        required: true
    bucketTpl:
      __metadata:
        name: "S3 bucket named template"
        label: "S3 bucket named template"
        description: "reference to an existing helper template that renders the S3 bucket name that should be used, the bucket will be created if it does not yet exist."
        type: "string"
        immutable: true
        required: true
    defaultBucket:
      name:
        __metadata:
          name: "S3 default bucket name"
          label: "S3 default bucket name"
          description: "This default bucket is created by post-install hook."
          type: "string"
          immutable: true
          required: true
    tlsSecret:
      nameTpl:
        __metadata:
          name: "S3 TLSs secret named template"
          label: "S3 TLSs secret named template"
          description: "reference to an existing helper template that renders the name of the S3 TLS secret"
          type: "string"
          immutable: true
          required: true
      fieldRootCertificate:
        __metadata:
          name: "field name of root certificate."
          label: "field name of root certificate."
          description: "If a self-signed certificate is used, specify the field name in the TLS secret that holds the root certificate in PEM format."
          type: "string"
          immutable: true
          required: true

  postgres:
    authSecret:
      nameTpl:
        __metadata:
          label: "Postgres Auth Secret Name Template"
          description: "Postgres auth secret name template"
          type: "string"
          required: true
      suPasswordField:
        __metadata:
          label: "Postgres Auth Secret Super User Password Field Name"
          description: "Postgres auth secret super user password field name"
          type: "string"
          required: true

  postgresql:
    authSecret:
      nameTpl:
        __metadata:
          name: "PostgreSQL auth secret named template"
          label: "PostgreSQL auth secret named template"
          description: "reference to an existing helper template that renders the name of the PostgreSQL authentication secret"
          type: "string"
          immutable: true
          required: true
      fieldAdminPassword:
        __metadata:
          name: "field name of PostgreSQL admin password"
          label: "field name of PostgreSQL admin password"
          description: "field name in the auth secret that holds the admin user password"
          type: "string"
          immutable: true
          required: true
      fieldJobqPassword:
        __metadata:
          name: "field name of PostgreSQL jobq user password"
          label: "field name of PostgreSQL jobq user password"
          description: "field name in the auth secret that holds a password that should be used for the jobq user (this user will be newly created in the DB)"
          type: "string"
          immutable: true
          required: true
    tlsSecret:
      nameTpl:
        __metadata:
          name: "PostgreSQL tls secret named template"
          label: "PostgreSQL tls secret named template"
          description: "reference to an existing helper template that renders the name of the PostgreSQL TLS secret"
          type: "string"
          immutable: true
          required: true
      fieldRootCertificate:
        __metadata:
          name: "field name of root certificate in PostgreSQL TLS secret."
          label: "field name of root certificate in PostgreSQL TLS secret."
          description: "reference to an existing helper template that renders the name of the PostgreSQL TLS secret"
          type: "string"
          immutable: true
          required: true
    sslEnabled:
      __metadata:
        name: "Enable SSL for connection to PostgreSQL"
        label: "Enable SSL for connection to PostgreSQL"
        description: "use https protocol when connecting to the PostgreSQL enpoint and encrypt communication"
        type: "boolean"
        immutable: true
        required: true
    adminDB:
      __metadata:
        name: "admin database name"
        label: "admin database name of PosgreSQL"
        description: "name of the PostgrSQL admin database"
        type: "string"
        immutable: true
        required: true
    adminUser:
      __metadata:
        name: "admin user name"
        label: "admin user name"
        description: "name of the PostgreSQL admin user"
        type: "string"
        immutable: true
        required: true
    port:
      __metadata:
        name: "PostgreSQL service port number"
        label: "PostgreSQL service port number"
        description: "defines the port that will be used in the default `global.postgresql.hostNameTpl` template to construct the full PostgreSQL connection string"
        type: "number"
        immutable: true
        required: true
    hostNameTpl:
      __metadata:
        name: "PostgreSQL host name template"
        label: "PostgreSQL host name template"
        description: "reference to an existing helper template that renders the hostname (e.g. kube svc name) of the PostgreSQL endpoint"
        type: "string"
        immutable: true
        required: true
  tests:
    image:
      repository:
        __metadata:
          label: "Test image repository"
          description: "Test image repository for helm tests"
          type: "string"
          required: true

cp4dConsolePort:
  __metadata:
    label: "ICP4D Console port"
    description: "The port number of ICP4D console, i.e, port of ibm-nginx"
    type: "number"
    required: true
    immutable: false

replicaCount:
  __metadata:
    label: "Size of WKS Replica Set"
    description: "Defaults to 2 nodes Replica Set. Input desired number of nodes."
    type: "number"
    required: true
    immutable: false

image:
  __metadata:
    label: "WKS Docker image"
    name: "WKS Docker image"
    description: "Docker images used for WKS"
  repository:
    __metadata:
      name: "WKS image repository"
      label: "WKS image repository"
      description: "Name of the Docker repository for WKS image."
      type: "string"
      required: true
      immutable: true
  tag:
    __metadata:
      name: "WKS image tag"
      label: "WKS image tag"
      description: "Docker image tag of WKS image"
      type: "string"
      required: true
      immutable: true

dvt:
  __metadata:
    label: "DVT values"
    name: "DVT values"
    description: "Docker images used for DVT"
  image:
    repository:
      __metadata:
        name: "WKS dvt image repository"
        label: "WKS dvt image repository"
        description: "Name of the Docker repository for WKS deployment verification test image."
        type: "string"
        required: true
        immutable: true
    tag:
      __metadata:
        name: "WKS dvt image tag"
        label: "WKS dvt image tag"
        description: "Docker image tag of WKS deployment verification test image"
        type: "string"
        required: true
        immutable: true

service:
  __metadata:
    label: "WKS service configuration"
    name: "WKS service configuration"
    description: "Kubernetes service configuration for WKS frontend service"
  type:
    __metadata:
      name: "WKS service type"
      label: "WKS service type"
      description: "Kubernetes service type of WKS frontend service."
      type: "string"
      required: true
      options:
        - label: "ClusterIP"
          value: "ClusterIP"
        - label: "NodePort"
          value: "NodePort"
  port:
    __metadata:
      name: "service.port"
      label: "Service port"
      description: "Kubernetes port on which the WKS service is exposed"
      type: "number"
      immutable: true
      required: true
  targetPort:
    __metadata:
      name: "target WKS container port"
      label: "target WKS container port"
      description: "Kubernetes port on which the WKS pods open."
      type: "number"
      immutable: true
      required: true

ingress:
  __metadata:
    label: "Ingress configuration"
    name: "Ingress configuration"
    description: "Ingress configuration for WKS frontend service"
  enabled:
    __metadata:
      name: "ingress.enabled"
      label: "ingress enabled"
      description: "Deploy ingress for WKS frontend service. In ICP4D environement, access from outside of cluster is managed by addon, so this should not be enabled."
      type: "boolean"
      immutable: false
      required: true
  annotations:
    __metadata:
      name: "ingress.annotations"
      label: "ingress annotations"
      description: "Annotations attached to WKS frontend ingress."
      type: "string"
      immutable: true
      required: false
  hosts:
    __metadata:
      name: "ingress.hosts"
      label: "ingress hosts"
      description: "Host names of the ingress. WKS frontend access URL will be the combination of host name and path. Specify as array."
      type: "string"
      immutable: true
      required: false
  tls:
    __metadata:
      name: "ingress.tls"
      label: "ingress TLS"
      description: "The names of TLS secrets used in the ingress. Specify as array format"
      type: "string"
      immutable: true
      required: false

resources:
  __metadata:
    label: 'Resource Configuration'
    description: 'Controls the memory and CPU requirements for WKS Frontend'
  limits:
    cpu:
      __metadata:
        label: 'CPU limit'
        description: 'The CPU limit'
        type: 'string'
        required: true
    memory:
      __metadata:
        label: 'Memory limit'
        description: 'The memory limit'
        type: 'string'
        required: true
  requests:
    cpu:
      __metadata:
        label: 'CPU request'
        description: 'The requested CPU'
        type: 'string'
        required: true
    memory:
      __metadata:
        label: 'Memory request'
        description: 'The memory request'
        type: 'string'
        required: true

frontend:
  __metadata:
    label: 'WKS Frontend application Configuration'
    description: 'Various configurations for WKS Frontend application.'
  createDefaultTenant:
    __metadata:
      name: "Flag if creating default tenant"
      label: "Flag if creating default tenant"
      description: "If true, default tenant job runs on post-install."
      type: "boolean"
      required: true
  region:
    __metadata:
      name: "WKS frontend region id"
      label: "WKS frontend region id"
      description: "The region id WKS will use internally."
      type: "string"
      immutable: true
      required: true
  initialUser:
    __metadata:
      name: "initial user"
      label: "initial user"
      description: "The user id of initial Admin user in WKS."
      type: "string"
      immutable: false
      required: true

broker:
  __metadata:
    label: 'WKS Service Broker application Configuration'
    description: 'Various configurations for WKS Service Broker application.'
  replicas:
    __metadata:
      label: "Size of WKS Service Broker Set"
      description: "Defaults to 2 nodes Replica Set. Input desired number of nodes."
      type: "number"
      required: true
      immutable: false
  image:
    repository:
      __metadata:
        name: "WKS Service Broker image repository"
        label: "WKS Service Broker image repository"
        description: "Name of the Docker repository for WKS Service Broker image."
        type: "string"
        required: true
        immutable: true
    tag:
      __metadata:
        name: "WKS Service Broker image tag"
        label: "WKS Service Broker image tag"
        description: "Docker image tag of WKS Service Broker image"
        type: "string"
        required: true
        immutable: true
  resources:
    limits:
      cpu:
        __metadata:
          label: 'CPU limit'
          description: 'The CPU limit'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory limit'
          description: 'The memory limit'
          type: 'string'
          required: true
    requests:
      cpu:
        __metadata:
          label: 'CPU request'
          description: 'The requested CPU'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory request'
          description: 'The memory request'
          type: 'string'
          required: true

dispatcher:
  __metadata:
    label: 'WKS Dispatcher application Configuration'
    description: 'Various configurations for WKS Dispatcher application.'
  replicas:
    __metadata:
      label: "Size of WKS Dispatcher Set"
      description: "Defaults to 2 nodes Replica Set. Input desired number of nodes."
      type: "number"
      required: true
      immutable: false
  image:
    repository:
      __metadata:
        name: "WKS Dispatcher image repository"
        label: "WKS Dispatcher image repository"
        description: "Name of the Docker repository for WKS Dispatcher image."
        type: "string"
        required: true
        immutable: true
    tag:
      __metadata:
        name: "WKS Dispatcher image tag"
        label: "WKS Dispatcher image tag"
        description: "Docker image tag of WKS Dispatcher image"
        type: "string"
        required: true
        immutable: true
  resources:
    limits:
      cpu:
        __metadata:
          label: 'CPU limit'
          description: 'The CPU limit'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory limit'
          description: 'The memory limit'
          type: 'string'
          required: true
    requests:
      cpu:
        __metadata:
          label: 'CPU request'
          description: 'The requested CPU'
          type: 'string'
          required: true
      memory:
        __metadata:
          label: 'Memory request'
          description: 'The memory request'
          type: 'string'
          required: true

creds:
  __metadata:
    label: "Certificate genaration"
    description: "Configuration for certificate generation"
  image:
    name:
      __metadata:
        name: "cert gen image name"
        label: "cert gen image"
        description: "Name of the Docker image that is used to generate certificate."
        type: "string"
        required: true
    tag:
      __metadata:
        name: "cert gen image tag"
        label: "cert gen image tag"
        description: "Tag of the Docker image that is used to generate certificate."
        type: "string"
        required: true

sch:
  __metadata:
    label: "sch subchart values"
    description: "Configurations used by sch subchart."
  image:
    repository:
      __metadata:
        name: "sch image repository"
        label: "sch image repository"
        description: "Name of the Docker repository that is used for sch to generate secret."
        type: "string"
        required: true
    pullSecret:
      __metadata:
        name: "pullSecret"
        label: "Docker image pull secret"
        description: "Docker image pull secret is used to pull sch docker image."
        type: "string"
        immutable: false
        required: false

mongodb:
  __metadata:
    label: "MongoDB subchart values"
    description: "Configurations used by MongoDB subchart."
  replicas:
    __metadata:
      label: "Size of MongoDB Replica Set"
      description: "Defaults to 2 nodes Replica Set. Input desired number of nodes."
      type: "number"
      required: true
  config:
    image:
      name:
        __metadata:
          label: "Mongodb copy config image name"
          description: "Docker Repository for init containers."
          type: "string"
          required: true
  mongodbInstall:
    image:
      name:
        __metadata:
          label: "MongodbInstall image name"
          description: "Docker Repository for init containers."
          type: "string"
          required: true
  mongodb:
    image:
      name:
        __metadata:
          name: "name"
          label: "MongoDB Docker image name"
          description: "Docker registry to pull MongoDB image from."
          type: "string"
          required: true
  creds:
    image:
      name:
        __metadata:
          label: "Creds gen image name"
          description: "Docker registry to pull Creds gen image from."
  test:
    image:
      name:
        __metadata:
          name: "name"
          label: "Bats Docker image name"
          description: "Docker registry to pull Bats image from."
          type: "string"
          required: true
  keep:
    __metadata:
      label: "Do not remove mongodb on helm delete."
      description: "If enabled helm delete will preserve mongodb running in kubernetes. Defaults to false."
      type: "boolean"
      required: false

  persistentVolume:
    enabled:
      __metadata:
        label: "Enable PV for this deployment"
        description: "Enables persistence for this deployment. Defaults to true. A persistent volume is required."
        type: "boolean"
        required: true
    useDynamicProvisioning:
      __metadata:
        label: "Enable dynamically create Persistence volumes"
        description: "Use StorageClasses to dynamically create Persistence volumes. Defaults to true."
        type: "boolean"
        required: true
    size:
      __metadata:
        label: "Size of the volume claim"
        description: "Defaults to 10Gi of storage request. Choose a different size of disk if needed."
        type: "string"
        required: true
    accessModes:
      __metadata:
        label: "Access Mode"
        description: "Defaults to ReadWriteOnce. Access Mode of the PV."
        required: false
        options:
          - label: "ReadWriteOnce"
            value: "ReadWriteOnce"
          - label: "ReadOnlyMany"
            value: "ReadOnlyMany"
          - label: "ReadWriteMany"
            value: "ReadWriteMany"
    storageClass:
      __metadata:
        label: "Storage Class"
        description: "Defaults to null. Storage Class used to provision PV."
        required: false
        query:
          provider: kubernetes
          resource: storageclasses
          filter: ".metadata.uid"
    selector:
      label:
        __metadata:
          label: "Label to be used during PVC bind"
          description: "Label for persistent volume claim selectors to control how pvc's bind/reserve storage. Defaults application specific"
          type: "string"
          required: false
      value:
        __metadata:
          label: "Value for the selector.label"
          description: "Value for persistent volume claim selectors to control how pvc's bind/reserve storage. Defaults application specific"
          type: "string"
          required: false
    annotations:
      __metadata:
        label: "Annotations to the PV"
        description: "provide annotation to the persistent volument, by default it is empty."
        type: "string"
        required: false
  tls:
    enabled:
      __metadata:
        label: "Enable MongoDB TLS Encryption"
        description: "Enables TLS for this deployment. Defaults to true."
        type: "boolean"
        required: true
  metering:
    __metadata:
      label: "Metering details"
      description: "Annotations to be used metering service (if present)."
      hidden: true
      type: "string"
      multiline: true
      required: false

minio:
  __metadata:
    label: "Minio subchart values"
    description: "Configurations used by Minio object store subchart."
  image:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull Minio image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "Image tag"
        label: "Image tag"
        description: "Image tag is used to choose Minio release version."
        type: "string"
        immutable: false
        required: true
    pullSecret:
      __metadata:
        name: "pullSecret"
        label: "Docker image pull secret"
        description: "Docker image pull secret is used to pull Minio docker image."
        type: "string"
        immutable: false
        required: false
  mcImage:
    repository:
      __metadata:
        name: "Repository"
        label: "Docker Repository"
        description: "Docker registry to pull mc image from."
        type: "string"
        immutable: false
        required: true
    tag:
      __metadata:
        name: "Image tag"
        label: "Image tag"
        description: "Image tag is used to choose mc release version."
        type: "string"
        immutable: false
        required: true
    pullSecret:
      __metadata:
        name: "pullSecret"
        label: "Docker image pull secret for Minio client"
        description: "Docker image pull secret is used to pull Minio cient docker image."
        type: "string"
        immutable: false
        required: false
  mode:
    __metadata:
      name: "mode"
      label: "Minio server mode"
      description: "Sets Minio server mode"
      type: "string"
      immutable: false
      required: true
      options:
      - label: "standalone"
        value: "standalone"
      - label: "distributed"
        value: "distributed"
  replicas:
    __metadata:
      name: "replicas"
      label: "Number of replicas"
      description: "Number of nodes (applicable only for Minio distributed mode). Should be 4 <= x <= 32."
      type: "number"
      immutable: false
      required: true
  minioAccessSecret:
    __metadata:
      name: "minioAccessSecret"
      label: "Access secret"
      description: "Secret that contains base64-encoded accesskey (5 - 20 characters) and secretkey (8 - 40 characters) for Minio Object Server."
      type: "string"
      immutable: false
      required: true

  persistence:
    enabled:
      __metadata:
        name: "persistence.enabled"
        label: "Enable persistence"
        description: "Enable persistence to use  persistent volume to store data."
        type: "boolean"
        immutable: false
        required: true
    existingClaim:
      __metadata:
        name: "persistence.existingClaim"
        label: "Existing PVC"
        description: "Use an existing PVC to persist data"
        type: "string"
        immutable: false
        required: false
    useDynamicProvisioning:
      __metadata:
        name: "persistence.useDynamicProvisioning"
        label: "Use dynamic provisioning"
        description: "If enabled, the PVC will use a storageClassName to bind the volume"
        type: "boolean"
        immutable: false
        required: true
    storageClass:
      __metadata:
        name: "persistence.storageClass"
        label: "Storage class"
        description: "Storage Class to bind PVC. You must specify a valid storage class if you have enabled useDynamicProvisioning."
        type: "string"
        immutable: false
        required: false
    accessMode:
      __metadata:
        name: "accessMode"
        label: "Access mode"
        description: "Access Mode ReadWriteOnce or ReadOnly."
        type: "string"
        immutable: false
        required: true
        options:
          - label: "ReadWriteOnce"
            value: "ReadWriteOnce"
          - label: "ReadOnly"
            value: "ReadOnly"
    size:
      __metadata:
        name: "size"
        label: "Persistent volume size"
        description: "Size of persistent volume claim (PVC)"
        type: "string"
        immutable: false
        required: true
    subPath:
      __metadata:
        name: "subPath"
        label: "Sub path"
        description: "Mount a sub directory of the persistent volume, if a sub directory is set"
        type: "string"
        immutable: false
        required: false

  service:
    port:
      __metadata:
        name: "service.port"
        label: "Service port"
        description: "Kubernetes port on which the service is exposed"
        type: "number"
        immutable: false
        required: true

  tls:
    enabled:
      __metadata:
        name: "tls.enabled"
        label: "Enable TLS for Minio Server"
        description: "Enable Minio server with TLS certificates."
        type: "boolean"
        immutable: false
        required: true
    type:
      __metadata:
        name: "tls.type"
        label: "TLS certificate provision option"
        description: "Specify whether a chart must autogenerate a self-signed TLS certificate or use the one that you provide."
        type: "string"
        immutable: false
        required: false
        options:
        - label: "provided"
          value: "provided"
        - label: "selfsigned"
          value: "selfsigned"
        - label: "cert-manager-generated"
          value: "cert-manager-generated"
    minioTlsSecret:
      __metadata:
        name: "tls.minioTlsSecret"
        label: "Minio TLS secret"
        description: "Secret that contains a Private key (key private.key), TLS certificate (key public.crt) and CA certificate (key ca.crt) for Minio Object Server."
        type: "string"
        immutable: false
        required: false

  defaultBucket:
    enabled:
      __metadata:
        name: "defaultBucket.enabled"
        label: "Enable default bucket"
        description: "If enabled, a bucket is created after Minio installation is complete."
        type: "boolean"
        immutable: false
        required: false
    name:
      __metadata:
        name: "defaultBucket.name"
        label: "Default bucket name"
        description: "Specify name of default bucket."
        type: "string"
        immutable: false
        required: false
    policy:
      __metadata:
        name: "defaultBucket.policy"
        label: "Default bucket policy"
        description: "Bucket policy. Allowed values are none, download, upload, public."
        type: "string"
        immutable: false
        required: false
    purge:
      __metadata:
        name: "defaultBucket.purge"
        label: "Purge bucket"
        description: "Purge the bucket, if already exists."
        type: "boolean"
        immutable: false
        required: false

postgresql:
  __metadata:
    label: "PostgreSQL subchart values"
    description: "Configurations used by PostgreSQL subchart."
  create:
    __metadata:
      name: "postgresql.create"
      label: "Create PostgreSQL"
      description: "If set true, PostgreSQL database is deployed."
      type: "boolean"
      immutable: false
      required: true
  postgres:
    image:
      name:
        __metadata:
          label: "Postgres image name"
          name: "name"
          description: "Docker image to pull for postgres."
          type: "string"
          immutable: false
          required: true
  creds:
    image:
      name:
        __metadata:
          label: "creds job image name"
          name: "name"
          description: "Docker image name to pull for creds image."
          type: "string"
          immutable: false
          required: true
  ports:
    internalPort:
      __metadata:
        label: "Internal port number"
        description: "Internal port number of posrgresql service"
        type: "number"
        required: true
    externalPort:
      __metadata:
        label: "External port number"
        description: "External port number of posrgresql service"
        type: "number"
        required: true
  auth:
    pgSuperuserName:
      __metadata:
        name: "pgSuperuserName"
        label: "postgres super user name"
        description: "provide postgres super user name, default is stolon"
        type: "string"
        immutable: false
        required: true
  tls:
    enabled:
      __metadata:
        label: "Enable TLS"
        description: "To enable TLS for client and management connections set this to true, when true, you MUST also specify tls cert,key and CA bundle information"
        type: "boolean"
        required: true
  sentinel:
    replicas:
      __metadata:
        name: "replicas"
        label: "sentinel replicas"
        description: "Number of server replicas to deploy. Defaults to 3"
        type: "number"
        immutable: false
        required: true
  proxy:
    replicas:
      __metadata:
        name: "replicas"
        label: "proxy replicas"
        description: "Number of proxy replicas to deploy. Defaults to 3"
        type: "number"
        immutable: false
        required: true
  keeper:
    replicas:
      __metadata:
        name: "replicas"
        label: "keeper replicas"
        description: "Number of keeper replicas to deploy. Defaults to 3"
        type: "number"
        immutable: false
        required: true
  persistence:
    enabled:
      __metadata:
        name: "enabled"
        label: "Enable Persistent Volume"
        description: "Enable Persistent Volume, true or false"
        type: "boolean"
        immutable: false
        required: true
    useDynamicProvisioning:
      __metadata:
        label: "Enable Dynamic bind of Persistent Volumes"
        description: "Enables dynamic bind of Persistent Volumes to created Persisten Volume claims. Defaults to true"
        type: "boolean"
        required: true
    accessMode:
      __metadata:
        name: "accessMode"
        label: "Persistent Volume Access Mode"
        description: "The mode in which persistent volume should be accessed"
        immutable: false
        required: true
        options:
          - label: "ReadWriteOnce"
            value: "ReadWriteOnce"
  #        - label: "ReadOnlyMany"
  #          value: "ReadOnlyMany"
          - label: "ReadWriteMany"
            value: "ReadWriteMany"

    storageClassName:
      __metadata:
        name: "storageClassName"
        label: "Storage Class Name"
        description: "The name of StorageClass to be used to create persistent volume claim"
        type: "string"
        immutable: false

    size:
      __metadata:
        name: "size"
        label: "PV Storage Size"
        description: "Storage Size for persistent volume to be created"
        type: "string"
        immutable: false
        required: true

  dataPVC:
    name:
      __metadata:
        label: "The prefix of PVC."
        description: "The prefix of the created Persistent Volume Claims. The defaults to data"
        type: "string"
        required: false

    selector:
      # label - label that the PV should have to be boundable to created PVCs
      label:
        __metadata:
          label: "Label of Persistent Volume"
          description: "If useDynamicProvisioning is disabled, this specifies labels that needs to have the Persistent Volumes to be used. Defaults to null"
          type: "string"
          required: false
              # value - value of the label that the PV should have to be boundable to created PVCs
      value:
        __metadata:
          label: "Value of Persistent Volume label"
          description: "Specifies value assigned to the label that needs to have the Persistent Volumes to be used. Defaults to null"
          type: "string"
          required: false
  metering:
    __metadata:
      label: "Metering details"
      description: "Annotations to be used metering service (if present)."
      hidden: true
      type: "string"
      multiline: true
      required: false

sire:
  __metadata:
    label: "SIRE subchart values"
    description: "Configurations used by SIRE training service subchart."
  jobq:
    enabled:
      __metadata:
        name: "jobq.enabled"
        label: "jobq.enabled"
        description: "Set this value true to deploy jobq service."
        type: "boolean"
        required: true
        immutable: true
    image:
      repository:
        __metadata:
          label: "SIRE jobq image Repository"
          description: "Repository for SIRE jobq image"
          type: "string"
          required: true
    tenants:
      train:
        max_queued_and_active_per_user:
          __metadata:
            label: "max queued and active training jobs per user"
            description: "Maximum amnount of queued and active training jobs, any additional jobs will be rejected with an error."
            type: "number"
            required: true
            immutable: false
        max_active_per_user:
          __metadata:
            label: "max active training jobs per user"
            description: "Maximum amount of training jobs a single user (identified by service instance id) can run in parallel even if enough cpu/mem quota available."
            type: "number"
            required: true
            immutable: false
      evaluate:
        max_queued_and_active_per_user:
          __metadata:
            label: "max queued and active evaluate jobs per user"
            description: "Maximum amnount of queued and active evaluate jobs, any additional jobs will be rejected with an error."
            type: "number"
            required: true
            immutable: false
        max_active_per_user:
          __metadata:
            label: "max active evaluate jobs per user"
            description: "Maximum amount of evaluate jobs a single user (identified by service instance id) can run in parallel even if enough cpu/mem quota available."
            type: "number"
            required: true
            immutable: false
  trainFacade:
    enabled:
      __metadata:
        name: "trainFacade.enabled"
        label: "trainFacade.enabled"
        description: "Set this value true to deploy train facade service."
        type: "boolean"
        required: true
        immutable: true
    image:
      repository:
        __metadata:
          label: "SIRE trainFacade image Repository"
          description: "Repository for SIRE trainFacade image"
          type: "string"
          required: true
  trainJob:
    image:
      repository:
        __metadata:
          label: "SIRE trainJob image Repository"
          description: "Repository for SIRE trainJob image"
          type: "string"
          required: true
  batchApplyJob:
    image:
      repository:
        __metadata:
          label: "SIRE batchApplyJob image Repository"
          description: "Repository for SIRE batchApplyJob image"
          type: "string"
          required: true
  sireg:
    enabled:
      __metadata:
        name: "sireg.enabled"
        label: "sireg.enabled"
        description: "Set this value true to deploy sireg tokenizer."
        type: "boolean"
        required: true
        immutable: true
    securePort:
      __metadata:
        name: "sireg port number"
        label: "sireg port number"
        description: "TLS port number of sireg tokenizer service."
        type: "number"
        required: true
        immutable: true
    image:
      repository:
        __metadata:
          label: "sireg image Repository"
          description: "Repository for sireg image"
          type: "string"
          required: true
    languages:
      en:
        enabled:
          __metadata:
            name: "enable English tokenizer"
            label: "enable English tokenizer"
            description: "Set this value true to deploy English tokenizer."
            type: "boolean"
            required: true
            immutable: true
      ar:
        enabled:
          __metadata:
            name: "enable Arabic tokenizer"
            label: "enable Arabic tokenizer"
            description: "Set this value true to deploy Arabic tokenizer."
            type: "boolean"
            required: true
            immutable: true
      de:
        enabled:
          __metadata:
            name: "enable German tokenizer"
            label: "enable German tokenizer"
            description: "Set this value true to deploy German tokenizer."
            type: "boolean"
            required: true
            immutable: true
      es:
        enabled:
          __metadata:
            name: "enable Spanish tokenizer"
            label: "enable Spanish tokenizer"
            description: "Set this value true to deploy Spanish tokenizer."
            type: "boolean"
            required: true
            immutable: true
      fr:
        enabled:
          __metadata:
            name: "enable French tokenizer"
            label: "enable French tokenizer"
            description: "Set this value true to deploy French tokenizer."
            type: "boolean"
            required: true
            immutable: true
      it:
        enabled:
          __metadata:
            name: "enable Italian tokenizer"
            label: "enable Italian tokenizer"
            description: "Set this value true to deploy Italian tokenizer."
            type: "boolean"
            required: true
            immutable: true
      ja:
        enabled:
          __metadata:
            name: "enable Japanese tokenizer"
            label: "enable Japanese tokenizer"
            description: "Set this value true to deploy Japanese tokenizer."
            type: "boolean"
            required: true
            immutable: true
      ko:
        enabled:
          __metadata:
            name: "enable Korean tokenizer"
            label: "enable Korean tokenizer"
            description: "Set this value true to deploy Korean tokenizer."
            type: "boolean"
            required: true
            immutable: true
      nl:
        enabled:
          __metadata:
            name: "enable Dutch tokenizer"
            label: "enable Dutch tokenizer"
            description: "Set this value true to deploy Dutch tokenizer."
            type: "boolean"
            required: true
            immutable: true
      pt:
        enabled:
          __metadata:
            name: "enable Portuguese tokenizer"
            label: "enable Portuguese tokenizer"
            description: "Set this value true to deploy Portuguese tokenizer."
            type: "boolean"
            required: true
            immutable: true
      zh:
        enabled:
          __metadata:
            name: "enable Chinese (simplified) tokenizer"
            label: "enable Chinese (simplified) tokenizer"
            description: "Set this value true to deploy Chinese (simplified) tokenizer."
            type: "boolean"
            required: true
            immutable: true
      zht:
        enabled:
          __metadata:
            name: "enable Chinese (traditional) tokenizer"
            label: "enable Chinese (traditional) tokenizer"
            description: "Set this value true to deploy Chinese (traditional) tokenizer."
            type: "boolean"
            required: true
            immutable: true

mma:
  __metadata:
    label: "MMA subchart values"
    description: "Configurations used by MMA subchart."
  replicas:
    __metadata:
      label: "MMA Pod Number"
      description: "Number of pods to be deployed for MMA in Kubernetes"
      type: "string"
      required: true
  modelManagementApi:
    image:
      repository:
        __metadata:
          label: "MMA Repository"
          description: "Repository for MMA"
          type: "string"
          required: true
      tag:
        __metadata:
          label: "MMA image tag"
          description: "image tag for MMA"
          type: "string"
          required: true
    resources:
      requests:
        cpu:
          __metadata:
            label: "MMA Requests CPU"
            description: "Requested CPU for MMA container"
            type: "string"
            required: true
  postgres:
    nameOverride:
      __metadata:
        label: "Postgres Name Override"
        description: "Postgres name override"
        type: "string"
        required: true
  product:
    name:
      __metadata:
        label: "Product Name"
        description: "Catalog name of chart's product"
        type: "string"
        required: true
    id:
      __metadata:
        label: "Product ID"
        description: "Catalog ID of chart's product"
        type: "string"
        required: true
    version:
      __metadata:
        label: "Product Version"
        description: "Version of chart's product"
        type: "string"
        required: true


wcn:
  __metadata:
    label: "Addon subchart values"
    description: "Configurations used by Addon subchart."
  create:
    __metadata:
      name: "wcn.create"
      label: "Create Addon subchart"
      description: "If set true, Addon subchart is deployed."
      type: "boolean"
      immutable: false
      required: true
  addon:
    displayName:
      __metadata:
        label: 'Addon name'
        description: 'Addon name to use in the addons page'
        type: 'string'
        immutable: false
        required: true
    version:
      __metadata:
        label: 'The version of the addon'
        description: 'The version of the addon that will be shown to users'
        type: 'string'
        immutable: false
        required: false
    longDescription:
      __metadata:
        label: 'Detailed explanation of the addon'
        description: 'Detailed explanation of the addon to be exposed in the Addon details page'
        type: 'string'
        immutable: false
        required: false
    shortDescription:
      __metadata:
        label: 'Short description of the addon'
        description: 'Short description (up to 140 characters) of the addon to be exposed in the addons grid page'
        type: 'string'
        immutable: false
        required: false
    deployDocs:
      __metadata:
        label: 'Link to a page describing how to deploy the addon'
        description: 'Link to a page describing how to deploy the addon in ICP for Data'
        type: 'string'
        immutable: false
        required: false
    productDocs:
      __metadata:
        label: 'Link to a page describing how to deploy the addon'
        description: 'Link to a page describing how to deploy the addon in ICP for Data'
        type: 'string'
        immutable: false
        required: false
    serviceId:
      __metadata:
        label: 'The service id to be used in public urls'
        description: 'The service id to be used in public urls like tooling'
        type: 'string'
        immutable: false
        required: true
    instanceId:
      __metadata:
        label: 'Instance GUID'
        description: 'Instance UUID to be used as bluemix-instance-id in X-Watson-UserInfo'
        type: 'string'
        immutable: false
        required: false
    maxInstances:
      __metadata:
        label: "Addon's maximun number of instances"
        description: 'Maximun instances of an addon that can be provisioned in ICPD cluster'
        type: 'string'
        immutable: false
        required: false
    showCredentials:
      __metadata:
        label: 'Show credentials'
        description: 'Set to true if you would like to show the generated service credentials in the instance dashboard'
        type: 'boolean'
        immutable: false
        required: false
        options:
          - label: 'True'
            value: true
          - label: 'False'
            value: false
  addonService:
    name:
      __metadata:
        label: 'Addon service name'
        description: 'Service name of addon service'
        type: 'string'
        immutable: false
        required: true
    nameTemplate:
      __metadata:
        label: 'Service template name'
        description: "The service template name. Only used if 'name' is empty"
        type: 'string'
        immutable: false
        required: false
        hidden: true
  backendService:
    exposeAPI:
      __metadata:
        label: 'Expose API'
        description: 'set to true if your service backend exposes an API'
        type: 'boolean'
        immutable: false
        required: false
        hidden: true
        options:
          - label: 'True'
            value: true
          - label: 'False'
            value: false
    name:
      __metadata:
        label: 'Service name'
        description: 'The kubernetes service name for the backend service'
        type: 'string'
        immutable: false
        required: false
    port:
      __metadata:
        label: 'Port'
        description: 'Port to access the backend service'
        type: 'number'
        immutable: false
        required: true
    rewriteTarget:
      __metadata:
        label: 'Rewrite target'
        description: "Set to '/' if you want requests to have their path stripped"
        type: 'string'
        immutable: false
        required: false
        hidden: true
    secure:
      __metadata:
        label: 'Secure'
        description: 'set to true if your service backend requires https'
        type: 'boolean'
        immutable: false
        required: false
        hidden: true
        options:
          - label: 'True'
            value: true
          - label: 'False'
            value: false
    brokerPath:
      __metadata:
        label: 'Broker path'
        description: 'If specified, the service will receive provisioning requests'
        type: 'string'
        immutable: false
        required: false
        hidden: true

  additionalServices:
    __metadata:
      label: 'Additional services'
      description: 'Additional services configuration'

  tooling:
    enabled:
      __metadata:
        label: 'Enabled'
        description: 'Set to true if tooling is available'
        type: 'boolean'
        immutable: false
        required: false
        hidden: true
        options:
          - label: 'True'
            value: true
          - label: 'False'
            value: false
