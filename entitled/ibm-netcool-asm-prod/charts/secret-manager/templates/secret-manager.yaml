{{- include "sch.config.init" (list . "asm.sch.chart.config.values") -}}
{{- $rootData := fromYaml (include "parent.data" .) }}
{{- $rootMetering := $rootData.metering -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullCompName" (list . ) | quote }}
  labels:
{{ include "sch.metadata.labels.standard" (list . ) | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      annotations:
        #container.apparmor.security.beta.kubernetes.io/generate-alm-certificates: runtime/default
        #seccomp.security.alpha.kubernetes.io/pod: docker/default
        {{- include "sch.metadata.annotations.metering" (list . $rootMetering) | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8 }}
    spec:
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      supplementalGroups:
      {{- range $group := .Values.global.persistence.supplementalGroups }}
        - {{ $group -}}
      {{ end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range $arch := .Values.arch }}
                  - {{ $arch -}}
                {{ end }}
      restartPolicy: OnFailure
      containers:
      - name: ca-secret-generator
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - /opt/ibm/netcool/asm/bin/create-asm-ca-certificate.sh
        env:
        - name: RELEASE
          value: {{ .Release.Name }}
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
        volumeMounts:
        - name: home
          mountPath: /tmp
      - name: custom-secret-generator
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - /opt/ibm/netcool/asm/bin/create-asm-custom-secret.sh
        env:
        - name: RELEASE
          value: {{ .Release.Name }}
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
        volumeMounts:
        - name: home
          mountPath: /tmp
      - name: credentials-generator
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - /opt/ibm/netcool/asm/bin/create-asm-credentials.sh
        env:
        - name: RELEASE
          value: {{ .Release.Name }}
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
        volumeMounts:
        - name: home
          mountPath: /tmp
      volumes:
      - name: home
        emptyDir: {}
