{{- include "sch.config.init" (list . "asm.sch.chart.config.values") -}}
{{- $component := "listen-job" -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "sch.names.fullName" (list .) }}-listen-job
  labels:
{{ include "sch.metadata.labels.standard" (list . $component) | indent 4 }}
spec:
  template:
    metadata:
      name: {{ include "sch.names.fullName" (list .) }}-listen-job
      labels:
{{ include "sch.metadata.labels.standard" (list . $component) | indent 8 }}
    spec:
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      supplementalGroups:
      {{- range $group := .Values.global.persistence.supplementalGroups }}
        - {{ $group -}}
      {{ end }}
      initContainers:
      - name: wait-for-observer
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.baseImage.name }}:{{ .Values.baseImage.tag }}
        env:
        - name: SERVICE
          value: {{ .Release.Name }}-event-observer
        - name: EXPECTED_COUNT
          value: "1"
        command:
        - /bin/sh
        - -c
        - /opt/ibm/netcool/asm/bin/check-service-endpoint-count.sh
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
      containers:
      - name: {{ include "sch.names.fullName" (list .) }}-job
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.baseImage.name }}:{{ .Values.baseImage.tag }}
        command: ["/bin/sh"]
        args: [ "-c", "/opt/ibm/netcool/asm/bin/event_observer_listen_start.sh"]
        env:
        - name: ASM_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-asm-credentials
              key: username
        - name: ASM_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-asm-credentials
              key: password
        volumeMounts:
        - mountPath: /opt/ibm/netcool/asm/bin
          name: observer-scripts
        - mountPath: /tmp
          name: tmp
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
      volumes:
      - name: observer-scripts
        configMap:
          name: {{ include "sch.names.fullName" (list .) }}-scripts
          defaultMode: 0755
      - name: tmp
        emptyDir: {}
      restartPolicy: OnFailure
