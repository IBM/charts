{{- include "sch.config.init" (list . "asm.sch.chart.config.values") -}}
{{- $rootData := fromYaml (include "parent.data" .) }}
{{- $rootMetering := $rootData.metering -}}
{{- $esReplicas := int ( include "es.replicas" . ) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sch.names.fullName" (list .) }}
  labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 4 }}
spec:
  progressDeadlineSeconds: 900
  {{- if not ( default .Values.global.minReplicasHPAs .Values.minReplicasHPAs ) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 6 }}
  template:
    metadata:
      annotations:
        {{- include "sch.metadata.annotations.metering" (list . $rootMetering) | indent 8 }}
      labels:
{{ include "sch.metadata.labels.standard" (list . "") | indent 8}}
    spec:
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      supplementalGroups:
      {{- range $group := .Values.global.persistence.supplementalGroups }}
        - {{ $group -}}
      {{ end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                {{- range $arch := .Values.arch }}
                  - {{ $arch -}}
                {{ end }}
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: NotIn
                  values:
                  - {{ include "sch.names.appName" (list .) }}
                - key: release
                  operator: NotIn
                  values:
                  - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
            weight: 50
      initContainers:
      - name: wait-for-elasticsearch
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.baseImage.name }}:{{ .Values.baseImage.tag }}
        imagePullPolicy: {{.Values.global.image.pullPolicy}}
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
        env:
        - name: SERVICE
          value: {{ .Release.Name }}-elasticsearch
        - name: EXPECTED_COUNT
          value:  {{ include "es.replicas" . | quote }}
        command:
        - /bin/sh
        - -c
        - /opt/ibm/netcool/asm/bin/check-service-endpoint-count.sh
      - name: wait-for-topology
        image: {{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{ .Values.baseImage.name }}:{{ .Values.baseImage.tag }}
        imagePullPolicy: {{.Values.global.image.pullPolicy}}
        resources:
{{ include "asm.minimalPodResources" . | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
        env:
        - name: SERVICE
          value: {{ .Release.Name }}-topology
        - name: EXPECTED_COUNT
          value: "1"
        command:
        - /bin/sh
        - -c
        - /opt/ibm/netcool/asm/bin/check-service-endpoint-count.sh
      containers:
      - name: {{ include "sch.names.fullName" (list .) }}
        image: "{{ include "asm.getImageRepo" . | trimSuffix "/" }}/{{.Values.image.name}}:{{.Values.image.tag}}"
        imagePullPolicy: {{.Values.global.image.pullPolicy}}
        env:
        - name: SEARCH_SERVICE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DISTINGUISHED_NAME
          value: {{ include "sch.names.fullName" (list .) }}.{{ .Release.Namespace }}.svc
        {{- if .Values.global.asm.disableHTTPS }}
        - name: SERVER_APPCONNECTOR_TYPE
          value: http
        - name: SERVER_ADMINCONNECTOR_TYPE
          value: http
        {{- end }}
        - name: ELASTICSEARCH_HOST
          value: {{ .Release.Name }}-elasticsearch
        - name: ELASTICSEARCH_PORT
          value: "9300"
        - name: ELASTICSEARCH_SHARDS
          value: "5"
        - name: ELASTICSEARCH_REPLICA_SHARDS
          {{- if eq $esReplicas 1 }}
          value: "0"
          {{- else if eq $esReplicas 2 }}
          value: "1"
          {{- else }}
          value: "2"
          {{- end }}
        - name: HISTORY_TTL
          value: {{ .Values.global.asm.historyTtlHours | quote }}
        - name: TOPOLOGY_SERVICE_HOST
          value: {{ .Release.Name }}-topology
        - name: TOPOLOGY_SERVICE_PORT
          value: "8080"
        {{- if not .Values.global.kafka.disabled }}
        - name: KAFKA_SERVER
          value: {{ .Release.Name }}-kafka:9092
        - name: KAFKA_SERVICE_HOST
          value: {{ .Release.Name }}-kafka
        - name: KAFKA_SERVICE_PORT_KAFKAREST
          value: {{ .Values.global.kafka.kafkaRestInsecurePort | quote }}
        {{- end }}
        - name: LOG_LEVEL
          value: {{ .Values.logging.level }}
        - name: KAFKA_MAX_POLL_INTERVAL
          value: {{ .Values.kafkaConsumer.maxPollIntervalMs | quote }}
        - name: KAFKA_MAX_POLL_RECORDS
          value: {{ .Values.kafkaConsumer.maxPollRecords | quote }}
        - name: LOGGING_CONSOLE_THRESHOLD
          value: {{ .Values.logging.console.threshold | quote }}
        - name: LOGGING_FILE_THRESHOLD
          value: {{ .Values.logging.file.threshold | quote }}
        - name: LOG_RETENTION_DAYS
          value: {{ .Values.logging.file.archivedFileCount | quote}}
        - name: JVM_ARGS
          value: {{ include "asm.sizeData" (list . "jvmArgs") | quote }}
        {{- if .Values.global.asm.authentication }}
        - name: ASM_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-asm-credentials
              key: username
        - name: ASM_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-asm-credentials
              key: password
        - name: AUTH_ENABLED
          value: "1"
        {{- end }}
        ports:
        - containerPort: {{ .Values.httpPort }}
        - containerPort: {{ .Values.adminPort }}
        resources:
{{ include "asm.sizeData" (list . "resources") | indent 10 }}
        securityContext:
{{ include "asm.containerSecurityContext" (list . "") | indent 10 }}
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.adminPort }}
            scheme: HTTP{{ if not .Values.global.asm.disableHTTPS }}S{{ end }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.adminPort }}
            scheme: HTTP{{ if not .Values.global.asm.disableHTTPS }}S{{ end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /opt/ibm/netcool/asm/security
          name: asm-security
        - mountPath: /var/log/itsm
          name: logs
      dnsPolicy: ClusterFirst
      volumes:
      - name: asm-security
        projected:
          sources:
            - secret:
                name: "{{ .Release.Name }}-ca-secret"
                optional: false
            - secret:
                name: "{{ .Release.Name }}-custom-secrets"
                optional: true
      - name: logs
        emptyDir: {}
