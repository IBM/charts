apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "redis.fullname" . }}
    helm.sh/chart: {{ include "redis.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "redis.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "redis.fullname" . }}
        helm.sh/chart: {{ include "redis.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        {{- include "ibm-mss-prod.releaseAnnotations" . | indent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ include "mss.ContainerUID" . }}
      affinity:
      {{- include "mss.nodeaffinity" . | indent 6 }}
      {{- include "ibm-mss-prod.tolerations" . | indent 6 }}
      {{- include "ibm-mss-prod.serviceaccount" . | indent 6 }}
      containers:
        - name: {{ include "redis.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "redis-server"
            - "/etc/redis/redis.conf"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: {{ include "mss.ContainerUID" . }}
          ports:
            - containerPort: 6379
              protocol: TCP
              name: cli
          readinessProbe:
            tcpSocket:
              port:  cli
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: cli
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/redis
      volumes:
        - name: config
          configMap:
            name: {{ include "redis.fullname" . }}
            items:
              - key: redis.conf
                path: redis.conf
