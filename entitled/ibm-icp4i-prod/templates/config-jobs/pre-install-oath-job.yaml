###############################################################################
#  Licensed Materials - Property of IBM
#
# 5737-I89
# Â© Copyright IBM Corp. 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

###############################################################################
# Runs a container that registers the UI as an OAuth endpoint
###############################################################################
{{- include "sch.config.init" (list . ) }}
{{- $jobName := include "sch.names.fullCompName" (list . "oauth-job") }}
{{- $labels := include "sch.metadata.labels.standard" (list . "" (dict "serviceSelector" "oauth")) }}
{{- $saName := include "sch.names.fullCompName" (list . "config-serviceaccount") }}
{{- $scriptsName := include "sch.names.fullCompName" (list . "oauth-scripts") }}
{{- $oidcClientName :=  printf "%s-%s" (include "icip-navigator.fullname" . )  "oidc-client" }}
{{- $oidcSecretName :=  printf "%s-%s" (include "icip-navigator.fullname" . )  "oidc-secret" }}
{{- $icp4iConfigmapName :=  printf "%s-%s" (include "icip-navigator.fullname" . )  "configmap" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $jobName }}
  labels:
{{ $labels | indent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-succeeded, before-hook-creation
    # This needs to happen after the roles are created
    "helm.sh/hook-weight": "3"
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
{{ $labels | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - {{ .Values.arch }}
      hostNetwork: false
      hostPID: false
      hostIPC: false
      restartPolicy: Never
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      serviceAccountName: {{ $saName }}
      containers:
        - name: oauth
          image: "{{ .Values.image.configurator }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: false
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
              - ALL
          workingDir: /scripts
          command: ["/bin/sh", "./oauth.sh"]
          volumeMounts:
            - name: {{ $scriptsName }}
              mountPath: /scripts
              readOnly: true
          env:
            - name: "NAMESPACE"
              value: {{ .Release.Namespace | quote }}
            - name: "RELEASE_NAME"
              value: {{ .Release.Name | quote }}
            - name: "OIDC_CLIENT_NAME"
              value: {{ $oidcClientName }}
            - name: "OIDC_SECRET_NAME"
              value: {{ $oidcSecretName }}
            - name: "ICP4I_CONFIGMAP_NAME"
              value: {{ $icp4iConfigmapName }}
            - name: "INGRESS_PATH"
              value: {{ .Values.tls.ingresspath }}
            - name: "PLATFORM_HOSTNAME"
              value: {{ .Values.tls.hostname }}
            - name: "CALLBACK_URI"
              value: "auth/callback"
          resources:
{{ toYaml .Values.resources.jobs | indent 12 }}
      volumes:
        - name: {{ $scriptsName }}
          configMap:
            name: {{ $scriptsName }}
            defaultMode: 0555