# (C) Copyright 2019-2020 Syncsort Incorporated. All rights reserved.

# Default values for sfg.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  image:
    repository: "cp.icr.io/cp/ibm-sfg/sfg"
  # Provide the tag value in double quotes
    tag: "6.1.0.1"
    pullPolicy: IfNotPresent
    pullSecret: ""

arch: amd64

serviceAccount:
  create: false
  name: default

persistence:
  enabled: true
  useDynamicProvisioning: false

appResourcesPVC:
  enabled: true
  name: resources
  storageClassName: ""
  selector:
    label: "intent"
    value: "resources"
  accessMode: ReadOnlyMany
  size: 100Mi


appLogsPVC:
  name: logs
  storageClassName: ""
  selector:
    label: "intent"
    value: "logs"
  accessMode: ReadWriteMany
  size: 500Mi
  
appDocumentsPVC:
  enabled: false
  name: documents
  storageClassName: ""
  selector:
    label: "intent"
    value: "documents"
  accessMode: ReadWriteMany
  size: 500Mi


security:
  supplementalGroups: [5555]
  fsGroup: 1010
  runAsUser: 1010


ingress:
  enabled: true
  controller: "nginx"
  annotations: {}
  port:

dataSetup:
  enabled: true
  upgrade: false


env:
  tz: "UTC"
  license: "accept"
  upgradeCompatibilityVerified: false
  
logs:

  # true if user wish to redirect the application logs to console else false. If provided value is true , then application logs will reside inside containers. No volume mapping will be used.
  enableAppLogOnConsole: true
      
  # In standalone kubernetes environment, if PodSecurityPolicy is enabled and no default PSPs are present then change the value below to true.      
applyPolicyToKubeSystem: false

integrations:
  seasIntegration:
    isEnabled: false
    seasVersion: "1.0"

  #setup.cfg configuration starts here. Property names must follow camelCase format.
setupCfg:
  #Upgrade
  #upgrade: false
  basePort: 50000
  #License - specify values as true/false
  licenseAcceptEnableSfg: false
  licenseAcceptEnableEbics: false
  licenseAcceptEnableFinancialServices: false
  licenseAcceptEnableFileOperation: false

  # Name of system passphrase secret if available
  systemPassphraseSecret: 
  #FIPS compliance mode. specify values as true/false 
  enableFipsMode: false
  # NIST 800-131a compliance mode. Please enter one of these values - strict/transition/"off"
  nistComplianceMode: "off"

  # Provide the DB attributes
  dbVendor:
  dbHost:
  dbPort:
  dbData:
  dbDrivers:
  dbCreateSchema: true
  oracleUseServiceName: false
  # Values can be either true or false 
  usessl: false
  
  # Name of DB secret
  dbSecret:
  
  # Specify DB truststore file name including it's path relative to the mounted resources volume location, if applicable. Required when usessl is true.
  # When dbTruststoreSecret is mentioned, provide the name of the key holding the certificate data.
  dbTruststore:
  
  # Name of the DB truststore secret containing the certificate, if applicable
  dbTruststoreSecret:
  
  # Specify DB keystore file name including it's path relative to the mounted resources volume location, if applicable
  # When dbKeystoreSecret is mentioned, provide the name of the key holding the certificate data.
  dbKeystore:
  
  # Name of the DB keystore secret containing the certificate, if applicable
  dbKeystoreSecret:
    
  #Provide the admin email address
  adminEmailAddress:
  # Provide the SMTP host details  
  smtpHost:

  #Provide the soft stop timeout. Only numeric value is accepted.
  softStopTimeout:

  #WMQ
  #JMS properties are optional if jmsVendor is empty
  #To use IBMMQ for communication between ASI & AC, change property to jmsVendor: IBMMQ
  # and provide other connection details
  jmsVendor:
  # Provide the name of connection factory class. 
  jmsConnectionFactory:
  jmsConnectionFactoryInstantiator:
  jmsQueueName:
  jmsHost:
  jmsPort:
  jmsConnectionNameList:
  # Applicable for IBMMQ
  jmsChannel:
  jmsEnableSsl:
  
  # Name of JMS secret if available
  jmsSecret:
  
  # Specify JMS keystore file name including it's path relative to the mounted resources volume location, if applicable.
  # When jmsKeystoreSecret is mentioned, provide the name of the key holding the certificate data.
  jmsKeystorePath:
  
  # Name of the JMS keystore secret containing the certificate, if applicable
  jmsKeystoreSecret:
  
  # Specify JMS truststore file name including it's path relative to the mounted resources volume location, if applicable.
  # When jmsTruststoreSecret is mentioned, provide the name of the key holding the certificate data.
  jmsTruststorePath:
  
  # Name of the JMS truststore secret containing the certificate, if applicable
  jmsTruststoreSecret:

  # Applicable for IBMMQ
  jmsCiphersuite:
  # Applicable for IBMMQ
  jmsProtocol: TLSv1.2

  # Liberty Profile SSL Config. Specify Liberty keystore file name including it's path relative to the mounted resources volume location, if applicable.
  # If libertyKeystoreSecret is mentioned, provide the name of the key holding the certificate data. 
  libertyKeystoreLocation:
  
  # Name of Liberty keystore secret containing the certificate, if applicable
  libertyKeystoreSecret:  
  
  libertyProtocol: TLSv1.2
  
  # Name of Liberty secret if available
  libertySecret:

  #jvm options
  libertyJvmOptions:

  #JCE update parameters
  #Set value true to update JCE
  updateJcePolicyFile: false
  #Name of JCE file. This file should be present in mapped folder
  jcePolicyFile:

asi:
  replicaCount: 1
  
  env:
    jvmOptions:
    
  frontendService:
    type: ClusterIP
    ports:
      http: 
        name: http
        port: 35000
        targetPort: http
        nodePort: 30000
        protocol: TCP
      https: 
        name: https
        port: 35001
        targetPort: https
        nodePort: 30001
        protocol: TCP
      soa: 
        name: soa
        port: 35002
        targetPort: soa
        nodePort: 30002
        protocol: TCP
      soassl: 
        name: soassl
        port: 35003
        targetPort: soassl
        nodePort: 30003
        protocol: TCP
      restHttpAdapter: 
        name: rest-adapter
        port: 35007
        targetPort: rest-adapter
        nodePort: 30007
        protocol: TCP 
    extraPorts: []
      #-name: http-1
      # port: 46000
      # targetPort: http
      # nodePort: 30100
      # protocol: TCP
    loadBalancerIP:  
    annotations: {}  
  
  backendService:
    type: LoadBalancer
    ports: []
      #- name: adapter-1
      #  port: 30201
      #  targetPort: 30201
      #  nodePort: 30201
      #  protocol: TCP
    portRanges: []
      #- name: adapters
      #  portRange: 30301-30400
      #  targetPortRange: 30301-30400
      #  nodePortRange: 30301-30400
      #  protocol: TCP
    loadBalancerIP:  
    annotations: {}
      
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 30
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 60
  
  internalAccess:
    enableHttps: false
    httpsPort:     
      
  externalAccess:
    protocol: http
    address: 
    port:
    
  ingress:
    internal:
      host:
      tls:
        enabled: false
        secretName: ""
      extraPaths: []
      #  - routePrefix: "hello"
      #    path: "/hello"
      #    servicePort: "my-http"
      #    enableHttps: false
    external:
      host:
      tls:
        enabled: false
        secretName: ""
      extraPaths: []
      #  - routePrefix: "hello"
      #    path: "/hello"
      #    servicePort: "my-http"
      #    enableHttps: false
      #    access: "internal"

  extraPVCs: []
    #- name: 
    #  storageClassName:
    #  selector:
    #    label:
    #    value:
    #  accessMode:
    #  size:
  
  extraVolumeMounts: []
    #- name: pvc-name
    #  mountPath: /ibm/shared
 
    #supported values - nfs/host.
    #type: host
    # Required when type is set to nfs
    #nfsServer: 127.0.0.1
    #resourcesDir: /path/to/resources/dir
    #dbResourcesDir: /path/to/dbresources/dir

  ## Additional init containers, e. g. for providing custom themes
  extraInitContainers: []
    #- name: wait-for-postgresql
    #  image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
    #  imagePullPolicy: {{ .Values.init.image.pullPolicy }}
    #  command:

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 2000m
      memory: 4Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #asiLabel: asiValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
    #- maxSkew: 1
    #  topologyKey: topology.kubernetes.io/zone
    #  whenUnsatisfiable: DoNotSchedule
    #- maxSkew: 1
    #  topologyKey: kubernetes.io/hostname
    #  whenUnsatisfiable: ScheduleAnyway
    
  # for Taints and Tolerations  
  tolerations: [] 
  #- key: "key1"
  #  operator: "Equal"
  #  value: "value1"
  #  effect: "NoExecute"
  #  tolerationSeconds: 3600
  #- key: "key2"
  #  operator: "Exists"
  #  effect: "NoSchedule"

  #To provide additional secrets inside application. If mountAsVolume is set to true, secret will be mounted as volume under /ibm/resources/<secretName> directory
  #else it will exposed as environment variable
  extraSecrets: []
    #- mountAsVolume: true
    #  secretName: jms-truststore
    #- mountAsVolume: true
    #  secretName: db-truststore

  #To provide additional configmaps inside application. If mountAsVolume is set to true, configmap will be mounted as volume under /ibm/resources/<configMapName> directory
  #else it will exposed as environment variable
  extraConfigMaps: []
    #- mountAsVolume: true
    #  configMapName: my-configmap-1
    #- mountAsVolume: false
    #  configMapName: my-configmap-2
  
  #If myFG is hosted on HTTP Server adapter on ASI server, provide the internal port/protocol details used while configuring that.
  myFgAccess:
    myFgPort:
    myFgProtocol:
 
ac:

  replicaCount: 1

  env:
    jvmOptions:
    
  frontendService:
    type: ClusterIP
    ports:
      http: 
        name: http
        port: 35004
        targetPort: http
        nodePort: 30004
        protocol: TCP
    extraPorts: []
      #-name: http-1
      # port: 37000
      # targetPort: http
      # nodePort: 30200
      # protocol: TCP
    loadBalancerIP:  
    annotations: {}  
      
  backendService:
    type: LoadBalancer
    ports: []
      #- name: adapter-1
      #  port: 30401
      #  targetPort: 30401
      #  nodePort: 30401
      #  protocol: TCP
    portRanges: []
      #- name: adapters
      #  portRange: 30501-30600
      #  targetPortRange: 30501-30600
      #  nodePortRange: 30501-30600
      #  protocol: TCP
    loadBalancerIP:  
    annotations: {} 

  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 60

  ingress:
    internal:
      host:
      tls:
        enabled: false
        secretName: ""
      extraPaths: []
      #  - routePrefix: "hello"
      #    path: "/hello"
      #    servicePort: "my-http"
      #    enableHttps: false
    external:
      host:
      tls:
        enabled: false
        secretName: ""
      extraPaths: []
      #  - routePrefix: "hello"
      #    path: "/hello"
      #    servicePort: "my-http"
      #    enableHttps: false
      #    access: "internal"
  
  extraPVCs: []
    #- name: 
    #  storageClassName:
    #  selector:
    #    label:
    #    value:
    #  accessMode:
    #  size:
  
  extraVolumeMounts: []
    #- name: pvc-name
    #  mountPath: /ibm/shared
 
    #supported values - nfs/host.
    #type: host
    # Required when type is set to nfs
    #nfsServer: 127.0.0.1
    #resourcesDir: /path/to/resources/dir
    #dbResourcesDir: /path/to/dbresources/dir
  
  ## Additional init containers, e. g. for providing custom themes
  extraInitContainers: []
    #- name: wait-for-postgresql
    #  image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
    #  imagePullPolicy: {{ .Values.init.image.pullPolicy }}
    #  command:

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 4000m
      memory: 8Gi
    requests:
      cpu: 2000m
      memory: 4Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 60

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #acLabel: acValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
    #- maxSkew: 1
    #  topologyKey: topology.kubernetes.io/zone
    #  whenUnsatisfiable: DoNotSchedule
    #- maxSkew: 1
    #  topologyKey: kubernetes.io/hostname
    #  whenUnsatisfiable: ScheduleAnyway
  
  # for Taints and Tolerations  
  tolerations: [] 
  #- key: "key1"
  #  operator: "Equal"
  #  value: "value1"
  #  effect: "NoExecute"
  #  tolerationSeconds: 3600
  #- key: "key2"
  #  operator: "Exists"
  #  effect: "NoSchedule"  

  #To provide additional secrets inside application. If mountAsVolume is set to true, secret will be mounted as volume under /ibm/resources/<secretName> directory
  #else it will exposed as environment variable
  extraSecrets: []
    #- mountAsVolume: true
    #  secretName: jms-truststore
    #- mountAsVolume: true
    #  secretName: db-truststore

  #To provide additional configmaps inside application. If mountAsVolume is set to true, configmap will be mounted as volume under /ibm/resources/<configMapName> directory
  #else it will exposed as environment variable
  extraConfigMaps: []
    #- mountAsVolume: true
    #  configMapName: my-configmap-1
    #- mountAsVolume: false
    #  configMapName: my-configmap-2

  #If myFG is hosted on HTTP Server adapter on AC server, provide the internal port/protocol details used while configuring that.
  myFgAccess:
    myFgPort:
    myFgProtocol:
    
api:

  replicaCount: 1

  env:
    jvmOptions:
    
  frontendService:
    type: ClusterIP
    ports:
      http:
        name: http
        port: 35005
        targetPort: http
        nodePort: 30005
        protocol: TCP
      https:
        name: https
        port: 35006
        targetPort: https
        nodePort: 30006
        protocol: TCP
    extraPorts: []
      #-name: http-1
      # port: 35000
      # targetPort: http
      # nodePort: 30300
      # protocol: TCP
    loadBalancerIP:  
    annotations: {}  
  
  livenessProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 60
    
  readinessProbe:
    initialDelaySeconds: 120
    timeoutSeconds: 5
    periodSeconds: 60
    
  internalAccess:
    enableHttps: false

  externalAccess:
    protocol: http
    address: 
    port: 

  ingress:
    internal:
      host:
      tls:
        enabled: false
        secretName: ""

  extraPVCs: []
    #- name: 
    #  storageClassName:
    #  selector:
    #    label:
    #    value:
    #  accessMode:
    #  size:
  
  extraVolumeMounts: []
    #- name: pvc-name
    #  mountPath: /ibm/shared
 
    #supported values - nfs/host.
    #type: host
    # Required when type is set to nfs
    #nfsServer: 127.0.0.1
    #resourcesDir: /path/to/resources/dir
    #dbResourcesDir: /path/to/dbresources/dir

  ## Additional init containers, e. g. for providing custom themes
  extraInitContainers: []
    #- name: wait-for-postgresql
    #  image: "{{ .Values.init.image.repository }}:{{ .Values.init.image.tag }}"
    #  imagePullPolicy: {{ .Values.init.image.pullPolicy }}
    #  command:

  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 4000m
      memory: 4Gi
    requests:
      cpu: 2000m
      memory: 2Gi

  defaultPodDisruptionBudget:
    enabled: false
    minAvailable: 1
  
  # for pod Affinity and podAntiAffinity
  extraLabels: {}
    #apiLabel: apiValue
  
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
  
  topologySpreadConstraints: []
    #- maxSkew: 1
    #  topologyKey: topology.kubernetes.io/zone
    #  whenUnsatisfiable: DoNotSchedule
    #- maxSkew: 1
    #  topologyKey: kubernetes.io/hostname
    #  whenUnsatisfiable: ScheduleAnyway
    
  # for Taints and Tolerations  
  tolerations: [] 
  #- key: "key1"
  #  operator: "Equal"
  #  value: "value1"
  #  effect: "NoExecute"
  #  tolerationSeconds: 3600
  #- key: "key2"
  #  operator: "Exists"
  #  effect: "NoSchedule"  

  #To provide additional secrets inside application. If mountAsVolume is set to true, secret will be mounted as volume under /ibm/resources/<secretName> directory
  #else it will exposed as environment variables
  extraSecrets: []
    #- mountAsVolume: true
    #  secretName: jms-truststore
    #- mountAsVolume: true
    #  secretName: db-truststore

  #To provide additional configmaps inside application. If mountAsVolume is set to true, configmap will be mounted as volume under /ibm/resources/<configMapName> directory
  #else it will exposed as environment variables
  extraConfigMaps: []
    #- mountAsVolume: true
    #  configMapName: my-configmap-1
    #- mountAsVolume: false
    #  configMapName: my-configmap-2

nameOverride: ""

fullnameOverride: ""

dashboard:
    enabled: false

# Test container
test:
  image:
    repository: 'ibmcom'
    name: 'opencontent-common-utils'
    tag: '1.1.4'
    pullPolicy: 'IfNotPresent'

purge:
  enabled: true
  image:
    repository: "cp.icr.io/cp/ibm-sfg/sfg-purge"
  # Provide the tag value in double quotes
    tag: "6.1.0.1"
    pullPolicy: IfNotPresent
    pullSecret: ""
  # Provide a schedule for the purge job as a cron expression. For example "0 0 * * *" will run the purge job at 00:00 every day
  schedule:
  startingDeadlineSeconds: 60
  activeDeadlineSeconds: 3600
  concurrencyPolicy: Forbid
  suspend: false
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  env:
    jvmOptions:
  resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 500Mi 
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution: []
   