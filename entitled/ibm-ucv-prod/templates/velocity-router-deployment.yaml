apiVersion: apps/v1
kind: Deployment
metadata:
  name: velocity-router
  labels:
    {{- include "ucv.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- $vars := merge (dict) . -}}
      {{- $_ := set $vars "ucvService" "velocity-router" -}}
      {{- include "ucv.selector" $vars | nindent 6 }}
  template:
    metadata:
      labels:
        {{- $vars := merge (dict) . -}}
        {{- $_ := set $vars "ucvService" "velocity-router" -}}
        {{- include "ucv.specTemplateLabels" $vars | nindent 8 }}
      annotations:
        {{- include "ucv.productAnnotations" . | nindent 8 }}
    spec:
      serviceAccountName: velocity-service-account
      hostNetwork: false
      hostPID: false
      hostIPC: false
      imagePullSecrets:
        {{- include "ucv.imagePullSecrets" . | nindent 8 }}
      affinity:
        {{- include "ucv.nodeAffinity" . | nindent 8 }}
      containers:
        - name: nginx
          image: 'bitnami/nginx:1.14'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: nginx-conf
              mountPath: /opt/bitnami/nginx/conf/
            - name: nginx-ssl
              mountPath: /opt/bitnami/nginx/conf/ssl/
            - name: nginx-pid
              mountPath: /opt/bitnami/nginx/pid
          resources:
            {{- include "ucv.resources" . | nindent 12 }}
          securityContext:
            {{- include "ucv.securityContext" . | nindent 12 }}
          livenessProbe:
            {{- $port := dict "ucvLivenessPort" 8080 }}
            {{- include "ucv.livenessProbe" $port | nindent 12 }}
          readinessProbe:
            {{- $port := dict "ucvReadinessPort" 8080 }}
            {{- include "ucv.readinessProbe" $port | nindent 12 }}
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: nginx-ssl
          secret:
            secretName: {{ .Values.secrets.tls }}
            items:
              - key: tls.key
                path: server.key
              - key: tls.crt
                path: server.crt
        - name: nginx-pid
          emptyDir: {}
