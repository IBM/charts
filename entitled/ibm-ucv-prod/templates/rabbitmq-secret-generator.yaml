apiVersion: v1
kind: ServiceAccount
metadata:
  name: ucv-rabbitmq-gen
  labels:
    {{- include "ucv.labels" . | nindent 4 }}
imagePullSecrets:
  {{- include "ucv.imagePullSecrets" . | nindent 2 }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ucv-rabbitmq-gen
  labels:
    {{- include "ucv.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["list", "create", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ucv-rabbitmq-gen
  labels:
    {{- include "ucv.labels" . | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ucv-rabbitmq-gen
subjects:
- kind: ServiceAccount
  name: ucv-rabbitmq-gen
  namespace: {{ .Release.Namespace }}

---

apiVersion: batch/v1
kind: Job
metadata:
  name: rabbitmq-secret-generator
  labels:
    {{- include "ucv.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        {{- $vars := merge (dict) . -}}
        {{- $_ := set $vars "ucvService" "rabbitmq-secret-generator" -}}
        {{- include "ucv.specTemplateLabels" $vars | nindent 8 }}
      annotations:
        {{- include "ucv.productAnnotations" . | nindent 8 }}
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      imagePullSecrets:
        {{- include "ucv.imagePullSecrets" . | nindent 8 }}
      affinity:
        {{- include "ucv.nodeAffinity" . | nindent 8 }}
      restartPolicy: Never
      serviceAccountName: ucv-rabbitmq-gen
      containers:
        - name: rabbitmq-secret-generator
          image: 'ibmcom/opencontent-common-utils:1.1.2'
          imagePullPolicy: IfNotPresent
          command:
          - /bin/bash
          - -c
          - |
              SECRET_NAME="{{.Values.secrets.rabbit}}"
              EXISTING_SECRET=$(kubectl get secret ${SECRET_NAME} -o name 2>&1)
              if [[ "$EXISTING_SECRET" == "secret/${SECRET_NAME}" ]]; then
                echo "Secret '${SECRET_NAME}' already exists"
                exit 0
              fi
              echo "Creating secret '${SECRET_NAME}'..."
              USER='rabbit'
              PASSWORD=$(echo -n $(openssl rand -hex 16))
              # hashing password according to https://www.rabbitmq.com/passwords.html#computing-password-hash
              SALT=$(openssl rand -hex 4)
              HEXED_PASS=$(echo -n $(echo -n "${PASSWORD}" | od -A n -t x1 | sed 's/ *//g') | sed 's/ *//g')
              SALTED_PASS="${SALT}${HEXED_PASS}"
              SALTED_PASS_BYTES=$(printf $(echo -n "${SALTED_PASS}" | sed 's/\([0-9A-F]\{2\}\)/\\x\1/gI'))
              HASH=$(echo -n "${SALTED_PASS_BYTES}" | openssl sha256 -hex | sed "s/(stdin)= //")
              SALTED_HASH="${SALT}${HASH}"
              HASHED_PASSWORD=$(printf $(echo -n "${SALTED_HASH}" | sed 's/\([0-9A-F]\{2\}\)/\\x\1/gI') | base64)
              set -e
              cat <<EOF | kubectl create -f -
                apiVersion: v1
                kind: Secret
                type: Opaque
                metadata:
                  name: '${SECRET_NAME}'
                  labels:
                    {{- include "ucv.labels" . | nindent 20 }}
                stringData:
                  user: '${USER}'
                  password: '${PASSWORD}'
                  enabled_plugins: '[rabbitmq_management, rabbitmq_peer_discovery_k8s].'
                  rabbitmq.conf: |-
                    loopback_users.guest = false
                    management.load_definitions = /opt/bitnami/rabbitmq/conf/definitions.json
                  definitions.json: |-
                    {
                      "rabbit_version": "3.6.15",
                      "users": [
                        {
                          "name": "${USER}",
                          "password_hash": "${HASHED_PASSWORD}",
                          "hashing_algorithm": "rabbit_password_hashing_sha256",
                          "tags": "administrator"
                        },
                        {
                          "name": "jenkins",
                          "password_hash": "XfUcBp1AFfV/6ij2btKeh+/ftE5hT4bRLmDlDIe5mD+EqB6A",
                          "hashing_algorithm": "rabbit_password_hashing_sha256",
                          "tags": ""
                        }
                      ],
                      "vhosts": [
                        {
                          "name": "/"
                        }
                      ],
                      "permissions": [
                        {
                          "user": "rabbit",
                          "vhost": "/",
                          "configure": ".*",
                          "write": ".*",
                          "read": ".*"
                        },
                        {
                          "user": "jenkins",
                          "vhost": "/",
                          "configure": "",
                          "write": "",
                          "read": "jenkins.client.*"
                        }
                      ],
                      "parameters": [],
                      "global_parameters": [
                        {
                          "name": "cluster_name",
                          "value": "rabbit@rabbitnode1"
                        }
                      ],
                      "policies": [
                        {
                          "vhost": "/",
                          "name": "jenkins-ttl",
                          "pattern": "^jenkins.client",
                          "apply-to": "queues",
                          "definition": {
                            "message-ttl": 180000
                          }
                        }
                      ],
                      "queues": [
                        {
                          "name": "releaseEventUpdated-continuous-release-ui",
                          "vhost": "/",
                          "durable": true,
                          "auto_delete": false,
                          "arguments": {}
                        },
                        {
                          "name": "continuous-release-ui",
                          "vhost": "/",
                          "durable": true,
                          "auto_delete": false,
                          "arguments": {}
                        }
                      ],
                      "exchanges": [
                        {
                          "name": "releaseEventAdded",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "releaseEventDeleted",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "releaseTagAdded",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "jenkins",
                          "vhost": "/",
                          "type": "topic",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "release",
                          "vhost": "/",
                          "type": "topic",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "pipeline",
                          "vhost": "/",
                          "type": "topic",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "deploymentPlanUpdateRemove",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "manualAndApprovalTaskAdded",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "manualAndApprovalTaskRemoved",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "deploymentPlanAdded",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "releaseTagDeleted",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "deploymentPlanUpdated",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "deploymentPlanDeleted",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "manualAndApprovalTaskUpdated",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "releaseTagUpdated",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "releaseEventPlanStatsUpdated",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        },
                        {
                          "name": "releaseEventUpdated",
                          "vhost": "/",
                          "type": "fanout",
                          "durable": true,
                          "auto_delete": false,
                          "internal": false,
                          "arguments": {}
                        }
                      ],
                      "bindings": [
                        {
                          "source": "pipeline",
                          "vhost": "/",
                          "destination": "continuous-release-ui",
                          "destination_type": "queue",
                          "routing_key": "pipelines.#",
                          "arguments": {}
                        },
                        {
                          "source": "releaseEventUpdated",
                          "vhost": "/",
                          "destination": "releaseEventUpdated-continuous-release-ui",
                          "destination_type": "queue",
                          "routing_key": "*",
                          "arguments": {}
                        }
                      ]
                    }
                
              EOF
          resources:
            {{- include "ucv.resources" . | nindent 12 }}
          securityContext:
            {{- include "ucv.securityContext" . | nindent 12 }}
          livenessProbe:
            {{- $port := dict "ucvLivenessPort" 9090 }}
            {{- include "ucv.livenessProbe" $port | nindent 12 }}
          readinessProbe:
            {{- $port := dict "ucvReadinessPort" 9090 }}
            {{- include "ucv.readinessProbe" $port | nindent 12 }}