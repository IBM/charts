{{- include "sch.config.init" (list . "nlu.sch.chart.config.values") -}}
{{- $icpNLUServerCompName :=  .sch.chart.components.nluserver.name -}}
{{- $icpModelsServerCompName :=  .sch.chart.components.nms.name -}}
{{- $icpTestCompName := printf "dvt-test" -}}
{{- $icpPullSecrets := include "icp-pull-secrets" . -}}

apiVersion: v1
kind: Pod
metadata:
  name: {{ include "sch.names.fullCompName" (list . $icpTestCompName) }}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: {{ include "sch.names.fullCompName" (list . $icpNLUServerCompName) }}
  annotations:
    "helm.sh/hook": test-success
spec:
{{- include "sch.security.securityContext" (list . .sch.chart.specSecurityContext) | indent 2 }}
  imagePullSecrets:
  - name: {{ $icpPullSecrets | quote }}
  # Init container makes a sample call to Sentiment to prevent timeouts (cold start problem)
  initContainers:
    - name: cold-start-resolver
      image: "{{ .Values.global.icpDockerRepo }}{{ .Values.icpTests.image.repository }}:{{ .Values.icpTests.image.tag }}"
      command:
        - "/bin/bash"
        - -c
        - |
          for i in {1..{{ add 1 .Values.nluserver.replicas }}}
          do
            curl -k -X POST \
            -H 'Cache-Control: no-cache' \
            -h 'Content-Type: application/json' \
            'https://{{ include "sch.names.fullCompName" (list . $icpNLUServerCompName) }}:443/natural-language-understanding/api/v1/analyze?version=2018-03-16' \
            -d '{ "text":"I run to resolve the cold starts.", "features":{ "sentiment":{} }}'
          done
{{- include "sch.security.securityContext" (list . .sch.chart.containerSecurityContext) | indent 6 }}
      resources:
        limits:
          memory: {{ .Values.icpTests.resources.limits.memory }}
          cpu:  {{ .Values.icpTests.resources.limits.cpu }}
        requests:
          memory:  {{ .Values.icpTests.resources.requests.memory }}
          cpu:  {{ .Values.icpTests.resources.requests.cpu }}
  containers:
    - name: {{ include "sch.names.fullCompName" (list . $icpTestCompName) }}
      image: "{{ .Values.global.icpDockerRepo }}{{ .Values.icpTests.image.repository }}:{{ .Values.icpTests.image.tag }}"
      env:
        - name: BASE_URL
          value: "https://{{ include "sch.names.fullCompName" (list . $icpNLUServerCompName) }}"
        - name: MODELS_SERVER_URL
          value: "https://{{ .Release.Name }}-ibm-watson-nms-prod-{{ $icpModelsServerCompName }}:{{ .Values.global.modelsServer.port }}"
      volumeMounts:
        - name: dvt-config
          mountPath: /app/config/dvt/config.yml
          subPath: config.yml
        - name: dvt-config
          mountPath: /app/config/dvt/default_config.yml
          subPath: default_config.yml
      command: ['npm']
      args:  ['run', 'icp_test']
{{- include "sch.security.securityContext" (list . .sch.chart.containerSecurityContext) | indent 6 }}
      resources:
        limits:
          memory: {{ .Values.icpTests.resources.limits.memory }}
          cpu:  {{ .Values.icpTests.resources.limits.cpu }}
        requests:
          memory:  {{ .Values.icpTests.resources.requests.memory }}
          cpu:  {{ .Values.icpTests.resources.requests.cpu }}
  volumes:
    - name: dvt-config
      configMap:
        name: {{ .Release.Name }}-dvt-config-public
  restartPolicy: Never
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: beta.kubernetes.io/arch
            operator: In
            values:
            - "amd64"
